
/*
 * This file was generated by the SOM Compiler.
 * FileName: pid.h.
 * Generated using:
 *     SOM Precompiler somipc: 2.29.1.17
 *     SOM Emitter emith: 2.47
 */

/*
 *    COMPONENT_NAME: somp
 * 
 *    ORIGINS: 27
 * 
 * 
 *     25H7912  (C)  COPYRIGHT International Business Machines Corp. 1992,1994,1996
 *    All Rights Reserved
 *    Licensed Materials - Property of IBM
 *    US Government Users Restricted Rights - Use, duplication or
 *    disclosure restricted by GSA ADP Schedule Contract with IBM Corp.
 * 
 */


#ifndef SOM_SOMPPersistentId_h
#define SOM_SOMPPersistentId_h


#include <som.h>

/*
 * -- This emitter treats Method Tokens as Thunks by default.
 * -- Use the sc modifier "nothunks" to change this default
 */
#undef somresolve_
#define somresolve_(obj,mToken) ((somMethodProc*)((void)obj, mToken))

/*
 * Define the class name as an object type
 */
#ifndef SOMPPersistentId
#define SOMPPersistentId SOMObject
#endif
/*
 *  This is the class for a persistent ID.
 * 
 *  A persistent ID is a string of the form:
 * 
 *    IOGroupMgrClassname ':' RepositoryName ':' RepositoryOffset
 * 
 *  For the file system, an example of a persistent ID would be:
 * 
 *    "SOMPFSAIOGroupMgr:/u/otp/stuff/animals:0"
 * 
 *  where:
 * 
 *    SOMPFSAIOGroupMgr is the IO Group Mgr Class name
 * 
 *    /u/otp/stuff/animals is the Repository name (i.e. the file name)
 * 
 *    0 is the Repository offset (roughly, record number)
 */
#include <somsid.h>

/*
 * Start of bindings for IDL types
 */

#ifndef SOMClass
    #define SOMClass SOMObject
#endif /* SOMClass */

/*
 * End of bindings for IDL types.
 */

#define SOMPPersistentId_MajorVersion 2
#define SOMPPersistentId_MinorVersion 1

/*
 * External name shortening if required
 */
#ifdef SOM_USE_SHORT_EXTERNAL_NAMES
#define SOMPPersistentIdNewClass c
#pragma linkage(c, system)
#define SOMPPersistentIdClassData d
#define SOMPPersistentIdCClassData x
#endif /* SOM_USE_SHORT_EXTERNAL_NAMES */
/*--------------Migration------------*/
#define SOMPPersistentId_classObj SOMPPersistentIdClassData.classObject
#define _SOMPPersistentId SOMPPersistentId_classObj

/*
 * Declare the class creation procedure
 */
SOMEXTERN SOMClass * SOMLINK SOMPPersistentIdNewClass(integer4 somtmajorVersion,
		integer4 somtminorVersion);
#pragma linkage(SOMPPersistentIdNewClass, system)

/*
 * Declare the class data structure
 */
SOMEXTERN struct SOMPPersistentIdClassDataStructure {
	SOMClass *classObject;
	somMToken sompSetIOGroupMgrClassName;
	somMToken sompGetIOGroupMgrClassName;
	somMToken sompGetIOGroupMgrClassNameLen;
	somMToken sompSetIOGroupName;
	somMToken sompGetIOGroupName;
	somMToken sompGetIOGroupNameLen;
	somMToken sompSetGroupOffset;
	somMToken sompGetGroupOffset;
	somMToken sompEqualsIOGroupName;
	somMToken sompBuildIdString;
} SOMDLINK SOMPPersistentIdClassData;

/*
 * Declare the C specific class data structure
 */
SOMEXTERN struct SOMPPersistentIdCClassDataStructure {
	somMethodTabs parentMtab;
	somDToken instanceDataToken;
} SOMDLINK SOMPPersistentIdCClassData;

/*
 * New and Renew macros for SOMPPersistentId
 */
#define SOMPPersistentIdNew() \
   ( _SOMPPersistentId ? \
	_somNew(_SOMPPersistentId) \
	: ( SOMPPersistentIdNewClass(\
		SOMPPersistentId_MajorVersion, \
		SOMPPersistentId_MinorVersion),\
	   _somNew(_SOMPPersistentId)))
#define SOMPPersistentIdRenew(buf) \
   ( _SOMPPersistentId ? \
	_somRenew(_SOMPPersistentId, buf) \
	: ( SOMPPersistentIdNewClass(\
		SOMPPersistentId_MajorVersion, \
		SOMPPersistentId_MinorVersion),\
	   _somRenew(_SOMPPersistentId, buf)))

/*
 * Override method: somInit
 */
#define SOMPPersistentId_somInit(somSelf) \
	SOMObject_somInit(somSelf)

/*
 * Override method: somUninit
 */
#define SOMPPersistentId_somUninit(somSelf) \
	SOMObject_somUninit(somSelf)

/*
 * Override method: somDumpSelfInt
 */
#define SOMPPersistentId_somDumpSelfInt(somSelf,level) \
	SOMObject_somDumpSelfInt(somSelf,level)

/*
 * Override method: somutSetIdString
 */
#define SOMPPersistentId_somutSetIdString(somSelf,ev,IdString) \
	SOMUTStringId_somutSetIdString(somSelf,ev,IdString)

/*
 * Override method: somutSetIdId
 */
#define SOMPPersistentId_somutSetIdId(somSelf,ev,otherId) \
	SOMUTId_somutSetIdId(somSelf,ev,otherId)

/*
 * Override method: somutGetIdString
 */
#define SOMPPersistentId_somutGetIdString(somSelf,ev,toBuffer) \
	SOMUTStringId_somutGetIdString(somSelf,ev,toBuffer)

/*
 * Override method: somutGetIdStringLen
 */
#define SOMPPersistentId_somutGetIdStringLen(somSelf,ev) \
	SOMUTStringId_somutGetIdStringLen(somSelf,ev)

/*
 * Override method: somutEqualsId
 */
#define SOMPPersistentId_somutEqualsId(somSelf,ev,otherId) \
	SOMUTId_somutEqualsId(somSelf,ev,otherId)

/*
 * Override method: somutEqualsString
 */
#define SOMPPersistentId_somutEqualsString(somSelf,ev,IdString) \
	SOMUTStringId_somutEqualsString(somSelf,ev,IdString)

/*
 * Override method: somutCompareId
 */
#define SOMPPersistentId_somutCompareId(somSelf,ev,otherId) \
	SOMUTId_somutCompareId(somSelf,ev,otherId)

/*
 * Override method: somutCompareString
 */
#define SOMPPersistentId_somutCompareString(somSelf,ev,IdString) \
	SOMUTStringId_somutCompareString(somSelf,ev,IdString)

/*
 * Override method: somutHashId
 */
#define SOMPPersistentId_somutHashId(somSelf,ev) \
	SOMUTId_somutHashId(somSelf,ev)

/*
 * New Method: sompSetIOGroupMgrClassName
 */
typedef void   SOMLINK somTP_SOMPPersistentId_sompSetIOGroupMgrClassName(SOMPPersistentId *somSelf, Environment *ev, 
		string newName);
#pragma linkage(somTP_SOMPPersistentId_sompSetIOGroupMgrClassName, system)
typedef somTP_SOMPPersistentId_sompSetIOGroupMgrClassName *somTD_SOMPPersistentId_sompSetIOGroupMgrClassName;
/*
 *  Sets the IO Group Manager Class portion of the ID.
 */
#define somMD_SOMPPersistentId_sompSetIOGroupMgrClassName "::SOMPPersistentId::sompSetIOGroupMgrClassName"
#define SOMPPersistentId_sompSetIOGroupMgrClassName(somSelf,ev,newName) \
    (SOM_Resolve(somSelf, SOMPPersistentId, sompSetIOGroupMgrClassName) \
	(somSelf,ev,newName))
#ifndef SOMGD_sompSetIOGroupMgrClassName
    #if (defined(_sompSetIOGroupMgrClassName) || defined(__sompSetIOGroupMgrClassName))
        #undef _sompSetIOGroupMgrClassName
        #undef __sompSetIOGroupMgrClassName
        #define SOMGD_sompSetIOGroupMgrClassName 1
    #else
        #define _sompSetIOGroupMgrClassName SOMPPersistentId_sompSetIOGroupMgrClassName
    #endif /* _sompSetIOGroupMgrClassName */
#endif /* SOMGD_sompSetIOGroupMgrClassName */

/*
 * New Method: sompGetIOGroupMgrClassName
 */
typedef string   SOMLINK somTP_SOMPPersistentId_sompGetIOGroupMgrClassName(SOMPPersistentId *somSelf, Environment *ev, 
		string toBuffer);
#pragma linkage(somTP_SOMPPersistentId_sompGetIOGroupMgrClassName, system)
typedef somTP_SOMPPersistentId_sompGetIOGroupMgrClassName *somTD_SOMPPersistentId_sompGetIOGroupMgrClassName;
/*
 *  Gets the IO Group Manager Class portion of the ID.
 */
#define somMD_SOMPPersistentId_sompGetIOGroupMgrClassName "::SOMPPersistentId::sompGetIOGroupMgrClassName"
#define SOMPPersistentId_sompGetIOGroupMgrClassName(somSelf,ev,toBuffer) \
    (SOM_Resolve(somSelf, SOMPPersistentId, sompGetIOGroupMgrClassName) \
	(somSelf,ev,toBuffer))
#ifndef SOMGD_sompGetIOGroupMgrClassName
    #if (defined(_sompGetIOGroupMgrClassName) || defined(__sompGetIOGroupMgrClassName))
        #undef _sompGetIOGroupMgrClassName
        #undef __sompGetIOGroupMgrClassName
        #define SOMGD_sompGetIOGroupMgrClassName 1
    #else
        #define _sompGetIOGroupMgrClassName SOMPPersistentId_sompGetIOGroupMgrClassName
    #endif /* _sompGetIOGroupMgrClassName */
#endif /* SOMGD_sompGetIOGroupMgrClassName */

/*
 * New Method: sompGetIOGroupMgrClassNameLen
 */
typedef short   SOMLINK somTP_SOMPPersistentId_sompGetIOGroupMgrClassNameLen(SOMPPersistentId *somSelf, Environment *ev);
#pragma linkage(somTP_SOMPPersistentId_sompGetIOGroupMgrClassNameLen, system)
typedef somTP_SOMPPersistentId_sompGetIOGroupMgrClassNameLen *somTD_SOMPPersistentId_sompGetIOGroupMgrClassNameLen;
/*
 *  Gets the length of the IO Group Manager Class portion of the ID.
 */
#define somMD_SOMPPersistentId_sompGetIOGroupMgrClassNameLen "::SOMPPersistentId::sompGetIOGroupMgrClassNameLen"
#define SOMPPersistentId_sompGetIOGroupMgrClassNameLen(somSelf,ev) \
    (SOM_Resolve(somSelf, SOMPPersistentId, sompGetIOGroupMgrClassNameLen) \
	(somSelf,ev))
#ifndef SOMGD_sompGetIOGroupMgrClassNameLen
    #if (defined(_sompGetIOGroupMgrClassNameLen) || defined(__sompGetIOGroupMgrClassNameLen))
        #undef _sompGetIOGroupMgrClassNameLen
        #undef __sompGetIOGroupMgrClassNameLen
        #define SOMGD_sompGetIOGroupMgrClassNameLen 1
    #else
        #define _sompGetIOGroupMgrClassNameLen SOMPPersistentId_sompGetIOGroupMgrClassNameLen
    #endif /* _sompGetIOGroupMgrClassNameLen */
#endif /* SOMGD_sompGetIOGroupMgrClassNameLen */

/*
 * New Method: sompSetIOGroupName
 */
typedef void   SOMLINK somTP_SOMPPersistentId_sompSetIOGroupName(SOMPPersistentId *somSelf, Environment *ev, 
		string newName);
#pragma linkage(somTP_SOMPPersistentId_sompSetIOGroupName, system)
typedef somTP_SOMPPersistentId_sompSetIOGroupName *somTD_SOMPPersistentId_sompSetIOGroupName;
/*
 *  Sets the path & file portion of the ID.
 */
#define somMD_SOMPPersistentId_sompSetIOGroupName "::SOMPPersistentId::sompSetIOGroupName"
#define SOMPPersistentId_sompSetIOGroupName(somSelf,ev,newName) \
    (SOM_Resolve(somSelf, SOMPPersistentId, sompSetIOGroupName) \
	(somSelf,ev,newName))
#ifndef SOMGD_sompSetIOGroupName
    #if (defined(_sompSetIOGroupName) || defined(__sompSetIOGroupName))
        #undef _sompSetIOGroupName
        #undef __sompSetIOGroupName
        #define SOMGD_sompSetIOGroupName 1
    #else
        #define _sompSetIOGroupName SOMPPersistentId_sompSetIOGroupName
    #endif /* _sompSetIOGroupName */
#endif /* SOMGD_sompSetIOGroupName */

/*
 * New Method: sompGetIOGroupName
 */
typedef string   SOMLINK somTP_SOMPPersistentId_sompGetIOGroupName(SOMPPersistentId *somSelf, Environment *ev, 
		string toBuffer);
#pragma linkage(somTP_SOMPPersistentId_sompGetIOGroupName, system)
typedef somTP_SOMPPersistentId_sompGetIOGroupName *somTD_SOMPPersistentId_sompGetIOGroupName;
/*
 *  Gets the path & file portion of the ID.
 */
#define somMD_SOMPPersistentId_sompGetIOGroupName "::SOMPPersistentId::sompGetIOGroupName"
#define SOMPPersistentId_sompGetIOGroupName(somSelf,ev,toBuffer) \
    (SOM_Resolve(somSelf, SOMPPersistentId, sompGetIOGroupName) \
	(somSelf,ev,toBuffer))
#ifndef SOMGD_sompGetIOGroupName
    #if (defined(_sompGetIOGroupName) || defined(__sompGetIOGroupName))
        #undef _sompGetIOGroupName
        #undef __sompGetIOGroupName
        #define SOMGD_sompGetIOGroupName 1
    #else
        #define _sompGetIOGroupName SOMPPersistentId_sompGetIOGroupName
    #endif /* _sompGetIOGroupName */
#endif /* SOMGD_sompGetIOGroupName */

/*
 * New Method: sompGetIOGroupNameLen
 */
typedef short   SOMLINK somTP_SOMPPersistentId_sompGetIOGroupNameLen(SOMPPersistentId *somSelf, Environment *ev);
#pragma linkage(somTP_SOMPPersistentId_sompGetIOGroupNameLen, system)
typedef somTP_SOMPPersistentId_sompGetIOGroupNameLen *somTD_SOMPPersistentId_sompGetIOGroupNameLen;
/*
 *  Gets the length of the path & file portion of the ID.
 */
#define somMD_SOMPPersistentId_sompGetIOGroupNameLen "::SOMPPersistentId::sompGetIOGroupNameLen"
#define SOMPPersistentId_sompGetIOGroupNameLen(somSelf,ev) \
    (SOM_Resolve(somSelf, SOMPPersistentId, sompGetIOGroupNameLen) \
	(somSelf,ev))
#ifndef SOMGD_sompGetIOGroupNameLen
    #if (defined(_sompGetIOGroupNameLen) || defined(__sompGetIOGroupNameLen))
        #undef _sompGetIOGroupNameLen
        #undef __sompGetIOGroupNameLen
        #define SOMGD_sompGetIOGroupNameLen 1
    #else
        #define _sompGetIOGroupNameLen SOMPPersistentId_sompGetIOGroupNameLen
    #endif /* _sompGetIOGroupNameLen */
#endif /* SOMGD_sompGetIOGroupNameLen */

/*
 * New Method: sompSetGroupOffset
 */
typedef void   SOMLINK somTP_SOMPPersistentId_sompSetGroupOffset(SOMPPersistentId *somSelf, Environment *ev, 
		long offset);
#pragma linkage(somTP_SOMPPersistentId_sompSetGroupOffset, system)
typedef somTP_SOMPPersistentId_sompSetGroupOffset *somTD_SOMPPersistentId_sompSetGroupOffset;
/*
 *  Sets the offset portion of the ID.
 */
#define somMD_SOMPPersistentId_sompSetGroupOffset "::SOMPPersistentId::sompSetGroupOffset"
#define SOMPPersistentId_sompSetGroupOffset(somSelf,ev,offset) \
    (SOM_Resolve(somSelf, SOMPPersistentId, sompSetGroupOffset) \
	(somSelf,ev,offset))
#ifndef SOMGD_sompSetGroupOffset
    #if (defined(_sompSetGroupOffset) || defined(__sompSetGroupOffset))
        #undef _sompSetGroupOffset
        #undef __sompSetGroupOffset
        #define SOMGD_sompSetGroupOffset 1
    #else
        #define _sompSetGroupOffset SOMPPersistentId_sompSetGroupOffset
    #endif /* _sompSetGroupOffset */
#endif /* SOMGD_sompSetGroupOffset */

/*
 * New Method: sompGetGroupOffset
 */
typedef long   SOMLINK somTP_SOMPPersistentId_sompGetGroupOffset(SOMPPersistentId *somSelf, Environment *ev);
#pragma linkage(somTP_SOMPPersistentId_sompGetGroupOffset, system)
typedef somTP_SOMPPersistentId_sompGetGroupOffset *somTD_SOMPPersistentId_sompGetGroupOffset;
/*
 *  Gets the offset portion of the ID.
 */
#define somMD_SOMPPersistentId_sompGetGroupOffset "::SOMPPersistentId::sompGetGroupOffset"
#define SOMPPersistentId_sompGetGroupOffset(somSelf,ev) \
    (SOM_Resolve(somSelf, SOMPPersistentId, sompGetGroupOffset) \
	(somSelf,ev))
#ifndef SOMGD_sompGetGroupOffset
    #if (defined(_sompGetGroupOffset) || defined(__sompGetGroupOffset))
        #undef _sompGetGroupOffset
        #undef __sompGetGroupOffset
        #define SOMGD_sompGetGroupOffset 1
    #else
        #define _sompGetGroupOffset SOMPPersistentId_sompGetGroupOffset
    #endif /* _sompGetGroupOffset */
#endif /* SOMGD_sompGetGroupOffset */

/*
 * New Method: sompEqualsIOGroupName
 */
typedef boolean   SOMLINK somTP_SOMPPersistentId_sompEqualsIOGroupName(SOMPPersistentId *somSelf, Environment *ev, 
		SOMPPersistentId* id);
#pragma linkage(somTP_SOMPPersistentId_sompEqualsIOGroupName, system)
typedef somTP_SOMPPersistentId_sompEqualsIOGroupName *somTD_SOMPPersistentId_sompEqualsIOGroupName;
/*
 *  Compare this object's file & path name the file & path name
 *  part of the given ID. Return TRUE if they are equivalent.
 */
#define somMD_SOMPPersistentId_sompEqualsIOGroupName "::SOMPPersistentId::sompEqualsIOGroupName"
#define SOMPPersistentId_sompEqualsIOGroupName(somSelf,ev,id) \
    (SOM_Resolve(somSelf, SOMPPersistentId, sompEqualsIOGroupName) \
	(somSelf,ev,id))
#ifndef SOMGD_sompEqualsIOGroupName
    #if (defined(_sompEqualsIOGroupName) || defined(__sompEqualsIOGroupName))
        #undef _sompEqualsIOGroupName
        #undef __sompEqualsIOGroupName
        #define SOMGD_sompEqualsIOGroupName 1
    #else
        #define _sompEqualsIOGroupName SOMPPersistentId_sompEqualsIOGroupName
    #endif /* _sompEqualsIOGroupName */
#endif /* SOMGD_sompEqualsIOGroupName */
#ifndef SOM_DONT_USE_INHERITED_MACROS
#define SOMPPersistentId_somDefaultInit SOMObject_somDefaultInit
#define SOMPPersistentId_somDestruct SOMObject_somDestruct
#define SOMPPersistentId_somDefaultCopyInit SOMObject_somDefaultCopyInit
#define SOMPPersistentId_somDefaultAssign SOMObject_somDefaultAssign
#define SOMPPersistentId_somDefaultConstCopyInit SOMObject_somDefaultConstCopyInit
#define SOMPPersistentId_somDefaultVCopyInit SOMObject_somDefaultVCopyInit
#define SOMPPersistentId_somDefaultConstVCopyInit SOMObject_somDefaultConstVCopyInit
#define SOMPPersistentId_somDefaultConstAssign SOMObject_somDefaultConstAssign
#define SOMPPersistentId_somDefaultVAssign SOMObject_somDefaultVAssign
#define SOMPPersistentId_somDefaultConstVAssign SOMObject_somDefaultConstVAssign
#define SOMPPersistentId_somFree SOMObject_somFree
#define SOMPPersistentId_somGetClass SOMObject_somGetClass
#define SOMPPersistentId_somGetClassName SOMObject_somGetClassName
#define SOMPPersistentId_somGetSize SOMObject_somGetSize
#define SOMPPersistentId_somIsA SOMObject_somIsA
#define SOMPPersistentId_somIsInstanceOf SOMObject_somIsInstanceOf
#define SOMPPersistentId_somRespondsTo SOMObject_somRespondsTo
#define SOMPPersistentId_somDispatch SOMObject_somDispatch
#define SOMPPersistentId_somClassDispatch SOMObject_somClassDispatch
#define SOMPPersistentId_somCastObj SOMObject_somCastObj
#define SOMPPersistentId_somResetObj SOMObject_somResetObj
#define SOMPPersistentId_somDispatchV SOMObject_somDispatchV
#define SOMPPersistentId_somDispatchL SOMObject_somDispatchL
#define SOMPPersistentId_somDispatchA SOMObject_somDispatchA
#define SOMPPersistentId_somDispatchD SOMObject_somDispatchD
#define SOMPPersistentId_somPrintSelf SOMObject_somPrintSelf
#define SOMPPersistentId_somDumpSelf SOMObject_somDumpSelf
#endif /* SOM_DONT_USE_INHERITED_MACROS */

#endif       /* SOM_SOMPPersistentId_h */
