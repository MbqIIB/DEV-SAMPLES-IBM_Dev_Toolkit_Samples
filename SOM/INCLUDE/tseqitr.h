
/*
 * This file was generated by the SOM Compiler.
 * FileName: tseqitr.h.
 * Generated using:
 *     SOM Precompiler somipc: 2.29.1.17
 *     SOM Emitter emith: 2.47
 */

/*
 *    COMPONENT_NAME: somuc
 * 
 *    ORIGINS: 82, 81, 27
 * 
 * 
 *     25H7912  (C)  COPYRIGHT International Business Machines Corp. 1992,1996,1996
 *    All Rights Reserved
 *    Licensed Materials - Property of IBM
 *    US Government Users Restricted Rights - Use, duplication or
 *    disclosure restricted by GSA ADP Schedule Contract with IBM Corp.
 * 
 *    Copyright © 1988-92 Apple Computer, Inc.  All rights reserved.
 * 
 * CLASS_NAME: somf_TSequenceIterator
 * 
 * DESCRIPTION: An iterator for TSequences that will iterate over all of
 *              the objects in a sequence.
 * 
 */


#ifndef SOM_somf_TSequenceIterator_h
#define SOM_somf_TSequenceIterator_h


/*
 * Passthru lines: File: "C.h", "before"
 */

#include <mcollect.h>

#include <som.h>

/*
 * -- This emitter treats Method Tokens as Thunks by default.
 * -- Use the sc modifier "nothunks" to change this default
 */
#undef somresolve_
#define somresolve_(obj,mToken) ((somMethodProc*)((void)obj, mToken))

/*
 * Define the class name as an object type
 */
#ifndef somf_TSequenceIterator
#define somf_TSequenceIterator SOMObject
#endif
#include <titeratr.h>

/*
 * Start of bindings for IDL types
 */

#ifndef SOMClass
    #define SOMClass SOMObject
#endif /* SOMClass */
#ifndef somf_MCollectible
    #define somf_MCollectible SOMObject
#endif /* somf_MCollectible */

/*
 * End of bindings for IDL types.
 */

#define somf_TSequenceIterator_MajorVersion 2
#define somf_TSequenceIterator_MinorVersion 1

/*
 * External name shortening if required
 */
#ifdef SOM_USE_SHORT_EXTERNAL_NAMES
#define somf_TSequenceIteratorNewClass c
#pragma linkage(c, system)
#define somf_TSequenceIteratorClassData d
#define somf_TSequenceIteratorCClassData x
#endif /* SOM_USE_SHORT_EXTERNAL_NAMES */
/*--------------Migration------------*/
#define somf_TSequenceIterator_classObj somf_TSequenceIteratorClassData.classObject
#define _somf_TSequenceIterator somf_TSequenceIterator_classObj

/*
 * Declare the class creation procedure
 */
SOMEXTERN SOMClass * SOMLINK somf_TSequenceIteratorNewClass(integer4 somtmajorVersion,
		integer4 somtminorVersion);
#pragma linkage(somf_TSequenceIteratorNewClass, system)

/*
 * Declare the class data structure
 */
SOMEXTERN struct somf_TSequenceIteratorClassDataStructure {
	SOMClass *classObject;
	somMToken somfLast;
	somMToken somfPrevious;
} SOMDLINK somf_TSequenceIteratorClassData;

/*
 * Declare the C specific class data structure
 */
SOMEXTERN struct somf_TSequenceIteratorCClassDataStructure {
	somMethodTabs parentMtab;
	somDToken instanceDataToken;
} SOMDLINK somf_TSequenceIteratorCClassData;

/*
 * New and Renew macros for somf_TSequenceIterator
 */
#define somf_TSequenceIteratorNew() \
   ( _somf_TSequenceIterator ? \
	_somNew(_somf_TSequenceIterator) \
	: ( somf_TSequenceIteratorNewClass(\
		somf_TSequenceIterator_MajorVersion, \
		somf_TSequenceIterator_MinorVersion),\
	   _somNew(_somf_TSequenceIterator)))
#define somf_TSequenceIteratorRenew(buf) \
   ( _somf_TSequenceIterator ? \
	_somRenew(_somf_TSequenceIterator, buf) \
	: ( somf_TSequenceIteratorNewClass(\
		somf_TSequenceIterator_MajorVersion, \
		somf_TSequenceIterator_MinorVersion),\
	   _somRenew(_somf_TSequenceIterator, buf)))

/*
 * Override method: somfFirst
 */
#define somf_TSequenceIterator_somfFirst(somSelf,ev) \
	somf_TIterator_somfFirst(somSelf,ev)

/*
 * Override method: somfNext
 */
#define somf_TSequenceIterator_somfNext(somSelf,ev) \
	somf_TIterator_somfNext(somSelf,ev)

/*
 * Override method: somfRemove
 */
#define somf_TSequenceIterator_somfRemove(somSelf,ev) \
	somf_TIterator_somfRemove(somSelf,ev)

/*
 * New Method: somfLast
 */
typedef somf_MCollectible*   SOMLINK somTP_somf_TSequenceIterator_somfLast(somf_TSequenceIterator *somSelf, Environment *ev);
#pragma linkage(somTP_somf_TSequenceIterator_somfLast, system)
typedef somTP_somf_TSequenceIterator_somfLast *somTD_somf_TSequenceIterator_somfLast;
/*
 *  Determine the last object in the TSequence.
 */
#define somMD_somf_TSequenceIterator_somfLast "::somf_TSequenceIterator::somfLast"
#define somf_TSequenceIterator_somfLast(somSelf,ev) \
    (SOM_Resolve(somSelf, somf_TSequenceIterator, somfLast) \
	(somSelf,ev))
#ifndef SOMGD_somfLast
    #if (defined(_somfLast) || defined(__somfLast))
        #undef _somfLast
        #undef __somfLast
        #define SOMGD_somfLast 1
    #else
        #define _somfLast somf_TSequenceIterator_somfLast
    #endif /* _somfLast */
#endif /* SOMGD_somfLast */

/*
 * New Method: somfPrevious
 */
typedef somf_MCollectible*   SOMLINK somTP_somf_TSequenceIterator_somfPrevious(somf_TSequenceIterator *somSelf, Environment *ev);
#pragma linkage(somTP_somf_TSequenceIterator_somfPrevious, system)
typedef somTP_somf_TSequenceIterator_somfPrevious *somTD_somf_TSequenceIterator_somfPrevious;
/*
 *  Determine the previous object in the TSequence.
 */
#define somMD_somf_TSequenceIterator_somfPrevious "::somf_TSequenceIterator::somfPrevious"
#define somf_TSequenceIterator_somfPrevious(somSelf,ev) \
    (SOM_Resolve(somSelf, somf_TSequenceIterator, somfPrevious) \
	(somSelf,ev))
#ifndef SOMGD_somfPrevious
    #if (defined(_somfPrevious) || defined(__somfPrevious))
        #undef _somfPrevious
        #undef __somfPrevious
        #define SOMGD_somfPrevious 1
    #else
        #define _somfPrevious somf_TSequenceIterator_somfPrevious
    #endif /* _somfPrevious */
#endif /* SOMGD_somfPrevious */
#ifndef SOM_DONT_USE_INHERITED_MACROS
#define somf_TSequenceIterator_somDefaultInit SOMObject_somDefaultInit
#define somf_TSequenceIterator_somDestruct SOMObject_somDestruct
#define somf_TSequenceIterator_somDefaultCopyInit SOMObject_somDefaultCopyInit
#define somf_TSequenceIterator_somDefaultAssign SOMObject_somDefaultAssign
#define somf_TSequenceIterator_somDefaultConstCopyInit SOMObject_somDefaultConstCopyInit
#define somf_TSequenceIterator_somDefaultVCopyInit SOMObject_somDefaultVCopyInit
#define somf_TSequenceIterator_somDefaultConstVCopyInit SOMObject_somDefaultConstVCopyInit
#define somf_TSequenceIterator_somDefaultConstAssign SOMObject_somDefaultConstAssign
#define somf_TSequenceIterator_somDefaultVAssign SOMObject_somDefaultVAssign
#define somf_TSequenceIterator_somDefaultConstVAssign SOMObject_somDefaultConstVAssign
#define somf_TSequenceIterator_somInit SOMObject_somInit
#define somf_TSequenceIterator_somFree SOMObject_somFree
#define somf_TSequenceIterator_somUninit SOMObject_somUninit
#define somf_TSequenceIterator_somGetClass SOMObject_somGetClass
#define somf_TSequenceIterator_somGetClassName SOMObject_somGetClassName
#define somf_TSequenceIterator_somGetSize SOMObject_somGetSize
#define somf_TSequenceIterator_somIsA SOMObject_somIsA
#define somf_TSequenceIterator_somIsInstanceOf SOMObject_somIsInstanceOf
#define somf_TSequenceIterator_somRespondsTo SOMObject_somRespondsTo
#define somf_TSequenceIterator_somDispatch SOMObject_somDispatch
#define somf_TSequenceIterator_somClassDispatch SOMObject_somClassDispatch
#define somf_TSequenceIterator_somCastObj SOMObject_somCastObj
#define somf_TSequenceIterator_somResetObj SOMObject_somResetObj
#define somf_TSequenceIterator_somDispatchV SOMObject_somDispatchV
#define somf_TSequenceIterator_somDispatchL SOMObject_somDispatchL
#define somf_TSequenceIterator_somDispatchA SOMObject_somDispatchA
#define somf_TSequenceIterator_somDispatchD SOMObject_somDispatchD
#define somf_TSequenceIterator_somPrintSelf SOMObject_somPrintSelf
#define somf_TSequenceIterator_somDumpSelf SOMObject_somDumpSelf
#define somf_TSequenceIterator_somDumpSelfInt SOMObject_somDumpSelfInt
#endif /* SOM_DONT_USE_INHERITED_MACROS */

#endif       /* SOM_somf_TSequenceIterator_h */
