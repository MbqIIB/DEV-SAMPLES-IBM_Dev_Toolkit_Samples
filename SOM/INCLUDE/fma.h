
/*
 * This file was generated by the SOM Compiler.
 * FileName: fma.h.
 * Generated using:
 *     SOM Precompiler somipc: 2.29.1.17
 *     SOM Emitter emith: 2.47
 */

/*
 *    COMPONENT_NAME: somp
 * 
 *    ORIGINS: 27
 * 
 * 
 *     25H7912  (C)  COPYRIGHT International Business Machines Corp. 1992,1994,1996
 *    All Rights Reserved
 *    Licensed Materials - Property of IBM
 *    US Government Users Restricted Rights - Use, duplication or
 *    disclosure restricted by GSA ADP Schedule Contract with IBM Corp.
 * 
 */


#ifndef SOM_SOMPFileMediaAbstract_h
#define SOM_SOMPFileMediaAbstract_h


#include <som.h>

/*
 * -- This emitter treats Method Tokens as Thunks by default.
 * -- Use the sc modifier "nothunks" to change this default
 */
#undef somresolve_
#define somresolve_(obj,mToken) ((somMethodProc*)((void)obj, mToken))

/*
 * Define the class name as an object type
 */
#ifndef SOMPFileMediaAbstract
#define SOMPFileMediaAbstract SOMObject
#endif
/*
 *  This is the abstract class definition for an interface to
 *  a file media.
 */
#include <mia.h>

/*
 * Start of bindings for IDL types
 */

#ifndef SOMClass
    #define SOMClass SOMObject
#endif /* SOMClass */

/*
 * End of bindings for IDL types.
 */

#define SOMPFileMediaAbstract_MajorVersion 2
#define SOMPFileMediaAbstract_MinorVersion 1

/*
 * External name shortening if required
 */
#ifdef SOM_USE_SHORT_EXTERNAL_NAMES
#define SOMPFileMediaAbstractNewClass c
#pragma linkage(c, system)
#define SOMPFileMediaAbstractClassData d
#define SOMPFileMediaAbstractCClassData x
#endif /* SOM_USE_SHORT_EXTERNAL_NAMES */
/*--------------Migration------------*/
#define SOMPFileMediaAbstract_classObj SOMPFileMediaAbstractClassData.classObject
#define _SOMPFileMediaAbstract SOMPFileMediaAbstract_classObj

/*
 * Declare the class creation procedure
 */
SOMEXTERN SOMClass * SOMLINK SOMPFileMediaAbstractNewClass(integer4 somtmajorVersion,
		integer4 somtminorVersion);
#pragma linkage(SOMPFileMediaAbstractNewClass, system)

/*
 * Declare the class data structure
 */
SOMEXTERN struct SOMPFileMediaAbstractClassDataStructure {
	SOMClass *classObject;
	somMToken sompInitReadWrite;
	somMToken sompInitReadOnly;
	somMToken somReserved1;
	somMToken somReserved2;
	somMToken sompSeekPosition;
	somMToken sompSeekPositionRel;
	somMToken sompGetOffset;
	somMToken sompReadBytes;
	somMToken sompWriteBytes;
	somMToken sompWriteOctet;
	somMToken sompWriteShort;
	somMToken sompWriteUnsignedShort;
	somMToken sompWriteInteger;
	somMToken sompWriteLong;
	somMToken sompWriteUnsignedLong;
	somMToken sompWriteDouble;
	somMToken sompWriteFloat;
	somMToken sompWriteCharacter;
	somMToken sompWriteSomobject;
	somMToken sompWriteString;
	somMToken sompReadOctet;
	somMToken sompReadShort;
	somMToken sompReadUnsignedShort;
	somMToken sompReadInteger;
	somMToken sompReadLong;
	somMToken sompReadUnsignedLong;
	somMToken sompReadDouble;
	somMToken sompReadFloat;
	somMToken sompReadCharacter;
	somMToken sompReadSomobject;
	somMToken sompReadString;
	somMToken sompReadStringToBuffer;
	somMToken sompWriteLine;
	somMToken sompReadLine;
	somMToken sompWriteTypeCode;
	somMToken sompReadTypeCode;
} SOMDLINK SOMPFileMediaAbstractClassData;

/*
 * Declare the C specific class data structure
 */
SOMEXTERN struct SOMPFileMediaAbstractCClassDataStructure {
	somMethodTabs parentMtab;
	somDToken instanceDataToken;
} SOMDLINK SOMPFileMediaAbstractCClassData;

/*
 * New and Renew macros for SOMPFileMediaAbstract
 */
#define SOMPFileMediaAbstractNew() \
   ( _SOMPFileMediaAbstract ? \
	_somNew(_SOMPFileMediaAbstract) \
	: ( SOMPFileMediaAbstractNewClass(\
		SOMPFileMediaAbstract_MajorVersion, \
		SOMPFileMediaAbstract_MinorVersion),\
	   _somNew(_SOMPFileMediaAbstract)))
#define SOMPFileMediaAbstractRenew(buf) \
   ( _SOMPFileMediaAbstract ? \
	_somRenew(_SOMPFileMediaAbstract, buf) \
	: ( SOMPFileMediaAbstractNewClass(\
		SOMPFileMediaAbstract_MajorVersion, \
		SOMPFileMediaAbstract_MinorVersion),\
	   _somRenew(_SOMPFileMediaAbstract, buf)))

/*
 * Override method: sompOpen
 */
#define SOMPFileMediaAbstract_sompOpen(somSelf,ev) \
	SOMPMediaInterfaceAbstract_sompOpen(somSelf,ev)

/*
 * Override method: sompClose
 */
#define SOMPFileMediaAbstract_sompClose(somSelf,ev) \
	SOMPMediaInterfaceAbstract_sompClose(somSelf,ev)

/*
 * New Method: sompInitReadWrite
 */
typedef void   SOMLINK somTP_SOMPFileMediaAbstract_sompInitReadWrite(SOMPFileMediaAbstract *somSelf, Environment *ev, 
		string mediaInfo);
#pragma linkage(somTP_SOMPFileMediaAbstract_sompInitReadWrite, system)
typedef somTP_SOMPFileMediaAbstract_sompInitReadWrite *somTD_SOMPFileMediaAbstract_sompInitReadWrite;
/*
 *  Initialize the media interface for read-write access.
 */
#define somMD_SOMPFileMediaAbstract_sompInitReadWrite "::SOMPFileMediaAbstract::sompInitReadWrite"
#define SOMPFileMediaAbstract_sompInitReadWrite(somSelf,ev,mediaInfo) \
    (SOM_Resolve(somSelf, SOMPFileMediaAbstract, sompInitReadWrite) \
	(somSelf,ev,mediaInfo))
#ifndef SOMGD_sompInitReadWrite
    #if (defined(_sompInitReadWrite) || defined(__sompInitReadWrite))
        #undef _sompInitReadWrite
        #undef __sompInitReadWrite
        #define SOMGD_sompInitReadWrite 1
    #else
        #define _sompInitReadWrite SOMPFileMediaAbstract_sompInitReadWrite
    #endif /* _sompInitReadWrite */
#endif /* SOMGD_sompInitReadWrite */

/*
 * New Method: sompInitReadOnly
 */
typedef void   SOMLINK somTP_SOMPFileMediaAbstract_sompInitReadOnly(SOMPFileMediaAbstract *somSelf, Environment *ev, 
		string mediaInfo);
#pragma linkage(somTP_SOMPFileMediaAbstract_sompInitReadOnly, system)
typedef somTP_SOMPFileMediaAbstract_sompInitReadOnly *somTD_SOMPFileMediaAbstract_sompInitReadOnly;
/*
 *  Initialize the media interface for read-only access.
 */
#define somMD_SOMPFileMediaAbstract_sompInitReadOnly "::SOMPFileMediaAbstract::sompInitReadOnly"
#define SOMPFileMediaAbstract_sompInitReadOnly(somSelf,ev,mediaInfo) \
    (SOM_Resolve(somSelf, SOMPFileMediaAbstract, sompInitReadOnly) \
	(somSelf,ev,mediaInfo))
#ifndef SOMGD_sompInitReadOnly
    #if (defined(_sompInitReadOnly) || defined(__sompInitReadOnly))
        #undef _sompInitReadOnly
        #undef __sompInitReadOnly
        #define SOMGD_sompInitReadOnly 1
    #else
        #define _sompInitReadOnly SOMPFileMediaAbstract_sompInitReadOnly
    #endif /* _sompInitReadOnly */
#endif /* SOMGD_sompInitReadOnly */

/*
 * New Method: sompSeekPosition
 */
typedef void   SOMLINK somTP_SOMPFileMediaAbstract_sompSeekPosition(SOMPFileMediaAbstract *somSelf, Environment *ev, 
		long offset);
#pragma linkage(somTP_SOMPFileMediaAbstract_sompSeekPosition, system)
typedef somTP_SOMPFileMediaAbstract_sompSeekPosition *somTD_SOMPFileMediaAbstract_sompSeekPosition;
/*
 *  Position the media to an offset.  Any further reading
 *  or writing will begin from that point.  Reading and writing
 *  implicitly repositions the file, so usually this is not needed.
 */
#define somMD_SOMPFileMediaAbstract_sompSeekPosition "::SOMPFileMediaAbstract::sompSeekPosition"
#define SOMPFileMediaAbstract_sompSeekPosition(somSelf,ev,offset) \
    (SOM_Resolve(somSelf, SOMPFileMediaAbstract, sompSeekPosition) \
	(somSelf,ev,offset))
#ifndef SOMGD_sompSeekPosition
    #if (defined(_sompSeekPosition) || defined(__sompSeekPosition))
        #undef _sompSeekPosition
        #undef __sompSeekPosition
        #define SOMGD_sompSeekPosition 1
    #else
        #define _sompSeekPosition SOMPFileMediaAbstract_sompSeekPosition
    #endif /* _sompSeekPosition */
#endif /* SOMGD_sompSeekPosition */

/*
 * New Method: sompSeekPositionRel
 */
typedef void   SOMLINK somTP_SOMPFileMediaAbstract_sompSeekPositionRel(SOMPFileMediaAbstract *somSelf, Environment *ev, 
		long offset);
#pragma linkage(somTP_SOMPFileMediaAbstract_sompSeekPositionRel, system)
typedef somTP_SOMPFileMediaAbstract_sompSeekPositionRel *somTD_SOMPFileMediaAbstract_sompSeekPositionRel;
/*
 *  Like Position, but offset is relative to current.
 */
#define somMD_SOMPFileMediaAbstract_sompSeekPositionRel "::SOMPFileMediaAbstract::sompSeekPositionRel"
#define SOMPFileMediaAbstract_sompSeekPositionRel(somSelf,ev,offset) \
    (SOM_Resolve(somSelf, SOMPFileMediaAbstract, sompSeekPositionRel) \
	(somSelf,ev,offset))
#ifndef SOMGD_sompSeekPositionRel
    #if (defined(_sompSeekPositionRel) || defined(__sompSeekPositionRel))
        #undef _sompSeekPositionRel
        #undef __sompSeekPositionRel
        #define SOMGD_sompSeekPositionRel 1
    #else
        #define _sompSeekPositionRel SOMPFileMediaAbstract_sompSeekPositionRel
    #endif /* _sompSeekPositionRel */
#endif /* SOMGD_sompSeekPositionRel */

/*
 * New Method: sompGetOffset
 */
typedef long   SOMLINK somTP_SOMPFileMediaAbstract_sompGetOffset(SOMPFileMediaAbstract *somSelf, Environment *ev);
#pragma linkage(somTP_SOMPFileMediaAbstract_sompGetOffset, system)
typedef somTP_SOMPFileMediaAbstract_sompGetOffset *somTD_SOMPFileMediaAbstract_sompGetOffset;
/*
 *  Returns the current offset within the file.
 */
#define somMD_SOMPFileMediaAbstract_sompGetOffset "::SOMPFileMediaAbstract::sompGetOffset"
#define SOMPFileMediaAbstract_sompGetOffset(somSelf,ev) \
    (SOM_Resolve(somSelf, SOMPFileMediaAbstract, sompGetOffset) \
	(somSelf,ev))
#ifndef SOMGD_sompGetOffset
    #if (defined(_sompGetOffset) || defined(__sompGetOffset))
        #undef _sompGetOffset
        #undef __sompGetOffset
        #define SOMGD_sompGetOffset 1
    #else
        #define _sompGetOffset SOMPFileMediaAbstract_sompGetOffset
    #endif /* _sompGetOffset */
#endif /* SOMGD_sompGetOffset */

/*
 * New Method: sompReadBytes
 */
typedef void   SOMLINK somTP_SOMPFileMediaAbstract_sompReadBytes(SOMPFileMediaAbstract *somSelf, Environment *ev, 
		string byteStream, 
		long length);
#pragma linkage(somTP_SOMPFileMediaAbstract_sompReadBytes, system)
typedef somTP_SOMPFileMediaAbstract_sompReadBytes *somTD_SOMPFileMediaAbstract_sompReadBytes;
/*
 *  Read a byte stream of the given length from the media.
 */
#define somMD_SOMPFileMediaAbstract_sompReadBytes "::SOMPFileMediaAbstract::sompReadBytes"
#define SOMPFileMediaAbstract_sompReadBytes(somSelf,ev,byteStream,length) \
    (SOM_Resolve(somSelf, SOMPFileMediaAbstract, sompReadBytes) \
	(somSelf,ev,byteStream,length))
#ifndef SOMGD_sompReadBytes
    #if (defined(_sompReadBytes) || defined(__sompReadBytes))
        #undef _sompReadBytes
        #undef __sompReadBytes
        #define SOMGD_sompReadBytes 1
    #else
        #define _sompReadBytes SOMPFileMediaAbstract_sompReadBytes
    #endif /* _sompReadBytes */
#endif /* SOMGD_sompReadBytes */

/*
 * New Method: sompWriteBytes
 */
typedef void   SOMLINK somTP_SOMPFileMediaAbstract_sompWriteBytes(SOMPFileMediaAbstract *somSelf, Environment *ev, 
		string byteStream, 
		long length);
#pragma linkage(somTP_SOMPFileMediaAbstract_sompWriteBytes, system)
typedef somTP_SOMPFileMediaAbstract_sompWriteBytes *somTD_SOMPFileMediaAbstract_sompWriteBytes;
/*
 *  Write a byte stream of the given length to the media.
 */
#define somMD_SOMPFileMediaAbstract_sompWriteBytes "::SOMPFileMediaAbstract::sompWriteBytes"
#define SOMPFileMediaAbstract_sompWriteBytes(somSelf,ev,byteStream,length) \
    (SOM_Resolve(somSelf, SOMPFileMediaAbstract, sompWriteBytes) \
	(somSelf,ev,byteStream,length))
#ifndef SOMGD_sompWriteBytes
    #if (defined(_sompWriteBytes) || defined(__sompWriteBytes))
        #undef _sompWriteBytes
        #undef __sompWriteBytes
        #define SOMGD_sompWriteBytes 1
    #else
        #define _sompWriteBytes SOMPFileMediaAbstract_sompWriteBytes
    #endif /* _sompWriteBytes */
#endif /* SOMGD_sompWriteBytes */

/*
 * New Method: sompWriteOctet
 */
typedef void   SOMLINK somTP_SOMPFileMediaAbstract_sompWriteOctet(SOMPFileMediaAbstract *somSelf, Environment *ev, 
		octet i1);
#pragma linkage(somTP_SOMPFileMediaAbstract_sompWriteOctet, system)
typedef somTP_SOMPFileMediaAbstract_sompWriteOctet *somTD_SOMPFileMediaAbstract_sompWriteOctet;
/*
 *  Writes the given 8-bit integer
 */
#define somMD_SOMPFileMediaAbstract_sompWriteOctet "::SOMPFileMediaAbstract::sompWriteOctet"
#define SOMPFileMediaAbstract_sompWriteOctet(somSelf,ev,i1) \
    (SOM_Resolve(somSelf, SOMPFileMediaAbstract, sompWriteOctet) \
	(somSelf,ev,i1))
#ifndef SOMGD_sompWriteOctet
    #if (defined(_sompWriteOctet) || defined(__sompWriteOctet))
        #undef _sompWriteOctet
        #undef __sompWriteOctet
        #define SOMGD_sompWriteOctet 1
    #else
        #define _sompWriteOctet SOMPFileMediaAbstract_sompWriteOctet
    #endif /* _sompWriteOctet */
#endif /* SOMGD_sompWriteOctet */

/*
 * New Method: sompWriteShort
 */
typedef void   SOMLINK somTP_SOMPFileMediaAbstract_sompWriteShort(SOMPFileMediaAbstract *somSelf, Environment *ev, 
		short i2);
#pragma linkage(somTP_SOMPFileMediaAbstract_sompWriteShort, system)
typedef somTP_SOMPFileMediaAbstract_sompWriteShort *somTD_SOMPFileMediaAbstract_sompWriteShort;
/*
 *  Writes the given short integer
 */
#define somMD_SOMPFileMediaAbstract_sompWriteShort "::SOMPFileMediaAbstract::sompWriteShort"
#define SOMPFileMediaAbstract_sompWriteShort(somSelf,ev,i2) \
    (SOM_Resolve(somSelf, SOMPFileMediaAbstract, sompWriteShort) \
	(somSelf,ev,i2))
#ifndef SOMGD_sompWriteShort
    #if (defined(_sompWriteShort) || defined(__sompWriteShort))
        #undef _sompWriteShort
        #undef __sompWriteShort
        #define SOMGD_sompWriteShort 1
    #else
        #define _sompWriteShort SOMPFileMediaAbstract_sompWriteShort
    #endif /* _sompWriteShort */
#endif /* SOMGD_sompWriteShort */

/*
 * New Method: sompWriteUnsignedShort
 */
typedef void   SOMLINK somTP_SOMPFileMediaAbstract_sompWriteUnsignedShort(SOMPFileMediaAbstract *somSelf, Environment *ev, 
		unsigned short u2);
#pragma linkage(somTP_SOMPFileMediaAbstract_sompWriteUnsignedShort, system)
typedef somTP_SOMPFileMediaAbstract_sompWriteUnsignedShort *somTD_SOMPFileMediaAbstract_sompWriteUnsignedShort;
/*
 *  Writes the given unsigned short integer
 */
#define somMD_SOMPFileMediaAbstract_sompWriteUnsignedShort "::SOMPFileMediaAbstract::sompWriteUnsignedShort"
#define SOMPFileMediaAbstract_sompWriteUnsignedShort(somSelf,ev,u2) \
    (SOM_Resolve(somSelf, SOMPFileMediaAbstract, sompWriteUnsignedShort) \
	(somSelf,ev,u2))
#ifndef SOMGD_sompWriteUnsignedShort
    #if (defined(_sompWriteUnsignedShort) || defined(__sompWriteUnsignedShort))
        #undef _sompWriteUnsignedShort
        #undef __sompWriteUnsignedShort
        #define SOMGD_sompWriteUnsignedShort 1
    #else
        #define _sompWriteUnsignedShort SOMPFileMediaAbstract_sompWriteUnsignedShort
    #endif /* _sompWriteUnsignedShort */
#endif /* SOMGD_sompWriteUnsignedShort */

/*
 * New Method: sompWriteLong
 */
typedef void   SOMLINK somTP_SOMPFileMediaAbstract_sompWriteLong(SOMPFileMediaAbstract *somSelf, Environment *ev, 
		long i4);
#pragma linkage(somTP_SOMPFileMediaAbstract_sompWriteLong, system)
typedef somTP_SOMPFileMediaAbstract_sompWriteLong *somTD_SOMPFileMediaAbstract_sompWriteLong;
/*
 *  Writes the given long integer
 */
#define somMD_SOMPFileMediaAbstract_sompWriteLong "::SOMPFileMediaAbstract::sompWriteLong"
#define SOMPFileMediaAbstract_sompWriteLong(somSelf,ev,i4) \
    (SOM_Resolve(somSelf, SOMPFileMediaAbstract, sompWriteLong) \
	(somSelf,ev,i4))
#ifndef SOMGD_sompWriteLong
    #if (defined(_sompWriteLong) || defined(__sompWriteLong))
        #undef _sompWriteLong
        #undef __sompWriteLong
        #define SOMGD_sompWriteLong 1
    #else
        #define _sompWriteLong SOMPFileMediaAbstract_sompWriteLong
    #endif /* _sompWriteLong */
#endif /* SOMGD_sompWriteLong */

/*
 * New Method: sompWriteUnsignedLong
 */
typedef void   SOMLINK somTP_SOMPFileMediaAbstract_sompWriteUnsignedLong(SOMPFileMediaAbstract *somSelf, Environment *ev, 
		unsigned long u4);
#pragma linkage(somTP_SOMPFileMediaAbstract_sompWriteUnsignedLong, system)
typedef somTP_SOMPFileMediaAbstract_sompWriteUnsignedLong *somTD_SOMPFileMediaAbstract_sompWriteUnsignedLong;
/*
 *  Writes the given unsigned long integer
 */
#define somMD_SOMPFileMediaAbstract_sompWriteUnsignedLong "::SOMPFileMediaAbstract::sompWriteUnsignedLong"
#define SOMPFileMediaAbstract_sompWriteUnsignedLong(somSelf,ev,u4) \
    (SOM_Resolve(somSelf, SOMPFileMediaAbstract, sompWriteUnsignedLong) \
	(somSelf,ev,u4))
#ifndef SOMGD_sompWriteUnsignedLong
    #if (defined(_sompWriteUnsignedLong) || defined(__sompWriteUnsignedLong))
        #undef _sompWriteUnsignedLong
        #undef __sompWriteUnsignedLong
        #define SOMGD_sompWriteUnsignedLong 1
    #else
        #define _sompWriteUnsignedLong SOMPFileMediaAbstract_sompWriteUnsignedLong
    #endif /* _sompWriteUnsignedLong */
#endif /* SOMGD_sompWriteUnsignedLong */

/*
 * New Method: sompWriteDouble
 */
typedef void   SOMLINK somTP_SOMPFileMediaAbstract_sompWriteDouble(SOMPFileMediaAbstract *somSelf, Environment *ev, 
		double f8);
#pragma linkage(somTP_SOMPFileMediaAbstract_sompWriteDouble, system)
typedef somTP_SOMPFileMediaAbstract_sompWriteDouble *somTD_SOMPFileMediaAbstract_sompWriteDouble;
/*
 *  Writes the given double-precision float
 */
#define somMD_SOMPFileMediaAbstract_sompWriteDouble "::SOMPFileMediaAbstract::sompWriteDouble"
#define SOMPFileMediaAbstract_sompWriteDouble(somSelf,ev,f8) \
    (SOM_Resolve(somSelf, SOMPFileMediaAbstract, sompWriteDouble) \
	(somSelf,ev,f8))
#ifndef SOMGD_sompWriteDouble
    #if (defined(_sompWriteDouble) || defined(__sompWriteDouble))
        #undef _sompWriteDouble
        #undef __sompWriteDouble
        #define SOMGD_sompWriteDouble 1
    #else
        #define _sompWriteDouble SOMPFileMediaAbstract_sompWriteDouble
    #endif /* _sompWriteDouble */
#endif /* SOMGD_sompWriteDouble */

/*
 * New Method: sompWriteFloat
 */
typedef void   SOMLINK somTP_SOMPFileMediaAbstract_sompWriteFloat(SOMPFileMediaAbstract *somSelf, Environment *ev, 
		float f4);
#pragma linkage(somTP_SOMPFileMediaAbstract_sompWriteFloat, system)
typedef somTP_SOMPFileMediaAbstract_sompWriteFloat *somTD_SOMPFileMediaAbstract_sompWriteFloat;
/*
 *  Writes the given float
 */
#define somMD_SOMPFileMediaAbstract_sompWriteFloat "::SOMPFileMediaAbstract::sompWriteFloat"
#define SOMPFileMediaAbstract_sompWriteFloat(somSelf,ev,f4) \
    (SOM_Resolve(somSelf, SOMPFileMediaAbstract, sompWriteFloat) \
	(somSelf,ev,f4))
#ifndef SOMGD_sompWriteFloat
    #if (defined(_sompWriteFloat) || defined(__sompWriteFloat))
        #undef _sompWriteFloat
        #undef __sompWriteFloat
        #define SOMGD_sompWriteFloat 1
    #else
        #define _sompWriteFloat SOMPFileMediaAbstract_sompWriteFloat
    #endif /* _sompWriteFloat */
#endif /* SOMGD_sompWriteFloat */

/*
 * New Method: sompWriteCharacter
 */
typedef void   SOMLINK somTP_SOMPFileMediaAbstract_sompWriteCharacter(SOMPFileMediaAbstract *somSelf, Environment *ev, 
		char c);
#pragma linkage(somTP_SOMPFileMediaAbstract_sompWriteCharacter, system)
typedef somTP_SOMPFileMediaAbstract_sompWriteCharacter *somTD_SOMPFileMediaAbstract_sompWriteCharacter;
/*
 *  Writes the given character
 */
#define somMD_SOMPFileMediaAbstract_sompWriteCharacter "::SOMPFileMediaAbstract::sompWriteCharacter"
#define SOMPFileMediaAbstract_sompWriteCharacter(somSelf,ev,c) \
    (SOM_Resolve(somSelf, SOMPFileMediaAbstract, sompWriteCharacter) \
	(somSelf,ev,c))
#ifndef SOMGD_sompWriteCharacter
    #if (defined(_sompWriteCharacter) || defined(__sompWriteCharacter))
        #undef _sompWriteCharacter
        #undef __sompWriteCharacter
        #define SOMGD_sompWriteCharacter 1
    #else
        #define _sompWriteCharacter SOMPFileMediaAbstract_sompWriteCharacter
    #endif /* _sompWriteCharacter */
#endif /* SOMGD_sompWriteCharacter */

/*
 * New Method: sompWriteSomobject
 */
typedef void   SOMLINK somTP_SOMPFileMediaAbstract_sompWriteSomobject(SOMPFileMediaAbstract *somSelf, Environment *ev, 
		SOMObject* so, 
		SOMObject* parentObject);
#pragma linkage(somTP_SOMPFileMediaAbstract_sompWriteSomobject, system)
typedef somTP_SOMPFileMediaAbstract_sompWriteSomobject *somTD_SOMPFileMediaAbstract_sompWriteSomobject;
/*
 *  Writes the given object.  Uses parentObject to determine whether relative
 *  Ids are used.  If object (so) has no persistent parent, client passes
 *  NULL parentObject.
 */
#define somMD_SOMPFileMediaAbstract_sompWriteSomobject "::SOMPFileMediaAbstract::sompWriteSomobject"
#define SOMPFileMediaAbstract_sompWriteSomobject(somSelf,ev,so,parentObject) \
    (SOM_Resolve(somSelf, SOMPFileMediaAbstract, sompWriteSomobject) \
	(somSelf,ev,so,parentObject))
#ifndef SOMGD_sompWriteSomobject
    #if (defined(_sompWriteSomobject) || defined(__sompWriteSomobject))
        #undef _sompWriteSomobject
        #undef __sompWriteSomobject
        #define SOMGD_sompWriteSomobject 1
    #else
        #define _sompWriteSomobject SOMPFileMediaAbstract_sompWriteSomobject
    #endif /* _sompWriteSomobject */
#endif /* SOMGD_sompWriteSomobject */

/*
 * New Method: sompWriteString
 */
typedef void   SOMLINK somTP_SOMPFileMediaAbstract_sompWriteString(SOMPFileMediaAbstract *somSelf, Environment *ev, 
		string wstring);
#pragma linkage(somTP_SOMPFileMediaAbstract_sompWriteString, system)
typedef somTP_SOMPFileMediaAbstract_sompWriteString *somTD_SOMPFileMediaAbstract_sompWriteString;
/*
 *  Writes the given string to the media.
 * 
 */
#define somMD_SOMPFileMediaAbstract_sompWriteString "::SOMPFileMediaAbstract::sompWriteString"
#define SOMPFileMediaAbstract_sompWriteString(somSelf,ev,wstring) \
    (SOM_Resolve(somSelf, SOMPFileMediaAbstract, sompWriteString) \
	(somSelf,ev,wstring))
#ifndef SOMGD_sompWriteString
    #if (defined(_sompWriteString) || defined(__sompWriteString))
        #undef _sompWriteString
        #undef __sompWriteString
        #define SOMGD_sompWriteString 1
    #else
        #define _sompWriteString SOMPFileMediaAbstract_sompWriteString
    #endif /* _sompWriteString */
#endif /* SOMGD_sompWriteString */

/*
 * New Method: sompReadOctet
 */
typedef void   SOMLINK somTP_SOMPFileMediaAbstract_sompReadOctet(SOMPFileMediaAbstract *somSelf, Environment *ev, 
		octet* i1);
#pragma linkage(somTP_SOMPFileMediaAbstract_sompReadOctet, system)
typedef somTP_SOMPFileMediaAbstract_sompReadOctet *somTD_SOMPFileMediaAbstract_sompReadOctet;
/*
 *  Reads an 8-bit integer into memory at given the pointer
 */
#define somMD_SOMPFileMediaAbstract_sompReadOctet "::SOMPFileMediaAbstract::sompReadOctet"
#define SOMPFileMediaAbstract_sompReadOctet(somSelf,ev,i1) \
    (SOM_Resolve(somSelf, SOMPFileMediaAbstract, sompReadOctet) \
	(somSelf,ev,i1))
#ifndef SOMGD_sompReadOctet
    #if (defined(_sompReadOctet) || defined(__sompReadOctet))
        #undef _sompReadOctet
        #undef __sompReadOctet
        #define SOMGD_sompReadOctet 1
    #else
        #define _sompReadOctet SOMPFileMediaAbstract_sompReadOctet
    #endif /* _sompReadOctet */
#endif /* SOMGD_sompReadOctet */

/*
 * New Method: sompReadShort
 */
typedef void   SOMLINK somTP_SOMPFileMediaAbstract_sompReadShort(SOMPFileMediaAbstract *somSelf, Environment *ev, 
		short* i2);
#pragma linkage(somTP_SOMPFileMediaAbstract_sompReadShort, system)
typedef somTP_SOMPFileMediaAbstract_sompReadShort *somTD_SOMPFileMediaAbstract_sompReadShort;
/*
 *  Reads a short integer into memory at given the pointer
 */
#define somMD_SOMPFileMediaAbstract_sompReadShort "::SOMPFileMediaAbstract::sompReadShort"
#define SOMPFileMediaAbstract_sompReadShort(somSelf,ev,i2) \
    (SOM_Resolve(somSelf, SOMPFileMediaAbstract, sompReadShort) \
	(somSelf,ev,i2))
#ifndef SOMGD_sompReadShort
    #if (defined(_sompReadShort) || defined(__sompReadShort))
        #undef _sompReadShort
        #undef __sompReadShort
        #define SOMGD_sompReadShort 1
    #else
        #define _sompReadShort SOMPFileMediaAbstract_sompReadShort
    #endif /* _sompReadShort */
#endif /* SOMGD_sompReadShort */

/*
 * New Method: sompReadUnsignedShort
 */
typedef void   SOMLINK somTP_SOMPFileMediaAbstract_sompReadUnsignedShort(SOMPFileMediaAbstract *somSelf, Environment *ev, 
		unsigned short* u2);
#pragma linkage(somTP_SOMPFileMediaAbstract_sompReadUnsignedShort, system)
typedef somTP_SOMPFileMediaAbstract_sompReadUnsignedShort *somTD_SOMPFileMediaAbstract_sompReadUnsignedShort;
/*
 *  Reads an unsigned short integer into memory at given the pointer
 */
#define somMD_SOMPFileMediaAbstract_sompReadUnsignedShort "::SOMPFileMediaAbstract::sompReadUnsignedShort"
#define SOMPFileMediaAbstract_sompReadUnsignedShort(somSelf,ev,u2) \
    (SOM_Resolve(somSelf, SOMPFileMediaAbstract, sompReadUnsignedShort) \
	(somSelf,ev,u2))
#ifndef SOMGD_sompReadUnsignedShort
    #if (defined(_sompReadUnsignedShort) || defined(__sompReadUnsignedShort))
        #undef _sompReadUnsignedShort
        #undef __sompReadUnsignedShort
        #define SOMGD_sompReadUnsignedShort 1
    #else
        #define _sompReadUnsignedShort SOMPFileMediaAbstract_sompReadUnsignedShort
    #endif /* _sompReadUnsignedShort */
#endif /* SOMGD_sompReadUnsignedShort */

/*
 * New Method: sompReadLong
 */
typedef void   SOMLINK somTP_SOMPFileMediaAbstract_sompReadLong(SOMPFileMediaAbstract *somSelf, Environment *ev, 
		long* i4);
#pragma linkage(somTP_SOMPFileMediaAbstract_sompReadLong, system)
typedef somTP_SOMPFileMediaAbstract_sompReadLong *somTD_SOMPFileMediaAbstract_sompReadLong;
/*
 *  Reads a long integer into memory at given the pointer
 */
#define somMD_SOMPFileMediaAbstract_sompReadLong "::SOMPFileMediaAbstract::sompReadLong"
#define SOMPFileMediaAbstract_sompReadLong(somSelf,ev,i4) \
    (SOM_Resolve(somSelf, SOMPFileMediaAbstract, sompReadLong) \
	(somSelf,ev,i4))
#ifndef SOMGD_sompReadLong
    #if (defined(_sompReadLong) || defined(__sompReadLong))
        #undef _sompReadLong
        #undef __sompReadLong
        #define SOMGD_sompReadLong 1
    #else
        #define _sompReadLong SOMPFileMediaAbstract_sompReadLong
    #endif /* _sompReadLong */
#endif /* SOMGD_sompReadLong */

/*
 * New Method: sompReadUnsignedLong
 */
typedef void   SOMLINK somTP_SOMPFileMediaAbstract_sompReadUnsignedLong(SOMPFileMediaAbstract *somSelf, Environment *ev, 
		unsigned long* i4);
#pragma linkage(somTP_SOMPFileMediaAbstract_sompReadUnsignedLong, system)
typedef somTP_SOMPFileMediaAbstract_sompReadUnsignedLong *somTD_SOMPFileMediaAbstract_sompReadUnsignedLong;
/*
 *  Reads a long integer into memory at given the pointer
 */
#define somMD_SOMPFileMediaAbstract_sompReadUnsignedLong "::SOMPFileMediaAbstract::sompReadUnsignedLong"
#define SOMPFileMediaAbstract_sompReadUnsignedLong(somSelf,ev,i4) \
    (SOM_Resolve(somSelf, SOMPFileMediaAbstract, sompReadUnsignedLong) \
	(somSelf,ev,i4))
#ifndef SOMGD_sompReadUnsignedLong
    #if (defined(_sompReadUnsignedLong) || defined(__sompReadUnsignedLong))
        #undef _sompReadUnsignedLong
        #undef __sompReadUnsignedLong
        #define SOMGD_sompReadUnsignedLong 1
    #else
        #define _sompReadUnsignedLong SOMPFileMediaAbstract_sompReadUnsignedLong
    #endif /* _sompReadUnsignedLong */
#endif /* SOMGD_sompReadUnsignedLong */

/*
 * New Method: sompReadDouble
 */
typedef void   SOMLINK somTP_SOMPFileMediaAbstract_sompReadDouble(SOMPFileMediaAbstract *somSelf, Environment *ev, 
		double* f8);
#pragma linkage(somTP_SOMPFileMediaAbstract_sompReadDouble, system)
typedef somTP_SOMPFileMediaAbstract_sompReadDouble *somTD_SOMPFileMediaAbstract_sompReadDouble;
/*
 *  Reads a float into memory at given the pointer
 */
#define somMD_SOMPFileMediaAbstract_sompReadDouble "::SOMPFileMediaAbstract::sompReadDouble"
#define SOMPFileMediaAbstract_sompReadDouble(somSelf,ev,f8) \
    (SOM_Resolve(somSelf, SOMPFileMediaAbstract, sompReadDouble) \
	(somSelf,ev,f8))
#ifndef SOMGD_sompReadDouble
    #if (defined(_sompReadDouble) || defined(__sompReadDouble))
        #undef _sompReadDouble
        #undef __sompReadDouble
        #define SOMGD_sompReadDouble 1
    #else
        #define _sompReadDouble SOMPFileMediaAbstract_sompReadDouble
    #endif /* _sompReadDouble */
#endif /* SOMGD_sompReadDouble */

/*
 * New Method: sompReadFloat
 */
typedef void   SOMLINK somTP_SOMPFileMediaAbstract_sompReadFloat(SOMPFileMediaAbstract *somSelf, Environment *ev, 
		float* f4);
#pragma linkage(somTP_SOMPFileMediaAbstract_sompReadFloat, system)
typedef somTP_SOMPFileMediaAbstract_sompReadFloat *somTD_SOMPFileMediaAbstract_sompReadFloat;
/*
 *  Reads a float into memory at given the pointer
 */
#define somMD_SOMPFileMediaAbstract_sompReadFloat "::SOMPFileMediaAbstract::sompReadFloat"
#define SOMPFileMediaAbstract_sompReadFloat(somSelf,ev,f4) \
    (SOM_Resolve(somSelf, SOMPFileMediaAbstract, sompReadFloat) \
	(somSelf,ev,f4))
#ifndef SOMGD_sompReadFloat
    #if (defined(_sompReadFloat) || defined(__sompReadFloat))
        #undef _sompReadFloat
        #undef __sompReadFloat
        #define SOMGD_sompReadFloat 1
    #else
        #define _sompReadFloat SOMPFileMediaAbstract_sompReadFloat
    #endif /* _sompReadFloat */
#endif /* SOMGD_sompReadFloat */

/*
 * New Method: sompReadCharacter
 */
typedef void   SOMLINK somTP_SOMPFileMediaAbstract_sompReadCharacter(SOMPFileMediaAbstract *somSelf, Environment *ev, 
		char* c);
#pragma linkage(somTP_SOMPFileMediaAbstract_sompReadCharacter, system)
typedef somTP_SOMPFileMediaAbstract_sompReadCharacter *somTD_SOMPFileMediaAbstract_sompReadCharacter;
/*
 *  Reads a character into memory at given the pointer
 */
#define somMD_SOMPFileMediaAbstract_sompReadCharacter "::SOMPFileMediaAbstract::sompReadCharacter"
#define SOMPFileMediaAbstract_sompReadCharacter(somSelf,ev,c) \
    (SOM_Resolve(somSelf, SOMPFileMediaAbstract, sompReadCharacter) \
	(somSelf,ev,c))
#ifndef SOMGD_sompReadCharacter
    #if (defined(_sompReadCharacter) || defined(__sompReadCharacter))
        #undef _sompReadCharacter
        #undef __sompReadCharacter
        #define SOMGD_sompReadCharacter 1
    #else
        #define _sompReadCharacter SOMPFileMediaAbstract_sompReadCharacter
    #endif /* _sompReadCharacter */
#endif /* SOMGD_sompReadCharacter */

/*
 * New Method: sompReadSomobject
 */
typedef void   SOMLINK somTP_SOMPFileMediaAbstract_sompReadSomobject(SOMPFileMediaAbstract *somSelf, Environment *ev, 
		SOMObject** so);
#pragma linkage(somTP_SOMPFileMediaAbstract_sompReadSomobject, system)
typedef somTP_SOMPFileMediaAbstract_sompReadSomobject *somTD_SOMPFileMediaAbstract_sompReadSomobject;
/*
 *  Instantiates and returns a new object of the class specified in
 *  the file. Standard SOM objects are simply instantiated. Persistent
 *  objects are instantiated and marked for restoration.
 */
#define somMD_SOMPFileMediaAbstract_sompReadSomobject "::SOMPFileMediaAbstract::sompReadSomobject"
#define SOMPFileMediaAbstract_sompReadSomobject(somSelf,ev,so) \
    (SOM_Resolve(somSelf, SOMPFileMediaAbstract, sompReadSomobject) \
	(somSelf,ev,so))
#ifndef SOMGD_sompReadSomobject
    #if (defined(_sompReadSomobject) || defined(__sompReadSomobject))
        #undef _sompReadSomobject
        #undef __sompReadSomobject
        #define SOMGD_sompReadSomobject 1
    #else
        #define _sompReadSomobject SOMPFileMediaAbstract_sompReadSomobject
    #endif /* _sompReadSomobject */
#endif /* SOMGD_sompReadSomobject */

/*
 * New Method: sompReadString
 */
typedef void   SOMLINK somTP_SOMPFileMediaAbstract_sompReadString(SOMPFileMediaAbstract *somSelf, Environment *ev, 
		string* rstring);
#pragma linkage(somTP_SOMPFileMediaAbstract_sompReadString, system)
typedef somTP_SOMPFileMediaAbstract_sompReadString *somTD_SOMPFileMediaAbstract_sompReadString;
/*
 *  Read and allocate a string. Input is a pointer to a string. The input
 *  pointer is modified to point to a newly allocated buffer which
 *  will contain the string read from the media.
 *  Callers are responsible for freeing the returned buffer with SOMFree.
 *  If you want to read a string into a predefined buffer,
 *  use sompReadStringToBuffer.
 * 
 *  This method can be used to read strings which were stored by
 *  sompWriteString.
 */
#define somMD_SOMPFileMediaAbstract_sompReadString "::SOMPFileMediaAbstract::sompReadString"
#define SOMPFileMediaAbstract_sompReadString(somSelf,ev,rstring) \
    (SOM_Resolve(somSelf, SOMPFileMediaAbstract, sompReadString) \
	(somSelf,ev,rstring))
#ifndef SOMGD_sompReadString
    #if (defined(_sompReadString) || defined(__sompReadString))
        #undef _sompReadString
        #undef __sompReadString
        #define SOMGD_sompReadString 1
    #else
        #define _sompReadString SOMPFileMediaAbstract_sompReadString
    #endif /* _sompReadString */
#endif /* SOMGD_sompReadString */

/*
 * New Method: sompReadStringToBuffer
 */
typedef void   SOMLINK somTP_SOMPFileMediaAbstract_sompReadStringToBuffer(SOMPFileMediaAbstract *somSelf, Environment *ev, 
		string buffer, 
		long bufsize);
#pragma linkage(somTP_SOMPFileMediaAbstract_sompReadStringToBuffer, system)
typedef somTP_SOMPFileMediaAbstract_sompReadStringToBuffer *somTD_SOMPFileMediaAbstract_sompReadStringToBuffer;
/*
 *  Read a string into the preallocated buffer given. The size of the
 *  buffer is given in <bufsize>. If the string read is larger than
 *  bufsize it is truncated to fit in bufsize.
 * 
 *  This method can be used to read strings which were stored by
 *  sompWriteString.
 */
#define somMD_SOMPFileMediaAbstract_sompReadStringToBuffer "::SOMPFileMediaAbstract::sompReadStringToBuffer"
#define SOMPFileMediaAbstract_sompReadStringToBuffer(somSelf,ev,buffer,bufsize) \
    (SOM_Resolve(somSelf, SOMPFileMediaAbstract, sompReadStringToBuffer) \
	(somSelf,ev,buffer,bufsize))
#ifndef SOMGD_sompReadStringToBuffer
    #if (defined(_sompReadStringToBuffer) || defined(__sompReadStringToBuffer))
        #undef _sompReadStringToBuffer
        #undef __sompReadStringToBuffer
        #define SOMGD_sompReadStringToBuffer 1
    #else
        #define _sompReadStringToBuffer SOMPFileMediaAbstract_sompReadStringToBuffer
    #endif /* _sompReadStringToBuffer */
#endif /* SOMGD_sompReadStringToBuffer */

/*
 * New Method: sompWriteLine
 */
typedef void   SOMLINK somTP_SOMPFileMediaAbstract_sompWriteLine(SOMPFileMediaAbstract *somSelf, Environment *ev, 
		string buffer);
#pragma linkage(somTP_SOMPFileMediaAbstract_sompWriteLine, system)
typedef somTP_SOMPFileMediaAbstract_sompWriteLine *somTD_SOMPFileMediaAbstract_sompWriteLine;
/*
 *  Writes the given string in <buffer> at the current position.
 *  The terminating null character (\0) is not written.
 * 
 *  This method does NOT append a newline character (\n) to the
 *  given string before writing. If the user of this method intends to
 *  restore this <buffer> of data with sompReadLine, the user must
 *  put the newline character in the <buffer> before calling this
 *  method.
 */
#define somMD_SOMPFileMediaAbstract_sompWriteLine "::SOMPFileMediaAbstract::sompWriteLine"
#define SOMPFileMediaAbstract_sompWriteLine(somSelf,ev,buffer) \
    (SOM_Resolve(somSelf, SOMPFileMediaAbstract, sompWriteLine) \
	(somSelf,ev,buffer))
#ifndef SOMGD_sompWriteLine
    #if (defined(_sompWriteLine) || defined(__sompWriteLine))
        #undef _sompWriteLine
        #undef __sompWriteLine
        #define SOMGD_sompWriteLine 1
    #else
        #define _sompWriteLine SOMPFileMediaAbstract_sompWriteLine
    #endif /* _sompWriteLine */
#endif /* SOMGD_sompWriteLine */

/*
 * New Method: sompReadLine
 */
typedef void   SOMLINK somTP_SOMPFileMediaAbstract_sompReadLine(SOMPFileMediaAbstract *somSelf, Environment *ev, 
		string buffer, 
		long bufsize);
#pragma linkage(somTP_SOMPFileMediaAbstract_sompReadLine, system)
typedef somTP_SOMPFileMediaAbstract_sompReadLine *somTD_SOMPFileMediaAbstract_sompReadLine;
/*
 *  Read a string up to and including the first newline character (\n)
 *  into the preallocated buffer given.
 *  Use this method for reading strings stored with sompWriteLine.
 * 
 *  The size of the buffer is given in <bufsize>. If the string read is
 *  larger than bufsize it is truncated to fit in bufsize.
 * 
 *  The characters read are stored in <buffer>, and a null character (\0)
 *  is appended. The newline character, if read, is included in the string.
 */
#define somMD_SOMPFileMediaAbstract_sompReadLine "::SOMPFileMediaAbstract::sompReadLine"
#define SOMPFileMediaAbstract_sompReadLine(somSelf,ev,buffer,bufsize) \
    (SOM_Resolve(somSelf, SOMPFileMediaAbstract, sompReadLine) \
	(somSelf,ev,buffer,bufsize))
#ifndef SOMGD_sompReadLine
    #if (defined(_sompReadLine) || defined(__sompReadLine))
        #undef _sompReadLine
        #undef __sompReadLine
        #define SOMGD_sompReadLine 1
    #else
        #define _sompReadLine SOMPFileMediaAbstract_sompReadLine
    #endif /* _sompReadLine */
#endif /* SOMGD_sompReadLine */

/*
 * New Method: sompWriteTypeCode
 */
typedef void   SOMLINK somTP_SOMPFileMediaAbstract_sompWriteTypeCode(SOMPFileMediaAbstract *somSelf, Environment *ev, 
		TypeCode tc);
#pragma linkage(somTP_SOMPFileMediaAbstract_sompWriteTypeCode, system)
typedef somTP_SOMPFileMediaAbstract_sompWriteTypeCode *somTD_SOMPFileMediaAbstract_sompWriteTypeCode;
/*
 *  Writes a restoreable version of an IDL type code. Restore with
 *  sompReadTypeCode().
 */
#define somMD_SOMPFileMediaAbstract_sompWriteTypeCode "::SOMPFileMediaAbstract::sompWriteTypeCode"
#define SOMPFileMediaAbstract_sompWriteTypeCode(somSelf,ev,tc) \
    (SOM_Resolve(somSelf, SOMPFileMediaAbstract, sompWriteTypeCode) \
	(somSelf,ev,tc))
#ifndef SOMGD_sompWriteTypeCode
    #if (defined(_sompWriteTypeCode) || defined(__sompWriteTypeCode))
        #undef _sompWriteTypeCode
        #undef __sompWriteTypeCode
        #define SOMGD_sompWriteTypeCode 1
    #else
        #define _sompWriteTypeCode SOMPFileMediaAbstract_sompWriteTypeCode
    #endif /* _sompWriteTypeCode */
#endif /* SOMGD_sompWriteTypeCode */

/*
 * New Method: sompReadTypeCode
 */
typedef void   SOMLINK somTP_SOMPFileMediaAbstract_sompReadTypeCode(SOMPFileMediaAbstract *somSelf, Environment *ev, 
		TypeCode* tc);
#pragma linkage(somTP_SOMPFileMediaAbstract_sompReadTypeCode, system)
typedef somTP_SOMPFileMediaAbstract_sompReadTypeCode *somTD_SOMPFileMediaAbstract_sompReadTypeCode;
/*
 *  Restores an IDL type code that was stored with sompWriteTypeCode().
 */
#define somMD_SOMPFileMediaAbstract_sompReadTypeCode "::SOMPFileMediaAbstract::sompReadTypeCode"
#define SOMPFileMediaAbstract_sompReadTypeCode(somSelf,ev,tc) \
    (SOM_Resolve(somSelf, SOMPFileMediaAbstract, sompReadTypeCode) \
	(somSelf,ev,tc))
#ifndef SOMGD_sompReadTypeCode
    #if (defined(_sompReadTypeCode) || defined(__sompReadTypeCode))
        #undef _sompReadTypeCode
        #undef __sompReadTypeCode
        #define SOMGD_sompReadTypeCode 1
    #else
        #define _sompReadTypeCode SOMPFileMediaAbstract_sompReadTypeCode
    #endif /* _sompReadTypeCode */
#endif /* SOMGD_sompReadTypeCode */
#ifndef SOM_DONT_USE_INHERITED_MACROS
#define SOMPFileMediaAbstract_somDefaultInit SOMObject_somDefaultInit
#define SOMPFileMediaAbstract_somDestruct SOMObject_somDestruct
#define SOMPFileMediaAbstract_somDefaultCopyInit SOMObject_somDefaultCopyInit
#define SOMPFileMediaAbstract_somDefaultAssign SOMObject_somDefaultAssign
#define SOMPFileMediaAbstract_somDefaultConstCopyInit SOMObject_somDefaultConstCopyInit
#define SOMPFileMediaAbstract_somDefaultVCopyInit SOMObject_somDefaultVCopyInit
#define SOMPFileMediaAbstract_somDefaultConstVCopyInit SOMObject_somDefaultConstVCopyInit
#define SOMPFileMediaAbstract_somDefaultConstAssign SOMObject_somDefaultConstAssign
#define SOMPFileMediaAbstract_somDefaultVAssign SOMObject_somDefaultVAssign
#define SOMPFileMediaAbstract_somDefaultConstVAssign SOMObject_somDefaultConstVAssign
#define SOMPFileMediaAbstract_somInit SOMObject_somInit
#define SOMPFileMediaAbstract_somFree SOMObject_somFree
#define SOMPFileMediaAbstract_somUninit SOMObject_somUninit
#define SOMPFileMediaAbstract_somGetClass SOMObject_somGetClass
#define SOMPFileMediaAbstract_somGetClassName SOMObject_somGetClassName
#define SOMPFileMediaAbstract_somGetSize SOMObject_somGetSize
#define SOMPFileMediaAbstract_somIsA SOMObject_somIsA
#define SOMPFileMediaAbstract_somIsInstanceOf SOMObject_somIsInstanceOf
#define SOMPFileMediaAbstract_somRespondsTo SOMObject_somRespondsTo
#define SOMPFileMediaAbstract_somDispatch SOMObject_somDispatch
#define SOMPFileMediaAbstract_somClassDispatch SOMObject_somClassDispatch
#define SOMPFileMediaAbstract_somCastObj SOMObject_somCastObj
#define SOMPFileMediaAbstract_somResetObj SOMObject_somResetObj
#define SOMPFileMediaAbstract_somDispatchV SOMObject_somDispatchV
#define SOMPFileMediaAbstract_somDispatchL SOMObject_somDispatchL
#define SOMPFileMediaAbstract_somDispatchA SOMObject_somDispatchA
#define SOMPFileMediaAbstract_somDispatchD SOMObject_somDispatchD
#define SOMPFileMediaAbstract_somPrintSelf SOMObject_somPrintSelf
#define SOMPFileMediaAbstract_somDumpSelf SOMObject_somDumpSelf
#define SOMPFileMediaAbstract_somDumpSelfInt SOMObject_somDumpSelfInt
#endif /* SOM_DONT_USE_INHERITED_MACROS */

#endif       /* SOM_SOMPFileMediaAbstract_h */
