
/*
 * This file was generated by the SOM Compiler.
 * FileName: scenum.h.
 * Generated using:
 *     SOM Precompiler somipc: 2.29.1.17
 *     SOM Emitter emith: 2.47
 */

/*
 *   COMPONENT_NAME: some
 * 
 *   ORIGINS: 27
 * 
 * 
 *    25H7912  (C)  COPYRIGHT International Business Machines Corp. 1992,1994,1996
 *   All Rights Reserved
 *   Licensed Materials - Property of IBM
 *   US Government Users Restricted Rights - Use, duplication or
 *   disclosure restricted by GSA ADP Schedule Contract with IBM Corp.
 *  @(#) somc/sctypes.h 2.7 12/26/95 16:26:17 [7/30/96 14:46:04]
 * 
 */


#ifndef SOM_SOMTEnumEntryC_h
#define SOM_SOMTEnumEntryC_h


#include <som.h>

/*
 * -- This emitter treats Method Tokens as Thunks by default.
 * -- Use the sc modifier "nothunks" to change this default
 */
#undef somresolve_
#define somresolve_(obj,mToken) ((somMethodProc*)((void)obj, mToken))

/*
 * Define the class name as an object type
 */
#ifndef SOMTEnumEntryC
#define SOMTEnumEntryC SOMObject
#endif
#include <scentry.h>

/*
 * Start of bindings for IDL types
 */

#ifndef SOMClass
    #define SOMClass SOMObject
#endif /* SOMClass */
#ifndef SOMTEntryC
    #define SOMTEntryC SOMObject
#endif /* SOMTEntryC */
#ifndef SOMTEmitC
    #define SOMTEmitC SOMObject
#endif /* SOMTEmitC */
#ifndef SOMTMetaClassEntryC
    #define SOMTMetaClassEntryC SOMObject
#endif /* SOMTMetaClassEntryC */
#ifndef SOMTAttributeEntryC
    #define SOMTAttributeEntryC SOMObject
#endif /* SOMTAttributeEntryC */
#ifndef SOMTTypedefEntryC
    #define SOMTTypedefEntryC SOMObject
#endif /* SOMTTypedefEntryC */
#ifndef SOMTBaseClassEntryC
    #define SOMTBaseClassEntryC SOMObject
#endif /* SOMTBaseClassEntryC */
#ifndef SOMTPassthruEntryC
    #define SOMTPassthruEntryC SOMObject
#endif /* SOMTPassthruEntryC */
#ifndef SOMTDataEntryC
    #define SOMTDataEntryC SOMObject
#endif /* SOMTDataEntryC */
#ifndef SOMTMethodEntryC
    #define SOMTMethodEntryC SOMObject
#endif /* SOMTMethodEntryC */
#ifndef SOMTClassEntryC
    #define SOMTClassEntryC SOMObject
#endif /* SOMTClassEntryC */
#ifndef SOMTModuleEntryC
    #define SOMTModuleEntryC SOMObject
#endif /* SOMTModuleEntryC */
#ifndef SOMTParameterEntryC
    #define SOMTParameterEntryC SOMObject
#endif /* SOMTParameterEntryC */
#ifndef SOMTStructEntryC
    #define SOMTStructEntryC SOMObject
#endif /* SOMTStructEntryC */
#ifndef SOMTUnionEntryC
    #define SOMTUnionEntryC SOMObject
#endif /* SOMTUnionEntryC */
#ifndef SOMTEnumEntryC
    #define SOMTEnumEntryC SOMObject
#endif /* SOMTEnumEntryC */
#ifndef SOMTConstEntryC
    #define SOMTConstEntryC SOMObject
#endif /* SOMTConstEntryC */
#ifndef SOMTSequenceEntryC
    #define SOMTSequenceEntryC SOMObject
#endif /* SOMTSequenceEntryC */
#ifndef SOMTStringEntryC
    #define SOMTStringEntryC SOMObject
#endif /* SOMTStringEntryC */
#ifndef SOMTEnumNameEntryC
    #define SOMTEnumNameEntryC SOMObject
#endif /* SOMTEnumNameEntryC */
#ifndef SOMTCommonEntryC
    #define SOMTCommonEntryC SOMObject
#endif /* SOMTCommonEntryC */
#ifndef SOMTUserDefinedTypeEntryC
    #define SOMTUserDefinedTypeEntryC SOMObject
#endif /* SOMTUserDefinedTypeEntryC */
#ifndef SOMTEnumNameC
    #define SOMTEnumNameC SOMObject
#endif /* SOMTEnumNameC */

/*
 * End of bindings for IDL types.
 */

#define SOMTEnumEntryC_MajorVersion 2
#define SOMTEnumEntryC_MinorVersion 1

/*
 * External name shortening if required
 */
#ifdef SOM_USE_SHORT_EXTERNAL_NAMES
#define SOMTEnumEntryCNewClass c
#pragma linkage(c, system)
#define SOMTEnumEntryCClassData d
#define SOMTEnumEntryCCClassData x
#endif /* SOM_USE_SHORT_EXTERNAL_NAMES */
/*--------------Migration------------*/
#define SOMTEnumEntryC_classObj SOMTEnumEntryCClassData.classObject
#define _SOMTEnumEntryC SOMTEnumEntryC_classObj

/*
 * Declare the class creation procedure
 */
SOMEXTERN SOMClass * SOMLINK SOMTEnumEntryCNewClass(integer4 somtmajorVersion,
		integer4 somtminorVersion);
#pragma linkage(SOMTEnumEntryCNewClass, system)

/*
 * Declare the class data structure
 */
SOMEXTERN struct SOMTEnumEntryCClassDataStructure {
	SOMClass *classObject;
	somMToken somtGetFirstEnumName;
	somMToken somtGetNextEnumName;
} SOMDLINK SOMTEnumEntryCClassData;

/*
 * Declare the C specific class data structure
 */
SOMEXTERN struct SOMTEnumEntryCCClassDataStructure {
	somMethodTabs parentMtab;
	somDToken instanceDataToken;
} SOMDLINK SOMTEnumEntryCCClassData;

/*
 * New and Renew macros for SOMTEnumEntryC
 */
#define SOMTEnumEntryCNew() \
   ( _SOMTEnumEntryC ? \
	_somNew(_SOMTEnumEntryC) \
	: ( SOMTEnumEntryCNewClass(\
		SOMTEnumEntryC_MajorVersion, \
		SOMTEnumEntryC_MinorVersion),\
	   _somNew(_SOMTEnumEntryC)))
#define SOMTEnumEntryCRenew(buf) \
   ( _SOMTEnumEntryC ? \
	_somRenew(_SOMTEnumEntryC, buf) \
	: ( SOMTEnumEntryCNewClass(\
		SOMTEnumEntryC_MajorVersion, \
		SOMTEnumEntryC_MinorVersion),\
	   _somRenew(_SOMTEnumEntryC, buf)))

/*
 * Override method: somDumpSelfInt
 */
#define SOMTEnumEntryC_somDumpSelfInt(somSelf,level) \
	SOMObject_somDumpSelfInt(somSelf,level)

/*
 * Override method: somtSetSymbolsOnEntry
 */
#define SOMTEnumEntryC_somtSetSymbolsOnEntry(somSelf,emitter,prefix) \
	SOMTEntryC_somtSetSymbolsOnEntry(somSelf,emitter,prefix)

/*
 * New Method: somtGetFirstEnumName
 */
typedef SOMTEnumNameEntryC*   SOMLINK somTP_SOMTEnumEntryC_somtGetFirstEnumName(SOMTEnumEntryC *somSelf);
#pragma linkage(somTP_SOMTEnumEntryC_somtGetFirstEnumName, system)
typedef somTP_SOMTEnumEntryC_somtGetFirstEnumName *somTD_SOMTEnumEntryC_somtGetFirstEnumName;
#define somMD_SOMTEnumEntryC_somtGetFirstEnumName "::SOMTEnumEntryC::somtGetFirstEnumName"
#define SOMTEnumEntryC_somtGetFirstEnumName(somSelf) \
    (SOM_Resolve(somSelf, SOMTEnumEntryC, somtGetFirstEnumName) \
	(somSelf))
#ifndef SOMGD_somtGetFirstEnumName
    #if (defined(_somtGetFirstEnumName) || defined(__somtGetFirstEnumName))
        #undef _somtGetFirstEnumName
        #undef __somtGetFirstEnumName
        #define SOMGD_somtGetFirstEnumName 1
    #else
        #define _somtGetFirstEnumName SOMTEnumEntryC_somtGetFirstEnumName
    #endif /* _somtGetFirstEnumName */
#endif /* SOMGD_somtGetFirstEnumName */

/*
 * New Method: somtGetNextEnumName
 */
typedef SOMTEnumNameEntryC*   SOMLINK somTP_SOMTEnumEntryC_somtGetNextEnumName(SOMTEnumEntryC *somSelf);
#pragma linkage(somTP_SOMTEnumEntryC_somtGetNextEnumName, system)
typedef somTP_SOMTEnumEntryC_somtGetNextEnumName *somTD_SOMTEnumEntryC_somtGetNextEnumName;
#define somMD_SOMTEnumEntryC_somtGetNextEnumName "::SOMTEnumEntryC::somtGetNextEnumName"
#define SOMTEnumEntryC_somtGetNextEnumName(somSelf) \
    (SOM_Resolve(somSelf, SOMTEnumEntryC, somtGetNextEnumName) \
	(somSelf))
#ifndef SOMGD_somtGetNextEnumName
    #if (defined(_somtGetNextEnumName) || defined(__somtGetNextEnumName))
        #undef _somtGetNextEnumName
        #undef __somtGetNextEnumName
        #define SOMGD_somtGetNextEnumName 1
    #else
        #define _somtGetNextEnumName SOMTEnumEntryC_somtGetNextEnumName
    #endif /* _somtGetNextEnumName */
#endif /* SOMGD_somtGetNextEnumName */
#ifndef SOM_DONT_USE_INHERITED_MACROS
#define SOMTEnumEntryC__get_somtEntryName SOMTEntryC__get_somtEntryName
#define SOMTEnumEntryC__set_somtEntryName SOMTEntryC__set_somtEntryName
#define SOMTEnumEntryC__get_somtElementType SOMTEntryC__get_somtElementType
#define SOMTEnumEntryC__set_somtElementType SOMTEntryC__set_somtElementType
#define SOMTEnumEntryC__get_somtElementTypeName SOMTEntryC__get_somtElementTypeName
#define SOMTEnumEntryC__get_somtEntryComment SOMTEntryC__get_somtEntryComment
#define SOMTEnumEntryC__get_somtSourceLineNumber SOMTEntryC__get_somtSourceLineNumber
#define SOMTEnumEntryC__get_somtTypeCode SOMTEntryC__get_somtTypeCode
#define SOMTEnumEntryC__get_somtIsReference SOMTEntryC__get_somtIsReference
#define SOMTEnumEntryC__get_somtIDLScopedName SOMTEntryC__get_somtIDLScopedName
#define SOMTEnumEntryC__get_somtCScopedName SOMTEntryC__get_somtCScopedName
#define SOMTEnumEntryC_somtGetModifierValue SOMTEntryC_somtGetModifierValue
#define SOMTEnumEntryC_somtGetFirstModifier SOMTEntryC_somtGetFirstModifier
#define SOMTEnumEntryC_somtGetNextModifier SOMTEntryC_somtGetNextModifier
#define SOMTEnumEntryC_somtFormatModifier SOMTEntryC_somtFormatModifier
#define SOMTEnumEntryC_somtGetModifierList SOMTEntryC_somtGetModifierList
#define SOMTEnumEntryC_somtSetEntryStruct SOMTEntryC_somtSetEntryStruct
#define SOMTEnumEntryC_somInit SOMObject_somInit
#define SOMTEnumEntryC_somUninit SOMObject_somUninit
#define SOMTEnumEntryC_somPrintSelf SOMObject_somPrintSelf
#define SOMTEnumEntryC_somDumpSelf SOMObject_somDumpSelf
#define SOMTEnumEntryC_somDefaultInit SOMObject_somDefaultInit
#define SOMTEnumEntryC_somDestruct SOMObject_somDestruct
#define SOMTEnumEntryC_somDefaultCopyInit SOMObject_somDefaultCopyInit
#define SOMTEnumEntryC_somDefaultAssign SOMObject_somDefaultAssign
#define SOMTEnumEntryC_somDefaultConstCopyInit SOMObject_somDefaultConstCopyInit
#define SOMTEnumEntryC_somDefaultVCopyInit SOMObject_somDefaultVCopyInit
#define SOMTEnumEntryC_somDefaultConstVCopyInit SOMObject_somDefaultConstVCopyInit
#define SOMTEnumEntryC_somDefaultConstAssign SOMObject_somDefaultConstAssign
#define SOMTEnumEntryC_somDefaultVAssign SOMObject_somDefaultVAssign
#define SOMTEnumEntryC_somDefaultConstVAssign SOMObject_somDefaultConstVAssign
#define SOMTEnumEntryC_somFree SOMObject_somFree
#define SOMTEnumEntryC_somGetClass SOMObject_somGetClass
#define SOMTEnumEntryC_somGetClassName SOMObject_somGetClassName
#define SOMTEnumEntryC_somGetSize SOMObject_somGetSize
#define SOMTEnumEntryC_somIsA SOMObject_somIsA
#define SOMTEnumEntryC_somIsInstanceOf SOMObject_somIsInstanceOf
#define SOMTEnumEntryC_somRespondsTo SOMObject_somRespondsTo
#define SOMTEnumEntryC_somDispatch SOMObject_somDispatch
#define SOMTEnumEntryC_somClassDispatch SOMObject_somClassDispatch
#define SOMTEnumEntryC_somCastObj SOMObject_somCastObj
#define SOMTEnumEntryC_somResetObj SOMObject_somResetObj
#define SOMTEnumEntryC_somDispatchV SOMObject_somDispatchV
#define SOMTEnumEntryC_somDispatchL SOMObject_somDispatchL
#define SOMTEnumEntryC_somDispatchA SOMObject_somDispatchA
#define SOMTEnumEntryC_somDispatchD SOMObject_somDispatchD
#endif /* SOM_DONT_USE_INHERITED_MACROS */

#endif       /* SOM_SOMTEnumEntryC_h */
