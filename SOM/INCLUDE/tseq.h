
/*
 * This file was generated by the SOM Compiler.
 * FileName: tseq.h.
 * Generated using:
 *     SOM Precompiler somipc: 2.29.1.17
 *     SOM Emitter emith: 2.47
 */

/*
 *    COMPONENT_NAME: somuc
 * 
 *    ORIGINS: 82, 81, 27
 * 
 * 
 *     25H7912  (C)  COPYRIGHT International Business Machines Corp. 1992,1996,1996
 *    All Rights Reserved
 *    Licensed Materials - Property of IBM
 *    US Government Users Restricted Rights - Use, duplication or
 *    disclosure restricted by GSA ADP Schedule Contract with IBM Corp.
 * 
 *   Copyright © 1988-92 Apple Computer, Inc.  All rights reserved.
 * 
 * CLASS_NAME: somf_TSequence
 * 
 * DESCRIPTION: TSequence is an abstract superclass for collections whose
 *              elements are ordered.
 * 
 */


#ifndef SOM_somf_TSequence_h
#define SOM_somf_TSequence_h


/*
 * Passthru lines: File: "C.h", "before"
 */

#include <mcollect.h>

#include <som.h>

/*
 * -- This emitter treats Method Tokens as Thunks by default.
 * -- Use the sc modifier "nothunks" to change this default
 */
#undef somresolve_
#define somresolve_(obj,mToken) ((somMethodProc*)((void)obj, mToken))

/*
 * Define the class name as an object type
 */
#ifndef somf_TSequence
#define somf_TSequence SOMObject
#endif
#include <tcollect.h>

/*
 * Start of bindings for IDL types
 */

#ifndef SOMClass
    #define SOMClass SOMObject
#endif /* SOMClass */
#ifndef somf_TIterator
    #define somf_TIterator SOMObject
#endif /* somf_TIterator */

/*
 * End of bindings for IDL types.
 */

#define somf_TSequence_MajorVersion 2
#define somf_TSequence_MinorVersion 1

/*
 * External name shortening if required
 */
#ifdef SOM_USE_SHORT_EXTERNAL_NAMES
#define somf_TSequenceNewClass c
#pragma linkage(c, system)
#define somf_TSequenceClassData d
#define somf_TSequenceCClassData x
#endif /* SOM_USE_SHORT_EXTERNAL_NAMES */
/*--------------Migration------------*/
#define somf_TSequence_classObj somf_TSequenceClassData.classObject
#define _somf_TSequence somf_TSequence_classObj

/*
 * Declare the class creation procedure
 */
SOMEXTERN SOMClass * SOMLINK somf_TSequenceNewClass(integer4 somtmajorVersion,
		integer4 somtminorVersion);
#pragma linkage(somf_TSequenceNewClass, system)

/*
 * Declare the class data structure
 */
SOMEXTERN struct somf_TSequenceClassDataStructure {
	SOMClass *classObject;
	somMToken somfFirst;
	somMToken somfAfter;
	somMToken somfBefore;
	somMToken somfLast;
	somMToken somfOccurrencesOf;
	somMToken somfTSequenceInit;
} SOMDLINK somf_TSequenceClassData;

/*
 * Declare the C specific class data structure
 */
SOMEXTERN struct somf_TSequenceCClassDataStructure {
	somMethodTabs parentMtab;
	somDToken instanceDataToken;
} SOMDLINK somf_TSequenceCClassData;

/*
 * New and Renew macros for somf_TSequence
 */
#define somf_TSequenceNew() \
   ( _somf_TSequence ? \
	_somNew(_somf_TSequence) \
	: ( somf_TSequenceNewClass(\
		somf_TSequence_MajorVersion, \
		somf_TSequence_MinorVersion),\
	   _somNew(_somf_TSequence)))
#define somf_TSequenceRenew(buf) \
   ( _somf_TSequence ? \
	_somRenew(_somf_TSequence, buf) \
	: ( somf_TSequenceNewClass(\
		somf_TSequence_MajorVersion, \
		somf_TSequence_MinorVersion),\
	   _somRenew(_somf_TSequence, buf)))

/*
 * Override method: somfAdd
 */
#define somf_TSequence_somfAdd(somSelf,ev,obj) \
	somf_TCollection_somfAdd(somSelf,ev,obj)

/*
 * Override method: somfRemove
 */
#define somf_TSequence_somfRemove(somSelf,ev,obj) \
	somf_TCollection_somfRemove(somSelf,ev,obj)

/*
 * Override method: somfRemoveAll
 */
#define somf_TSequence_somfRemoveAll(somSelf,ev) \
	somf_TCollection_somfRemoveAll(somSelf,ev)

/*
 * Override method: somfDeleteAll
 */
#define somf_TSequence_somfDeleteAll(somSelf,ev) \
	somf_TCollection_somfDeleteAll(somSelf,ev)

/*
 * Override method: somfCount
 */
#define somf_TSequence_somfCount(somSelf,ev) \
	somf_TCollection_somfCount(somSelf,ev)

/*
 * Override method: somfCreateIterator
 */
#define somf_TSequence_somfCreateIterator(somSelf,ev) \
	somf_TCollection_somfCreateIterator(somSelf,ev)

/*
 * Override method: somInit
 */
#define somf_TSequence_somInit(somSelf) \
	SOMObject_somInit(somSelf)

/*
 * New Method: somfAfter
 */
typedef somf_MCollectible*   SOMLINK somTP_somf_TSequence_somfAfter(somf_TSequence *somSelf, Environment *ev, 
		somf_MCollectible* obj);
#pragma linkage(somTP_somf_TSequence_somfAfter, system)
typedef somTP_somf_TSequence_somfAfter *somTD_somf_TSequence_somfAfter;
/*
 *  Return the object found after obj.
 */
#define somMD_somf_TSequence_somfAfter "::somf_TSequence::somfAfter"
#define somf_TSequence_somfAfter(somSelf,ev,obj) \
    (SOM_Resolve(somSelf, somf_TSequence, somfAfter) \
	(somSelf,ev,obj))
#ifndef SOMGD_somfAfter
    #if (defined(_somfAfter) || defined(__somfAfter))
        #undef _somfAfter
        #undef __somfAfter
        #define SOMGD_somfAfter 1
    #else
        #define _somfAfter somf_TSequence_somfAfter
    #endif /* _somfAfter */
#endif /* SOMGD_somfAfter */

/*
 * New Method: somfBefore
 */
typedef somf_MCollectible*   SOMLINK somTP_somf_TSequence_somfBefore(somf_TSequence *somSelf, Environment *ev, 
		somf_MCollectible* obj);
#pragma linkage(somTP_somf_TSequence_somfBefore, system)
typedef somTP_somf_TSequence_somfBefore *somTD_somf_TSequence_somfBefore;
/*
 *  Return the object found before obj.
 */
#define somMD_somf_TSequence_somfBefore "::somf_TSequence::somfBefore"
#define somf_TSequence_somfBefore(somSelf,ev,obj) \
    (SOM_Resolve(somSelf, somf_TSequence, somfBefore) \
	(somSelf,ev,obj))
#ifndef SOMGD_somfBefore
    #if (defined(_somfBefore) || defined(__somfBefore))
        #undef _somfBefore
        #undef __somfBefore
        #define SOMGD_somfBefore 1
    #else
        #define _somfBefore somf_TSequence_somfBefore
    #endif /* _somfBefore */
#endif /* SOMGD_somfBefore */

/*
 * New Method: somfLast
 */
typedef somf_MCollectible*   SOMLINK somTP_somf_TSequence_somfLast(somf_TSequence *somSelf, Environment *ev);
#pragma linkage(somTP_somf_TSequence_somfLast, system)
typedef somTP_somf_TSequence_somfLast *somTD_somf_TSequence_somfLast;
/*
 *  Determine the last object in this.
 */
#define somMD_somf_TSequence_somfLast "::somf_TSequence::somfLast"
#define somf_TSequence_somfLast(somSelf,ev) \
    (SOM_Resolve(somSelf, somf_TSequence, somfLast) \
	(somSelf,ev))
#ifndef SOMGD_somfLast
    #if (defined(_somfLast) || defined(__somfLast))
        #undef _somfLast
        #undef __somfLast
        #define SOMGD_somfLast 1
    #else
        #define _somfLast somf_TSequence_somfLast
    #endif /* _somfLast */
#endif /* SOMGD_somfLast */

/*
 * New Method: somfFirst
 */
typedef somf_MCollectible*   SOMLINK somTP_somf_TSequence_somfFirst(somf_TSequence *somSelf, Environment *ev);
#pragma linkage(somTP_somf_TSequence_somfFirst, system)
typedef somTP_somf_TSequence_somfFirst *somTD_somf_TSequence_somfFirst;
/*
 *  Determine the first object in this.
 */
#define somMD_somf_TSequence_somfFirst "::somf_TSequence::somfFirst"
#define somf_TSequence_somfFirst(somSelf,ev) \
    (SOM_Resolve(somSelf, somf_TSequence, somfFirst) \
	(somSelf,ev))
#ifndef SOMGD_somfFirst
    #if (defined(_somfFirst) || defined(__somfFirst))
        #undef _somfFirst
        #undef __somfFirst
        #define SOMGD_somfFirst 1
    #else
        #define _somfFirst somf_TSequence_somfFirst
    #endif /* _somfFirst */
#endif /* SOMGD_somfFirst */

/*
 * New Method: somfOccurrencesOf
 */
typedef long   SOMLINK somTP_somf_TSequence_somfOccurrencesOf(somf_TSequence *somSelf, Environment *ev, 
		somf_MCollectible* obj);
#pragma linkage(somTP_somf_TSequence_somfOccurrencesOf, system)
typedef somTP_somf_TSequence_somfOccurrencesOf *somTD_somf_TSequence_somfOccurrencesOf;
/*
 *  Determine the number of times obj is in this.
 */
#define somMD_somf_TSequence_somfOccurrencesOf "::somf_TSequence::somfOccurrencesOf"
#define somf_TSequence_somfOccurrencesOf(somSelf,ev,obj) \
    (SOM_Resolve(somSelf, somf_TSequence, somfOccurrencesOf) \
	(somSelf,ev,obj))
#ifndef SOMGD_somfOccurrencesOf
    #if (defined(_somfOccurrencesOf) || defined(__somfOccurrencesOf))
        #undef _somfOccurrencesOf
        #undef __somfOccurrencesOf
        #define SOMGD_somfOccurrencesOf 1
    #else
        #define _somfOccurrencesOf somf_TSequence_somfOccurrencesOf
    #endif /* _somfOccurrencesOf */
#endif /* SOMGD_somfOccurrencesOf */

/*
 * New Method: somfTSequenceInit
 */
typedef somf_TSequence*   SOMLINK somTP_somf_TSequence_somfTSequenceInit(somf_TSequence *somSelf, Environment *ev, 
		somf_MCollectible_somf_MCollectibleCompareFn testfn);
#pragma linkage(somTP_somf_TSequence_somfTSequenceInit, system)
typedef somTP_somf_TSequence_somfTSequenceInit *somTD_somf_TSequence_somfTSequenceInit;
/*
 *  This method initializes a new TSequence.
 */
#define somMD_somf_TSequence_somfTSequenceInit "::somf_TSequence::somfTSequenceInit"
#define somf_TSequence_somfTSequenceInit(somSelf,ev,testfn) \
    (SOM_Resolve(somSelf, somf_TSequence, somfTSequenceInit) \
	(somSelf,ev,testfn))
#ifndef SOMGD_somfTSequenceInit
    #if (defined(_somfTSequenceInit) || defined(__somfTSequenceInit))
        #undef _somfTSequenceInit
        #undef __somfTSequenceInit
        #define SOMGD_somfTSequenceInit 1
    #else
        #define _somfTSequenceInit somf_TSequence_somfTSequenceInit
    #endif /* _somfTSequenceInit */
#endif /* SOMGD_somfTSequenceInit */
#ifndef SOM_DONT_USE_INHERITED_MACROS
#define somf_TSequence_somfAddAll somf_TCollection_somfAddAll
#define somf_TSequence_somfMember somf_TCollection_somfMember
#define somf_TSequence_somfTestFunction somf_TCollection_somfTestFunction
#define somf_TSequence_somfSetTestFunction somf_TCollection_somfSetTestFunction
#define somf_TSequence_somfTCollectionInit somf_TCollection_somfTCollectionInit
#define somf_TSequence_somfIsEqual somf_MCollectible_somfIsEqual
#define somf_TSequence_somfClone somf_MCollectible_somfClone
#define somf_TSequence_somfClonePointer somf_MCollectible_somfClonePointer
#define somf_TSequence_somfHash somf_MCollectible_somfHash
#define somf_TSequence_somfIsSame somf_MCollectible_somfIsSame
#define somf_TSequence_somfIsNotEqual somf_MCollectible_somfIsNotEqual
#define somf_TSequence_somDefaultInit SOMObject_somDefaultInit
#define somf_TSequence_somDestruct SOMObject_somDestruct
#define somf_TSequence_somDefaultCopyInit SOMObject_somDefaultCopyInit
#define somf_TSequence_somDefaultAssign SOMObject_somDefaultAssign
#define somf_TSequence_somDefaultConstCopyInit SOMObject_somDefaultConstCopyInit
#define somf_TSequence_somDefaultVCopyInit SOMObject_somDefaultVCopyInit
#define somf_TSequence_somDefaultConstVCopyInit SOMObject_somDefaultConstVCopyInit
#define somf_TSequence_somDefaultConstAssign SOMObject_somDefaultConstAssign
#define somf_TSequence_somDefaultVAssign SOMObject_somDefaultVAssign
#define somf_TSequence_somDefaultConstVAssign SOMObject_somDefaultConstVAssign
#define somf_TSequence_somFree SOMObject_somFree
#define somf_TSequence_somUninit SOMObject_somUninit
#define somf_TSequence_somGetClass SOMObject_somGetClass
#define somf_TSequence_somGetClassName SOMObject_somGetClassName
#define somf_TSequence_somGetSize SOMObject_somGetSize
#define somf_TSequence_somIsA SOMObject_somIsA
#define somf_TSequence_somIsInstanceOf SOMObject_somIsInstanceOf
#define somf_TSequence_somRespondsTo SOMObject_somRespondsTo
#define somf_TSequence_somDispatch SOMObject_somDispatch
#define somf_TSequence_somClassDispatch SOMObject_somClassDispatch
#define somf_TSequence_somCastObj SOMObject_somCastObj
#define somf_TSequence_somResetObj SOMObject_somResetObj
#define somf_TSequence_somDispatchV SOMObject_somDispatchV
#define somf_TSequence_somDispatchL SOMObject_somDispatchL
#define somf_TSequence_somDispatchA SOMObject_somDispatchA
#define somf_TSequence_somDispatchD SOMObject_somDispatchD
#define somf_TSequence_somPrintSelf SOMObject_somPrintSelf
#define somf_TSequence_somDumpSelf SOMObject_somDumpSelf
#define somf_TSequence_somDumpSelfInt SOMObject_somDumpSelfInt
#endif /* SOM_DONT_USE_INHERITED_MACROS */

#endif       /* SOM_somf_TSequence_h */
