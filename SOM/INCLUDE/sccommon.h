
/*
 * This file was generated by the SOM Compiler.
 * FileName: sccommon.h.
 * Generated using:
 *     SOM Precompiler somipc: 2.29.1.17
 *     SOM Emitter emith: 2.47
 */

/*
 *   COMPONENT_NAME: some
 * 
 *   ORIGINS: 27
 * 
 * 
 *    25H7912  (C)  COPYRIGHT International Business Machines Corp. 1992,1994,1996
 *   All Rights Reserved
 *   Licensed Materials - Property of IBM
 *   US Government Users Restricted Rights - Use, duplication or
 *   disclosure restricted by GSA ADP Schedule Contract with IBM Corp.
 *  @(#) somc/sctypes.h 2.7 12/26/95 16:26:17 [7/30/96 14:46:04]
 * 
 */


#ifndef SOM_SOMTCommonEntryC_h
#define SOM_SOMTCommonEntryC_h


/*
 * Passthru lines: File: "C.h", "before"
 */
typedef enum somtVisibilityT { somtInternalVE, somtPublicVE, somtPrivateVE } somtVisibilityT;

#include <som.h>

/*
 * -- This emitter treats Method Tokens as Thunks by default.
 * -- Use the sc modifier "nothunks" to change this default
 */
#undef somresolve_
#define somresolve_(obj,mToken) ((somMethodProc*)((void)obj, mToken))

/*
 * Define the class name as an object type
 */
#ifndef SOMTCommonEntryC
#define SOMTCommonEntryC SOMObject
#endif
/*
 *  This class defines a number of methods and attributes that are
 *  common to <SOMTMethodEntry>, <SOMTDataEntry>, and
 *  <SOMTParameterEntry>.  No entries of this type will actually
 *  be found in the entry graph, instead they will all be one of
 *  the types mentioned above.
 *  Exception: entries whose somtElementType is SOMTTypedefBE, which
 *  represent a reference to a user-defined type, are instance of this class.
 */
#include <scentry.h>

/*
 * Start of bindings for IDL types
 */

#ifndef SOMClass
    #define SOMClass SOMObject
#endif /* SOMClass */
#ifndef SOMTEntryC
    #define SOMTEntryC SOMObject
#endif /* SOMTEntryC */
#ifndef SOMTEmitC
    #define SOMTEmitC SOMObject
#endif /* SOMTEmitC */
#ifndef SOMTMetaClassEntryC
    #define SOMTMetaClassEntryC SOMObject
#endif /* SOMTMetaClassEntryC */
#ifndef SOMTAttributeEntryC
    #define SOMTAttributeEntryC SOMObject
#endif /* SOMTAttributeEntryC */
#ifndef SOMTTypedefEntryC
    #define SOMTTypedefEntryC SOMObject
#endif /* SOMTTypedefEntryC */
#ifndef SOMTBaseClassEntryC
    #define SOMTBaseClassEntryC SOMObject
#endif /* SOMTBaseClassEntryC */
#ifndef SOMTPassthruEntryC
    #define SOMTPassthruEntryC SOMObject
#endif /* SOMTPassthruEntryC */
#ifndef SOMTDataEntryC
    #define SOMTDataEntryC SOMObject
#endif /* SOMTDataEntryC */
#ifndef SOMTMethodEntryC
    #define SOMTMethodEntryC SOMObject
#endif /* SOMTMethodEntryC */
#ifndef SOMTClassEntryC
    #define SOMTClassEntryC SOMObject
#endif /* SOMTClassEntryC */
#ifndef SOMTModuleEntryC
    #define SOMTModuleEntryC SOMObject
#endif /* SOMTModuleEntryC */
#ifndef SOMTParameterEntryC
    #define SOMTParameterEntryC SOMObject
#endif /* SOMTParameterEntryC */
#ifndef SOMTStructEntryC
    #define SOMTStructEntryC SOMObject
#endif /* SOMTStructEntryC */
#ifndef SOMTUnionEntryC
    #define SOMTUnionEntryC SOMObject
#endif /* SOMTUnionEntryC */
#ifndef SOMTEnumEntryC
    #define SOMTEnumEntryC SOMObject
#endif /* SOMTEnumEntryC */
#ifndef SOMTConstEntryC
    #define SOMTConstEntryC SOMObject
#endif /* SOMTConstEntryC */
#ifndef SOMTSequenceEntryC
    #define SOMTSequenceEntryC SOMObject
#endif /* SOMTSequenceEntryC */
#ifndef SOMTStringEntryC
    #define SOMTStringEntryC SOMObject
#endif /* SOMTStringEntryC */
#ifndef SOMTEnumNameEntryC
    #define SOMTEnumNameEntryC SOMObject
#endif /* SOMTEnumNameEntryC */
#ifndef SOMTCommonEntryC
    #define SOMTCommonEntryC SOMObject
#endif /* SOMTCommonEntryC */
#ifndef SOMTUserDefinedTypeEntryC
    #define SOMTUserDefinedTypeEntryC SOMObject
#endif /* SOMTUserDefinedTypeEntryC */

/*
 * End of bindings for IDL types.
 */

#define SOMTCommonEntryC_MajorVersion 2
#define SOMTCommonEntryC_MinorVersion 1

/*
 * External name shortening if required
 */
#ifdef SOM_USE_SHORT_EXTERNAL_NAMES
#define SOMTCommonEntryCNewClass c
#pragma linkage(c, system)
#define SOMTCommonEntryCClassData d
#define SOMTCommonEntryCCClassData x
#endif /* SOM_USE_SHORT_EXTERNAL_NAMES */
/*--------------Migration------------*/
#define SOMTCommonEntryC_classObj SOMTCommonEntryCClassData.classObject
#define _SOMTCommonEntryC SOMTCommonEntryC_classObj

/*
 * Declare the class creation procedure
 */
SOMEXTERN SOMClass * SOMLINK SOMTCommonEntryCNewClass(integer4 somtmajorVersion,
		integer4 somtminorVersion);
#pragma linkage(SOMTCommonEntryCNewClass, system)

/*
 * Declare the class data structure
 */
SOMEXTERN struct SOMTCommonEntryCClassDataStructure {
	SOMClass *classObject;
	somMToken _get_somtSourceText;
	somMToken _get_somtType;
	somMToken _get_somtVisibility;
	somMToken somtIsArray;
	somMToken somtIsPointer;
	somMToken somtIsArrayDominant;
	somMToken _get_somtTypeObj;
	somMToken _get_somtPtrs;
	somMToken _get_somtArrayDimsString;
	somMToken somtGetFirstArrayDimension;
	somMToken somtGetNextArrayDimension;
} SOMDLINK SOMTCommonEntryCClassData;

/*
 * Declare the C specific class data structure
 */
SOMEXTERN struct SOMTCommonEntryCCClassDataStructure {
	somMethodTabs parentMtab;
	somDToken instanceDataToken;
} SOMDLINK SOMTCommonEntryCCClassData;

/*
 * New and Renew macros for SOMTCommonEntryC
 */
#define SOMTCommonEntryCNew() \
   ( _SOMTCommonEntryC ? \
	_somNew(_SOMTCommonEntryC) \
	: ( SOMTCommonEntryCNewClass(\
		SOMTCommonEntryC_MajorVersion, \
		SOMTCommonEntryC_MinorVersion),\
	   _somNew(_SOMTCommonEntryC)))
#define SOMTCommonEntryCRenew(buf) \
   ( _SOMTCommonEntryC ? \
	_somRenew(_SOMTCommonEntryC, buf) \
	: ( SOMTCommonEntryCNewClass(\
		SOMTCommonEntryC_MajorVersion, \
		SOMTCommonEntryC_MinorVersion),\
	   _somRenew(_SOMTCommonEntryC, buf)))

/*
 * Override method: somDumpSelfInt
 */
#define SOMTCommonEntryC_somDumpSelfInt(somSelf,level) \
	SOMObject_somDumpSelfInt(somSelf,level)

/*
 * Override method: somtSetSymbolsOnEntry
 */
#define SOMTCommonEntryC_somtSetSymbolsOnEntry(somSelf,emitter,prefix) \
	SOMTEntryC_somtSetSymbolsOnEntry(somSelf,emitter,prefix)

/*
 * New Method: _get_somtTypeObj
 */
typedef SOMTEntryC*   SOMLINK somTP_SOMTCommonEntryC__get_somtTypeObj(SOMTCommonEntryC *somSelf);
#pragma linkage(somTP_SOMTCommonEntryC__get_somtTypeObj, system)
typedef somTP_SOMTCommonEntryC__get_somtTypeObj *somTD_SOMTCommonEntryC__get_somtTypeObj;
/*
 *  The object representing the base type of the entry.
 *  This does not include pointer stars or array declarators.
 */
#define somMD_SOMTCommonEntryC__get_somtTypeObj "::SOMTCommonEntryC::_get_somtTypeObj"
#define SOMTCommonEntryC__get_somtTypeObj(somSelf) \
    (SOM_Resolve(somSelf, SOMTCommonEntryC, _get_somtTypeObj) \
	(somSelf))
#ifndef SOMGD_get_somtTypeObj
    #if (defined(_get_somtTypeObj) || defined(__get_somtTypeObj))
        #undef _get_somtTypeObj
        #undef __get_somtTypeObj
        #define SOMGD_get_somtTypeObj 1
    #else
        #define __get_somtTypeObj SOMTCommonEntryC__get_somtTypeObj
    #endif /* __get_somtTypeObj */
#endif /* SOMGD_get_somtTypeObj */

/*
 * New Method: _get_somtPtrs
 */
typedef string   SOMLINK somTP_SOMTCommonEntryC__get_somtPtrs(SOMTCommonEntryC *somSelf);
#pragma linkage(somTP_SOMTCommonEntryC__get_somtPtrs, system)
typedef somTP_SOMTCommonEntryC__get_somtPtrs *somTD_SOMTCommonEntryC__get_somtPtrs;
/*
 *  The string of stars associated with the entry's type.
 *  For example, an object of type "foo" would have somtPtrs = NULL,
 *  type "foo *" would have somtPtrs = "*", type
 *  "foo **" would have somtPtrs = "**", etc.
 */
#define somMD_SOMTCommonEntryC__get_somtPtrs "::SOMTCommonEntryC::_get_somtPtrs"
#define SOMTCommonEntryC__get_somtPtrs(somSelf) \
    (SOM_Resolve(somSelf, SOMTCommonEntryC, _get_somtPtrs) \
	(somSelf))
#ifndef SOMGD_get_somtPtrs
    #if (defined(_get_somtPtrs) || defined(__get_somtPtrs))
        #undef _get_somtPtrs
        #undef __get_somtPtrs
        #define SOMGD_get_somtPtrs 1
    #else
        #define __get_somtPtrs SOMTCommonEntryC__get_somtPtrs
    #endif /* __get_somtPtrs */
#endif /* SOMGD_get_somtPtrs */

/*
 * New Method: _get_somtArrayDimsString
 */
typedef string   SOMLINK somTP_SOMTCommonEntryC__get_somtArrayDimsString(SOMTCommonEntryC *somSelf);
#pragma linkage(somTP_SOMTCommonEntryC__get_somtArrayDimsString, system)
typedef somTP_SOMTCommonEntryC__get_somtArrayDimsString *somTD_SOMTCommonEntryC__get_somtArrayDimsString;
/*
 *  Array dimensions in string form.
 */
#define somMD_SOMTCommonEntryC__get_somtArrayDimsString "::SOMTCommonEntryC::_get_somtArrayDimsString"
#define SOMTCommonEntryC__get_somtArrayDimsString(somSelf) \
    (SOM_Resolve(somSelf, SOMTCommonEntryC, _get_somtArrayDimsString) \
	(somSelf))
#ifndef SOMGD_get_somtArrayDimsString
    #if (defined(_get_somtArrayDimsString) || defined(__get_somtArrayDimsString))
        #undef _get_somtArrayDimsString
        #undef __get_somtArrayDimsString
        #define SOMGD_get_somtArrayDimsString 1
    #else
        #define __get_somtArrayDimsString SOMTCommonEntryC__get_somtArrayDimsString
    #endif /* __get_somtArrayDimsString */
#endif /* SOMGD_get_somtArrayDimsString */

/*
 * New Method: somtGetFirstArrayDimension
 */
typedef unsigned long   SOMLINK somTP_SOMTCommonEntryC_somtGetFirstArrayDimension(SOMTCommonEntryC *somSelf);
#pragma linkage(somTP_SOMTCommonEntryC_somtGetFirstArrayDimension, system)
typedef somTP_SOMTCommonEntryC_somtGetFirstArrayDimension *somTD_SOMTCommonEntryC_somtGetFirstArrayDimension;
/*
 *  The first array dimension, for items of type array.
 *  Zero indicates that the item is not an array.
 */
#define somMD_SOMTCommonEntryC_somtGetFirstArrayDimension "::SOMTCommonEntryC::somtGetFirstArrayDimension"
#define SOMTCommonEntryC_somtGetFirstArrayDimension(somSelf) \
    (SOM_Resolve(somSelf, SOMTCommonEntryC, somtGetFirstArrayDimension) \
	(somSelf))
#ifndef SOMGD_somtGetFirstArrayDimension
    #if (defined(_somtGetFirstArrayDimension) || defined(__somtGetFirstArrayDimension))
        #undef _somtGetFirstArrayDimension
        #undef __somtGetFirstArrayDimension
        #define SOMGD_somtGetFirstArrayDimension 1
    #else
        #define _somtGetFirstArrayDimension SOMTCommonEntryC_somtGetFirstArrayDimension
    #endif /* _somtGetFirstArrayDimension */
#endif /* SOMGD_somtGetFirstArrayDimension */

/*
 * New Method: somtGetNextArrayDimension
 */
typedef unsigned long   SOMLINK somTP_SOMTCommonEntryC_somtGetNextArrayDimension(SOMTCommonEntryC *somSelf);
#pragma linkage(somTP_SOMTCommonEntryC_somtGetNextArrayDimension, system)
typedef somTP_SOMTCommonEntryC_somtGetNextArrayDimension *somTD_SOMTCommonEntryC_somtGetNextArrayDimension;
/*
 *  The next array dimension, for items of type array,
 *  relative to the previous call to this method or to
 *  somtGetFirstArrayDimension.  Zero indicates no more dimensions.
 */
#define somMD_SOMTCommonEntryC_somtGetNextArrayDimension "::SOMTCommonEntryC::somtGetNextArrayDimension"
#define SOMTCommonEntryC_somtGetNextArrayDimension(somSelf) \
    (SOM_Resolve(somSelf, SOMTCommonEntryC, somtGetNextArrayDimension) \
	(somSelf))
#ifndef SOMGD_somtGetNextArrayDimension
    #if (defined(_somtGetNextArrayDimension) || defined(__somtGetNextArrayDimension))
        #undef _somtGetNextArrayDimension
        #undef __somtGetNextArrayDimension
        #define SOMGD_somtGetNextArrayDimension 1
    #else
        #define _somtGetNextArrayDimension SOMTCommonEntryC_somtGetNextArrayDimension
    #endif /* _somtGetNextArrayDimension */
#endif /* SOMGD_somtGetNextArrayDimension */

/*
 * New Method: _get_somtSourceText
 */
typedef string   SOMLINK somTP_SOMTCommonEntryC__get_somtSourceText(SOMTCommonEntryC *somSelf);
#pragma linkage(somTP_SOMTCommonEntryC__get_somtSourceText, system)
typedef somTP_SOMTCommonEntryC__get_somtSourceText *somTD_SOMTCommonEntryC__get_somtSourceText;
/*
 *  The un-parsed source text for this entry, with leading and
 *  trailing white space removed.  For attribute/typedef declarators
 *  and for user-defined types, this attribute only provides the
 *  source text for the entry's name.  For methods, arguments,
 *  and instance variables, however, this attribute provides the
 *  full definition.
 */
#define somMD_SOMTCommonEntryC__get_somtSourceText "::SOMTCommonEntryC::_get_somtSourceText"
#define SOMTCommonEntryC__get_somtSourceText(somSelf) \
    (SOM_Resolve(somSelf, SOMTCommonEntryC, _get_somtSourceText) \
	(somSelf))
#ifndef SOMGD_get_somtSourceText
    #if (defined(_get_somtSourceText) || defined(__get_somtSourceText))
        #undef _get_somtSourceText
        #undef __get_somtSourceText
        #define SOMGD_get_somtSourceText 1
    #else
        #define __get_somtSourceText SOMTCommonEntryC__get_somtSourceText
    #endif /* __get_somtSourceText */
#endif /* SOMGD_get_somtSourceText */

/*
 * New Method: _get_somtType
 */
typedef string   SOMLINK somTP_SOMTCommonEntryC__get_somtType(SOMTCommonEntryC *somSelf);
#pragma linkage(somTP_SOMTCommonEntryC__get_somtType, system)
typedef somTP_SOMTCommonEntryC__get_somtType *somTD_SOMTCommonEntryC__get_somtType;
/*
 *  The IDL type for this entry in string form. For methods this is the
 *  return type.  For data or parameters this is the type of the data
 *  item or parameter. For user-defined types, this is the type specification.
 *  It is of the form:   <typename><pointer-stars> <array-declarators>
 */
#define somMD_SOMTCommonEntryC__get_somtType "::SOMTCommonEntryC::_get_somtType"
#define SOMTCommonEntryC__get_somtType(somSelf) \
    (SOM_Resolve(somSelf, SOMTCommonEntryC, _get_somtType) \
	(somSelf))
#ifndef SOMGD_get_somtType
    #if (defined(_get_somtType) || defined(__get_somtType))
        #undef _get_somtType
        #undef __get_somtType
        #define SOMGD_get_somtType 1
    #else
        #define __get_somtType SOMTCommonEntryC__get_somtType
    #endif /* __get_somtType */
#endif /* SOMGD_get_somtType */

/*
 * New Method: _get_somtVisibility
 */
typedef somtVisibilityT   SOMLINK somTP_SOMTCommonEntryC__get_somtVisibility(SOMTCommonEntryC *somSelf);
#pragma linkage(somTP_SOMTCommonEntryC__get_somtVisibility, system)
typedef somTP_SOMTCommonEntryC__get_somtVisibility *somTD_SOMTCommonEntryC__get_somtVisibility;
/*
 *  The visibility of this entry.  Note: the visibility of
 *  parameter entries will always be public, and methods can never be
 *  internal.
 */
#define somMD_SOMTCommonEntryC__get_somtVisibility "::SOMTCommonEntryC::_get_somtVisibility"
#define SOMTCommonEntryC__get_somtVisibility(somSelf) \
    (SOM_Resolve(somSelf, SOMTCommonEntryC, _get_somtVisibility) \
	(somSelf))
#ifndef SOMGD_get_somtVisibility
    #if (defined(_get_somtVisibility) || defined(__get_somtVisibility))
        #undef _get_somtVisibility
        #undef __get_somtVisibility
        #define SOMGD_get_somtVisibility 1
    #else
        #define __get_somtVisibility SOMTCommonEntryC__get_somtVisibility
    #endif /* __get_somtVisibility */
#endif /* SOMGD_get_somtVisibility */

/*
 * New Method: somtIsArray
 */
typedef boolean   SOMLINK somTP_SOMTCommonEntryC_somtIsArray(SOMTCommonEntryC *somSelf, 
		long* size);
#pragma linkage(somTP_SOMTCommonEntryC_somtIsArray, system)
typedef somTP_SOMTCommonEntryC_somtIsArray *somTD_SOMTCommonEntryC_somtIsArray;
/*
 *  Returns 1 (true) if the type involves an array.  When the type
 *  involves an array then <size> is set to be the size of the
 *  array.
 */
#define somMD_SOMTCommonEntryC_somtIsArray "::SOMTCommonEntryC::somtIsArray"
#define SOMTCommonEntryC_somtIsArray(somSelf,size) \
    (SOM_Resolve(somSelf, SOMTCommonEntryC, somtIsArray) \
	(somSelf,size))
#ifndef SOMGD_somtIsArray
    #if (defined(_somtIsArray) || defined(__somtIsArray))
        #undef _somtIsArray
        #undef __somtIsArray
        #define SOMGD_somtIsArray 1
    #else
        #define _somtIsArray SOMTCommonEntryC_somtIsArray
    #endif /* _somtIsArray */
#endif /* SOMGD_somtIsArray */

/*
 * New Method: somtIsPointer
 */
typedef boolean   SOMLINK somTP_SOMTCommonEntryC_somtIsPointer(SOMTCommonEntryC *somSelf);
#pragma linkage(somTP_SOMTCommonEntryC_somtIsPointer, system)
typedef somTP_SOMTCommonEntryC_somtIsPointer *somTD_SOMTCommonEntryC_somtIsPointer;
/*
 *  Returns 1 (true) if the type involves a pointer, and 0 (false)
 *  otherwise
 */
#define somMD_SOMTCommonEntryC_somtIsPointer "::SOMTCommonEntryC::somtIsPointer"
#define SOMTCommonEntryC_somtIsPointer(somSelf) \
    (SOM_Resolve(somSelf, SOMTCommonEntryC, somtIsPointer) \
	(somSelf))
#ifndef SOMGD_somtIsPointer
    #if (defined(_somtIsPointer) || defined(__somtIsPointer))
        #undef _somtIsPointer
        #undef __somtIsPointer
        #define SOMGD_somtIsPointer 1
    #else
        #define _somtIsPointer SOMTCommonEntryC_somtIsPointer
    #endif /* _somtIsPointer */
#endif /* SOMGD_somtIsPointer */
#ifndef SOM_DONT_USE_INHERITED_MACROS
#define SOMTCommonEntryC__get_somtEntryName SOMTEntryC__get_somtEntryName
#define SOMTCommonEntryC__set_somtEntryName SOMTEntryC__set_somtEntryName
#define SOMTCommonEntryC__get_somtElementType SOMTEntryC__get_somtElementType
#define SOMTCommonEntryC__set_somtElementType SOMTEntryC__set_somtElementType
#define SOMTCommonEntryC__get_somtElementTypeName SOMTEntryC__get_somtElementTypeName
#define SOMTCommonEntryC__get_somtEntryComment SOMTEntryC__get_somtEntryComment
#define SOMTCommonEntryC__get_somtSourceLineNumber SOMTEntryC__get_somtSourceLineNumber
#define SOMTCommonEntryC__get_somtTypeCode SOMTEntryC__get_somtTypeCode
#define SOMTCommonEntryC__get_somtIsReference SOMTEntryC__get_somtIsReference
#define SOMTCommonEntryC__get_somtIDLScopedName SOMTEntryC__get_somtIDLScopedName
#define SOMTCommonEntryC__get_somtCScopedName SOMTEntryC__get_somtCScopedName
#define SOMTCommonEntryC_somtGetModifierValue SOMTEntryC_somtGetModifierValue
#define SOMTCommonEntryC_somtGetFirstModifier SOMTEntryC_somtGetFirstModifier
#define SOMTCommonEntryC_somtGetNextModifier SOMTEntryC_somtGetNextModifier
#define SOMTCommonEntryC_somtFormatModifier SOMTEntryC_somtFormatModifier
#define SOMTCommonEntryC_somtGetModifierList SOMTEntryC_somtGetModifierList
#define SOMTCommonEntryC_somtSetEntryStruct SOMTEntryC_somtSetEntryStruct
#define SOMTCommonEntryC_somInit SOMObject_somInit
#define SOMTCommonEntryC_somUninit SOMObject_somUninit
#define SOMTCommonEntryC_somPrintSelf SOMObject_somPrintSelf
#define SOMTCommonEntryC_somDumpSelf SOMObject_somDumpSelf
#define SOMTCommonEntryC_somDefaultInit SOMObject_somDefaultInit
#define SOMTCommonEntryC_somDestruct SOMObject_somDestruct
#define SOMTCommonEntryC_somDefaultCopyInit SOMObject_somDefaultCopyInit
#define SOMTCommonEntryC_somDefaultAssign SOMObject_somDefaultAssign
#define SOMTCommonEntryC_somDefaultConstCopyInit SOMObject_somDefaultConstCopyInit
#define SOMTCommonEntryC_somDefaultVCopyInit SOMObject_somDefaultVCopyInit
#define SOMTCommonEntryC_somDefaultConstVCopyInit SOMObject_somDefaultConstVCopyInit
#define SOMTCommonEntryC_somDefaultConstAssign SOMObject_somDefaultConstAssign
#define SOMTCommonEntryC_somDefaultVAssign SOMObject_somDefaultVAssign
#define SOMTCommonEntryC_somDefaultConstVAssign SOMObject_somDefaultConstVAssign
#define SOMTCommonEntryC_somFree SOMObject_somFree
#define SOMTCommonEntryC_somGetClass SOMObject_somGetClass
#define SOMTCommonEntryC_somGetClassName SOMObject_somGetClassName
#define SOMTCommonEntryC_somGetSize SOMObject_somGetSize
#define SOMTCommonEntryC_somIsA SOMObject_somIsA
#define SOMTCommonEntryC_somIsInstanceOf SOMObject_somIsInstanceOf
#define SOMTCommonEntryC_somRespondsTo SOMObject_somRespondsTo
#define SOMTCommonEntryC_somDispatch SOMObject_somDispatch
#define SOMTCommonEntryC_somClassDispatch SOMObject_somClassDispatch
#define SOMTCommonEntryC_somCastObj SOMObject_somCastObj
#define SOMTCommonEntryC_somResetObj SOMObject_somResetObj
#define SOMTCommonEntryC_somDispatchV SOMObject_somDispatchV
#define SOMTCommonEntryC_somDispatchL SOMObject_somDispatchL
#define SOMTCommonEntryC_somDispatchA SOMObject_somDispatchA
#define SOMTCommonEntryC_somDispatchD SOMObject_somDispatchD
#endif /* SOM_DONT_USE_INHERITED_MACROS */

#endif       /* SOM_SOMTCommonEntryC_h */
