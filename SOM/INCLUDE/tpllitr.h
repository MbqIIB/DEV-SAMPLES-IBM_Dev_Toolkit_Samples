
/*
 * This file was generated by the SOM Compiler.
 * FileName: tpllitr.h.
 * Generated using:
 *     SOM Precompiler somipc: 2.29.1.17
 *     SOM Emitter emith: 2.47
 */

/*
 *    COMPONENT_NAME: somuc
 * 
 *    ORIGINS: 82, 81, 27
 * 
 * 
 *     25H7912  (C)  COPYRIGHT International Business Machines Corp. 1992,1996,1996
 *    All Rights Reserved
 *    Licensed Materials - Property of IBM
 *    US Government Users Restricted Rights - Use, duplication or
 *    disclosure restricted by GSA ADP Schedule Contract with IBM Corp.
 * 
 *    Copyright © 1988, 1989 Apple Computer, Inc. All rights reserved.
 * 
 * CLASS_NAME: somf_TPrimitiveLinkedListIterator
 * 
 * DESCRIPTION: An iterator for somf_TPrimitiveLinkedList that will iterate over
 *              all of the objects in a primitive linked list.
 * 
 * 
 */


#ifndef SOM_somf_TPrimitiveLinkedListIterator_h
#define SOM_somf_TPrimitiveLinkedListIterator_h


#include <som.h>

/*
 * -- This emitter treats Method Tokens as Thunks by default.
 * -- Use the sc modifier "nothunks" to change this default
 */
#undef somresolve_
#define somresolve_(obj,mToken) ((somMethodProc*)((void)obj, mToken))

/*
 * Define the class name as an object type
 */
#ifndef somf_TPrimitiveLinkedListIterator
#define somf_TPrimitiveLinkedListIterator SOMObject
#endif
#include <somobj.h>

/*
 * Start of bindings for IDL types
 */

#ifndef SOMClass
    #define SOMClass SOMObject
#endif /* SOMClass */
#ifndef somf_TPrimitiveLinkedList
    #define somf_TPrimitiveLinkedList SOMObject
#endif /* somf_TPrimitiveLinkedList */
#ifndef somf_MLinkable
    #define somf_MLinkable SOMObject
#endif /* somf_MLinkable */

/*
 * End of bindings for IDL types.
 */

/*
 * Passthru lines: File: "C.h", "after"
 */

#include <mlink.h>
#include <tpll.h>

#define somf_TPrimitiveLinkedListIterator_MajorVersion 2
#define somf_TPrimitiveLinkedListIterator_MinorVersion 1

/*
 * External name shortening if required
 */
#ifdef SOM_USE_SHORT_EXTERNAL_NAMES
#define somf_TPrimitiveLinkedListIteratorNewClass c
#pragma linkage(c, system)
#define somf_TPrimitiveLinkedListIteratorClassData d
#define somf_TPrimitiveLinkedListIteratorCClassData x
#endif /* SOM_USE_SHORT_EXTERNAL_NAMES */
/*--------------Migration------------*/
#define somf_TPrimitiveLinkedListIterator_classObj somf_TPrimitiveLinkedListIteratorClassData.classObject
#define _somf_TPrimitiveLinkedListIterator somf_TPrimitiveLinkedListIterator_classObj

/*
 * Declare the class creation procedure
 */
SOMEXTERN SOMClass * SOMLINK somf_TPrimitiveLinkedListIteratorNewClass(integer4 somtmajorVersion,
		integer4 somtminorVersion);
#pragma linkage(somf_TPrimitiveLinkedListIteratorNewClass, system)

/*
 * Declare the class data structure
 */
SOMEXTERN struct somf_TPrimitiveLinkedListIteratorClassDataStructure {
	SOMClass *classObject;
	somMToken somfFirst;
	somMToken somfNext;
	somMToken somfLast;
	somMToken somfPrevious;
	somMToken somfTPrimitiveLinkedListIteratorInit;
} SOMDLINK somf_TPrimitiveLinkedListIteratorClassData;

/*
 * Declare the C specific class data structure
 */
SOMEXTERN struct somf_TPrimitiveLinkedListIteratorCClassDataStructure {
	somMethodTabs parentMtab;
	somDToken instanceDataToken;
} SOMDLINK somf_TPrimitiveLinkedListIteratorCClassData;

/*
 * New and Renew macros for somf_TPrimitiveLinkedListIterator
 */
#define somf_TPrimitiveLinkedListIteratorNew() \
   ( _somf_TPrimitiveLinkedListIterator ? \
	_somNew(_somf_TPrimitiveLinkedListIterator) \
	: ( somf_TPrimitiveLinkedListIteratorNewClass(\
		somf_TPrimitiveLinkedListIterator_MajorVersion, \
		somf_TPrimitiveLinkedListIterator_MinorVersion),\
	   _somNew(_somf_TPrimitiveLinkedListIterator)))
#define somf_TPrimitiveLinkedListIteratorRenew(buf) \
   ( _somf_TPrimitiveLinkedListIterator ? \
	_somRenew(_somf_TPrimitiveLinkedListIterator, buf) \
	: ( somf_TPrimitiveLinkedListIteratorNewClass(\
		somf_TPrimitiveLinkedListIterator_MajorVersion, \
		somf_TPrimitiveLinkedListIterator_MinorVersion),\
	   _somRenew(_somf_TPrimitiveLinkedListIterator, buf)))

/*
 * Override method: somUninit
 */
#define somf_TPrimitiveLinkedListIterator_somUninit(somSelf) \
	SOMObject_somUninit(somSelf)

/*
 * New Method: somfTPrimitiveLinkedListIteratorInit
 */
typedef somf_TPrimitiveLinkedListIterator*   SOMLINK somTP_somf_TPrimitiveLinkedListIterator_somfTPrimitiveLinkedListIteratorInit(somf_TPrimitiveLinkedListIterator *somSelf, Environment *ev, 
		somf_TPrimitiveLinkedList* list);
#pragma linkage(somTP_somf_TPrimitiveLinkedListIterator_somfTPrimitiveLinkedListIteratorInit, system)
typedef somTP_somf_TPrimitiveLinkedListIterator_somfTPrimitiveLinkedListIteratorInit *somTD_somf_TPrimitiveLinkedListIterator_somfTPrimitiveLinkedListIteratorInit;
/*
 *  Initialize somf_TPrimitiveLinkedListIterator using somf_TPrimitiveLinkedList list.
 */
#define somMD_somf_TPrimitiveLinkedListIterator_somfTPrimitiveLinkedListIteratorInit "::somf_TPrimitiveLinkedListIterator::somfTPrimitiveLinkedListIteratorInit"
#define somf_TPrimitiveLinkedListIterator_somfTPrimitiveLinkedListIteratorInit(somSelf,ev,list) \
    (SOM_Resolve(somSelf, somf_TPrimitiveLinkedListIterator, somfTPrimitiveLinkedListIteratorInit) \
	(somSelf,ev,list))
#ifndef SOMGD_somfTPrimitiveLinkedListIteratorInit
    #if (defined(_somfTPrimitiveLinkedListIteratorInit) || defined(__somfTPrimitiveLinkedListIteratorInit))
        #undef _somfTPrimitiveLinkedListIteratorInit
        #undef __somfTPrimitiveLinkedListIteratorInit
        #define SOMGD_somfTPrimitiveLinkedListIteratorInit 1
    #else
        #define _somfTPrimitiveLinkedListIteratorInit somf_TPrimitiveLinkedListIterator_somfTPrimitiveLinkedListIteratorInit
    #endif /* _somfTPrimitiveLinkedListIteratorInit */
#endif /* SOMGD_somfTPrimitiveLinkedListIteratorInit */

/*
 * New Method: somfFirst
 */
typedef somf_MLinkable*   SOMLINK somTP_somf_TPrimitiveLinkedListIterator_somfFirst(somf_TPrimitiveLinkedListIterator *somSelf, Environment *ev);
#pragma linkage(somTP_somf_TPrimitiveLinkedListIterator_somfFirst, system)
typedef somTP_somf_TPrimitiveLinkedListIterator_somfFirst *somTD_somf_TPrimitiveLinkedListIterator_somfFirst;
/*
 *  Reset the iterator and return the first element of the list.
 */
#define somMD_somf_TPrimitiveLinkedListIterator_somfFirst "::somf_TPrimitiveLinkedListIterator::somfFirst"
#define somf_TPrimitiveLinkedListIterator_somfFirst(somSelf,ev) \
    (SOM_Resolve(somSelf, somf_TPrimitiveLinkedListIterator, somfFirst) \
	(somSelf,ev))
#ifndef SOMGD_somfFirst
    #if (defined(_somfFirst) || defined(__somfFirst))
        #undef _somfFirst
        #undef __somfFirst
        #define SOMGD_somfFirst 1
    #else
        #define _somfFirst somf_TPrimitiveLinkedListIterator_somfFirst
    #endif /* _somfFirst */
#endif /* SOMGD_somfFirst */

/*
 * New Method: somfNext
 */
typedef somf_MLinkable*   SOMLINK somTP_somf_TPrimitiveLinkedListIterator_somfNext(somf_TPrimitiveLinkedListIterator *somSelf, Environment *ev);
#pragma linkage(somTP_somf_TPrimitiveLinkedListIterator_somfNext, system)
typedef somTP_somf_TPrimitiveLinkedListIterator_somfNext *somTD_somf_TPrimitiveLinkedListIterator_somfNext;
/*
 *  Retrieve the next object in the list and return it.
 */
#define somMD_somf_TPrimitiveLinkedListIterator_somfNext "::somf_TPrimitiveLinkedListIterator::somfNext"
#define somf_TPrimitiveLinkedListIterator_somfNext(somSelf,ev) \
    (SOM_Resolve(somSelf, somf_TPrimitiveLinkedListIterator, somfNext) \
	(somSelf,ev))
#ifndef SOMGD_somfNext
    #if (defined(_somfNext) || defined(__somfNext))
        #undef _somfNext
        #undef __somfNext
        #define SOMGD_somfNext 1
    #else
        #define _somfNext somf_TPrimitiveLinkedListIterator_somfNext
    #endif /* _somfNext */
#endif /* SOMGD_somfNext */

/*
 * New Method: somfLast
 */
typedef somf_MLinkable*   SOMLINK somTP_somf_TPrimitiveLinkedListIterator_somfLast(somf_TPrimitiveLinkedListIterator *somSelf, Environment *ev);
#pragma linkage(somTP_somf_TPrimitiveLinkedListIterator_somfLast, system)
typedef somTP_somf_TPrimitiveLinkedListIterator_somfLast *somTD_somf_TPrimitiveLinkedListIterator_somfLast;
/*
 *  Retrieve the last object in the list and return it.
 */
#define somMD_somf_TPrimitiveLinkedListIterator_somfLast "::somf_TPrimitiveLinkedListIterator::somfLast"
#define somf_TPrimitiveLinkedListIterator_somfLast(somSelf,ev) \
    (SOM_Resolve(somSelf, somf_TPrimitiveLinkedListIterator, somfLast) \
	(somSelf,ev))
#ifndef SOMGD_somfLast
    #if (defined(_somfLast) || defined(__somfLast))
        #undef _somfLast
        #undef __somfLast
        #define SOMGD_somfLast 1
    #else
        #define _somfLast somf_TPrimitiveLinkedListIterator_somfLast
    #endif /* _somfLast */
#endif /* SOMGD_somfLast */

/*
 * New Method: somfPrevious
 */
typedef somf_MLinkable*   SOMLINK somTP_somf_TPrimitiveLinkedListIterator_somfPrevious(somf_TPrimitiveLinkedListIterator *somSelf, Environment *ev);
#pragma linkage(somTP_somf_TPrimitiveLinkedListIterator_somfPrevious, system)
typedef somTP_somf_TPrimitiveLinkedListIterator_somfPrevious *somTD_somf_TPrimitiveLinkedListIterator_somfPrevious;
/*
 *  Retrieve the previous object in the list and return it.
 */
#define somMD_somf_TPrimitiveLinkedListIterator_somfPrevious "::somf_TPrimitiveLinkedListIterator::somfPrevious"
#define somf_TPrimitiveLinkedListIterator_somfPrevious(somSelf,ev) \
    (SOM_Resolve(somSelf, somf_TPrimitiveLinkedListIterator, somfPrevious) \
	(somSelf,ev))
#ifndef SOMGD_somfPrevious
    #if (defined(_somfPrevious) || defined(__somfPrevious))
        #undef _somfPrevious
        #undef __somfPrevious
        #define SOMGD_somfPrevious 1
    #else
        #define _somfPrevious somf_TPrimitiveLinkedListIterator_somfPrevious
    #endif /* _somfPrevious */
#endif /* SOMGD_somfPrevious */
#ifndef SOM_DONT_USE_INHERITED_MACROS
#define somf_TPrimitiveLinkedListIterator_somDefaultInit SOMObject_somDefaultInit
#define somf_TPrimitiveLinkedListIterator_somDestruct SOMObject_somDestruct
#define somf_TPrimitiveLinkedListIterator_somDefaultCopyInit SOMObject_somDefaultCopyInit
#define somf_TPrimitiveLinkedListIterator_somDefaultAssign SOMObject_somDefaultAssign
#define somf_TPrimitiveLinkedListIterator_somDefaultConstCopyInit SOMObject_somDefaultConstCopyInit
#define somf_TPrimitiveLinkedListIterator_somDefaultVCopyInit SOMObject_somDefaultVCopyInit
#define somf_TPrimitiveLinkedListIterator_somDefaultConstVCopyInit SOMObject_somDefaultConstVCopyInit
#define somf_TPrimitiveLinkedListIterator_somDefaultConstAssign SOMObject_somDefaultConstAssign
#define somf_TPrimitiveLinkedListIterator_somDefaultVAssign SOMObject_somDefaultVAssign
#define somf_TPrimitiveLinkedListIterator_somDefaultConstVAssign SOMObject_somDefaultConstVAssign
#define somf_TPrimitiveLinkedListIterator_somInit SOMObject_somInit
#define somf_TPrimitiveLinkedListIterator_somFree SOMObject_somFree
#define somf_TPrimitiveLinkedListIterator_somGetClass SOMObject_somGetClass
#define somf_TPrimitiveLinkedListIterator_somGetClassName SOMObject_somGetClassName
#define somf_TPrimitiveLinkedListIterator_somGetSize SOMObject_somGetSize
#define somf_TPrimitiveLinkedListIterator_somIsA SOMObject_somIsA
#define somf_TPrimitiveLinkedListIterator_somIsInstanceOf SOMObject_somIsInstanceOf
#define somf_TPrimitiveLinkedListIterator_somRespondsTo SOMObject_somRespondsTo
#define somf_TPrimitiveLinkedListIterator_somDispatch SOMObject_somDispatch
#define somf_TPrimitiveLinkedListIterator_somClassDispatch SOMObject_somClassDispatch
#define somf_TPrimitiveLinkedListIterator_somCastObj SOMObject_somCastObj
#define somf_TPrimitiveLinkedListIterator_somResetObj SOMObject_somResetObj
#define somf_TPrimitiveLinkedListIterator_somDispatchV SOMObject_somDispatchV
#define somf_TPrimitiveLinkedListIterator_somDispatchL SOMObject_somDispatchL
#define somf_TPrimitiveLinkedListIterator_somDispatchA SOMObject_somDispatchA
#define somf_TPrimitiveLinkedListIterator_somDispatchD SOMObject_somDispatchD
#define somf_TPrimitiveLinkedListIterator_somPrintSelf SOMObject_somPrintSelf
#define somf_TPrimitiveLinkedListIterator_somDumpSelf SOMObject_somDumpSelf
#define somf_TPrimitiveLinkedListIterator_somDumpSelfInt SOMObject_somDumpSelfInt
#endif /* SOM_DONT_USE_INHERITED_MACROS */

#endif       /* SOM_somf_TPrimitiveLinkedListIterator_h */
