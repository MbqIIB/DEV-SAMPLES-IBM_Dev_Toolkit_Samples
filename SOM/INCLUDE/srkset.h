
/*
 * This file was generated by the SOM Compiler.
 * FileName: srkset.h.
 * Generated using:
 *     SOM Precompiler somipc: 2.29.1.17
 *     SOM Emitter emith: 2.47
 */

/*
 *    COMPONENT_NAME: somp
 * 
 *    ORIGINS: 27
 * 
 * 
 *     25H7912  (C)  COPYRIGHT International Business Machines Corp. 1992,1996,1996
 *    All Rights Reserved
 *    Licensed Materials - Property of IBM
 *    US Government Users Restricted Rights - Use, duplication or
 *    disclosure restricted by GSA ADP Schedule Contract with IBM Corp.
 * 
 * 
 *   21055    [04/12/96]  partha    make the dict.idl include come from private
 */


#ifndef SOM_SOMPKeyedSet_h
#define SOM_SOMPKeyedSet_h


#include <som.h>

/*
 * -- This emitter treats Method Tokens as Thunks by default.
 * -- Use the sc modifier "nothunks" to change this default
 */
#undef somresolve_
#define somresolve_(obj,mToken) ((somMethodProc*)((void)obj, mToken))

/*
 * Define the class name as an object type
 */
#ifndef SOMPKeyedSet
#define SOMPKeyedSet SOMObject
#endif
/*
 *  A set of objects identified by a key.
 */
#include <somobj.h>

/*
 * Start of bindings for IDL types
 */

#ifndef SOMClass
    #define SOMClass SOMObject
#endif /* SOMClass */

/*
 * End of bindings for IDL types.
 */

#define SOMPKeyedSet_MajorVersion 2
#define SOMPKeyedSet_MinorVersion 1

/*
 * External name shortening if required
 */
#ifdef SOM_USE_SHORT_EXTERNAL_NAMES
#define SOMPKeyedSetNewClass c
#pragma linkage(c, system)
#define SOMPKeyedSetClassData d
#define SOMPKeyedSetCClassData x
#endif /* SOM_USE_SHORT_EXTERNAL_NAMES */
/*--------------Migration------------*/
#define SOMPKeyedSet_classObj SOMPKeyedSetClassData.classObject
#define _SOMPKeyedSet SOMPKeyedSet_classObj

/*
 * Declare the class creation procedure
 */
SOMEXTERN SOMClass * SOMLINK SOMPKeyedSetNewClass(integer4 somtmajorVersion,
		integer4 somtminorVersion);
#pragma linkage(SOMPKeyedSetNewClass, system)

/*
 * Declare the class data structure
 */
SOMEXTERN struct SOMPKeyedSetClassDataStructure {
	SOMClass *classObject;
	somMToken sompGetFirstObject;
} SOMDLINK SOMPKeyedSetClassData;

/*
 * Declare the C specific class data structure
 */
SOMEXTERN struct SOMPKeyedSetCClassDataStructure {
	somMethodTabs parentMtab;
	somDToken instanceDataToken;
} SOMDLINK SOMPKeyedSetCClassData;

/*
 * New and Renew macros for SOMPKeyedSet
 */
#define SOMPKeyedSetNew() \
   ( _SOMPKeyedSet ? \
	_somNew(_SOMPKeyedSet) \
	: ( SOMPKeyedSetNewClass(\
		SOMPKeyedSet_MajorVersion, \
		SOMPKeyedSet_MinorVersion),\
	   _somNew(_SOMPKeyedSet)))
#define SOMPKeyedSetRenew(buf) \
   ( _SOMPKeyedSet ? \
	_somRenew(_SOMPKeyedSet, buf) \
	: ( SOMPKeyedSetNewClass(\
		SOMPKeyedSet_MajorVersion, \
		SOMPKeyedSet_MinorVersion),\
	   _somRenew(_SOMPKeyedSet, buf)))

/*
 * New Method: sompGetFirstObject
 */
typedef SOMObject*   SOMLINK somTP_SOMPKeyedSet_sompGetFirstObject(SOMPKeyedSet *somSelf, Environment *ev);
#pragma linkage(somTP_SOMPKeyedSet_sompGetFirstObject, system)
typedef somTP_SOMPKeyedSet_sompGetFirstObject *somTD_SOMPKeyedSet_sompGetFirstObject;
/*
 *  Get first object in this set.
 *  If set is empty, returns NULL.
 */
#define somMD_SOMPKeyedSet_sompGetFirstObject "::SOMPKeyedSet::sompGetFirstObject"
#define SOMPKeyedSet_sompGetFirstObject(somSelf,ev) \
    (SOM_Resolve(somSelf, SOMPKeyedSet, sompGetFirstObject) \
	(somSelf,ev))
#ifndef SOMGD_sompGetFirstObject
    #if (defined(_sompGetFirstObject) || defined(__sompGetFirstObject))
        #undef _sompGetFirstObject
        #undef __sompGetFirstObject
        #define SOMGD_sompGetFirstObject 1
    #else
        #define _sompGetFirstObject SOMPKeyedSet_sompGetFirstObject
    #endif /* _sompGetFirstObject */
#endif /* SOMGD_sompGetFirstObject */
#ifndef SOM_DONT_USE_INHERITED_MACROS
#define SOMPKeyedSet_somDefaultInit SOMObject_somDefaultInit
#define SOMPKeyedSet_somDestruct SOMObject_somDestruct
#define SOMPKeyedSet_somDefaultCopyInit SOMObject_somDefaultCopyInit
#define SOMPKeyedSet_somDefaultAssign SOMObject_somDefaultAssign
#define SOMPKeyedSet_somDefaultConstCopyInit SOMObject_somDefaultConstCopyInit
#define SOMPKeyedSet_somDefaultVCopyInit SOMObject_somDefaultVCopyInit
#define SOMPKeyedSet_somDefaultConstVCopyInit SOMObject_somDefaultConstVCopyInit
#define SOMPKeyedSet_somDefaultConstAssign SOMObject_somDefaultConstAssign
#define SOMPKeyedSet_somDefaultVAssign SOMObject_somDefaultVAssign
#define SOMPKeyedSet_somDefaultConstVAssign SOMObject_somDefaultConstVAssign
#define SOMPKeyedSet_somInit SOMObject_somInit
#define SOMPKeyedSet_somFree SOMObject_somFree
#define SOMPKeyedSet_somUninit SOMObject_somUninit
#define SOMPKeyedSet_somGetClass SOMObject_somGetClass
#define SOMPKeyedSet_somGetClassName SOMObject_somGetClassName
#define SOMPKeyedSet_somGetSize SOMObject_somGetSize
#define SOMPKeyedSet_somIsA SOMObject_somIsA
#define SOMPKeyedSet_somIsInstanceOf SOMObject_somIsInstanceOf
#define SOMPKeyedSet_somRespondsTo SOMObject_somRespondsTo
#define SOMPKeyedSet_somDispatch SOMObject_somDispatch
#define SOMPKeyedSet_somClassDispatch SOMObject_somClassDispatch
#define SOMPKeyedSet_somCastObj SOMObject_somCastObj
#define SOMPKeyedSet_somResetObj SOMObject_somResetObj
#define SOMPKeyedSet_somDispatchV SOMObject_somDispatchV
#define SOMPKeyedSet_somDispatchL SOMObject_somDispatchL
#define SOMPKeyedSet_somDispatchA SOMObject_somDispatchA
#define SOMPKeyedSet_somDispatchD SOMObject_somDispatchD
#define SOMPKeyedSet_somPrintSelf SOMObject_somPrintSelf
#define SOMPKeyedSet_somDumpSelf SOMObject_somDumpSelf
#define SOMPKeyedSet_somDumpSelfInt SOMObject_somDumpSelfInt
#endif /* SOM_DONT_USE_INHERITED_MACROS */

#endif       /* SOM_SOMPKeyedSet_h */
