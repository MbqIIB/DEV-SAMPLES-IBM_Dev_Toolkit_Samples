
/*
 * This file was generated by the SOM Compiler.
 * FileName: tpll.h.
 * Generated using:
 *     SOM Precompiler somipc: 2.29.1.17
 *     SOM Emitter emith: 2.47
 */

/*
 * CLASS_NAME: somf_TPrimitiveLinkedList
 * 
 * DESCRIPTION: This class describes a primitive linked list, a sequence on 0
 *              or more items, with a link from one item to it's following
 *              item.
 * 
 */


#ifndef SOM_somf_TPrimitiveLinkedList_h
#define SOM_somf_TPrimitiveLinkedList_h


#include <som.h>

/*
 * -- This emitter treats Method Tokens as Thunks by default.
 * -- Use the sc modifier "nothunks" to change this default
 */
#undef somresolve_
#define somresolve_(obj,mToken) ((somMethodProc*)((void)obj, mToken))

/*
 * Define the class name as an object type
 */
#ifndef somf_TPrimitiveLinkedList
#define somf_TPrimitiveLinkedList SOMObject
#endif
#include <somobj.h>

/*
 * Start of bindings for IDL types
 */

#ifndef SOMClass
    #define SOMClass SOMObject
#endif /* SOMClass */
#ifndef somf_MLinkable
    #define somf_MLinkable SOMObject
#endif /* somf_MLinkable */

/*
 * End of bindings for IDL types.
 */

/*
 * Passthru lines: File: "C.h", "after"
 */


#include <mlink.h>


#define somf_TPrimitiveLinkedList_MajorVersion 2
#define somf_TPrimitiveLinkedList_MinorVersion 1

/*
 * External name shortening if required
 */
#ifdef SOM_USE_SHORT_EXTERNAL_NAMES
#define somf_TPrimitiveLinkedListNewClass c
#pragma linkage(c, system)
#define somf_TPrimitiveLinkedListClassData d
#define somf_TPrimitiveLinkedListCClassData x
#endif /* SOM_USE_SHORT_EXTERNAL_NAMES */
/*--------------Migration------------*/
#define somf_TPrimitiveLinkedList_classObj somf_TPrimitiveLinkedListClassData.classObject
#define _somf_TPrimitiveLinkedList somf_TPrimitiveLinkedList_classObj

/*
 * Declare the class creation procedure
 */
SOMEXTERN SOMClass * SOMLINK somf_TPrimitiveLinkedListNewClass(integer4 somtmajorVersion,
		integer4 somtminorVersion);
#pragma linkage(somf_TPrimitiveLinkedListNewClass, system)

/*
 * Declare the class data structure
 */
SOMEXTERN struct somf_TPrimitiveLinkedListClassDataStructure {
	SOMClass *classObject;
	somMToken somfCount;
	somMToken somfRemove;
	somMToken somfRemoveAll;
	somMToken somfRemoveFirst;
	somMToken somfRemoveLast;
	somMToken somfAddBefore;
	somMToken somfAddAfter;
	somMToken somfAddFirst;
	somMToken somfAddLast;
	somMToken somfAfter;
	somMToken somfBefore;
	somMToken somfFirst;
	somMToken somfLast;
} SOMDLINK somf_TPrimitiveLinkedListClassData;

/*
 * Declare the C specific class data structure
 */
SOMEXTERN struct somf_TPrimitiveLinkedListCClassDataStructure {
	somMethodTabs parentMtab;
	somDToken instanceDataToken;
} SOMDLINK somf_TPrimitiveLinkedListCClassData;

/*
 * New and Renew macros for somf_TPrimitiveLinkedList
 */
#define somf_TPrimitiveLinkedListNew() \
   ( _somf_TPrimitiveLinkedList ? \
	_somNew(_somf_TPrimitiveLinkedList) \
	: ( somf_TPrimitiveLinkedListNewClass(\
		somf_TPrimitiveLinkedList_MajorVersion, \
		somf_TPrimitiveLinkedList_MinorVersion),\
	   _somNew(_somf_TPrimitiveLinkedList)))
#define somf_TPrimitiveLinkedListRenew(buf) \
   ( _somf_TPrimitiveLinkedList ? \
	_somRenew(_somf_TPrimitiveLinkedList, buf) \
	: ( somf_TPrimitiveLinkedListNewClass(\
		somf_TPrimitiveLinkedList_MajorVersion, \
		somf_TPrimitiveLinkedList_MinorVersion),\
	   _somRenew(_somf_TPrimitiveLinkedList, buf)))

/*
 * Override method: somInit
 */
#define somf_TPrimitiveLinkedList_somInit(somSelf) \
	SOMObject_somInit(somSelf)

/*
 * Override method: somUninit
 */
#define somf_TPrimitiveLinkedList_somUninit(somSelf) \
	SOMObject_somUninit(somSelf)

/*
 * New Method: somfCount
 */
typedef unsigned long   SOMLINK somTP_somf_TPrimitiveLinkedList_somfCount(somf_TPrimitiveLinkedList *somSelf, Environment *ev);
#pragma linkage(somTP_somf_TPrimitiveLinkedList_somfCount, system)
typedef somTP_somf_TPrimitiveLinkedList_somfCount *somTD_somf_TPrimitiveLinkedList_somfCount;
/*
 *  Return the number of objects in this.
 */
#define somMD_somf_TPrimitiveLinkedList_somfCount "::somf_TPrimitiveLinkedList::somfCount"
#define somf_TPrimitiveLinkedList_somfCount(somSelf,ev) \
    (SOM_Resolve(somSelf, somf_TPrimitiveLinkedList, somfCount) \
	(somSelf,ev))
#ifndef SOMGD_somfCount
    #if (defined(_somfCount) || defined(__somfCount))
        #undef _somfCount
        #undef __somfCount
        #define SOMGD_somfCount 1
    #else
        #define _somfCount somf_TPrimitiveLinkedList_somfCount
    #endif /* _somfCount */
#endif /* SOMGD_somfCount */

/*
 * New Method: somfRemove
 */
typedef void   SOMLINK somTP_somf_TPrimitiveLinkedList_somfRemove(somf_TPrimitiveLinkedList *somSelf, Environment *ev, 
		somf_MLinkable* aLink);
#pragma linkage(somTP_somf_TPrimitiveLinkedList_somfRemove, system)
typedef somTP_somf_TPrimitiveLinkedList_somfRemove *somTD_somf_TPrimitiveLinkedList_somfRemove;
/*
 *  Remove the somf_MLinkable object from the List.
 */
#define somMD_somf_TPrimitiveLinkedList_somfRemove "::somf_TPrimitiveLinkedList::somfRemove"
#define somf_TPrimitiveLinkedList_somfRemove(somSelf,ev,aLink) \
    (SOM_Resolve(somSelf, somf_TPrimitiveLinkedList, somfRemove) \
	(somSelf,ev,aLink))
#ifndef SOMGD_somfRemove
    #if (defined(_somfRemove) || defined(__somfRemove))
        #undef _somfRemove
        #undef __somfRemove
        #define SOMGD_somfRemove 1
    #else
        #define _somfRemove somf_TPrimitiveLinkedList_somfRemove
    #endif /* _somfRemove */
#endif /* SOMGD_somfRemove */

/*
 * New Method: somfRemoveAll
 */
typedef void   SOMLINK somTP_somf_TPrimitiveLinkedList_somfRemoveAll(somf_TPrimitiveLinkedList *somSelf, Environment *ev);
#pragma linkage(somTP_somf_TPrimitiveLinkedList_somfRemoveAll, system)
typedef somTP_somf_TPrimitiveLinkedList_somfRemoveAll *somTD_somf_TPrimitiveLinkedList_somfRemoveAll;
/*
 *  Remove all of the objects from this.
 */
#define somMD_somf_TPrimitiveLinkedList_somfRemoveAll "::somf_TPrimitiveLinkedList::somfRemoveAll"
#define somf_TPrimitiveLinkedList_somfRemoveAll(somSelf,ev) \
    (SOM_Resolve(somSelf, somf_TPrimitiveLinkedList, somfRemoveAll) \
	(somSelf,ev))
#ifndef SOMGD_somfRemoveAll
    #if (defined(_somfRemoveAll) || defined(__somfRemoveAll))
        #undef _somfRemoveAll
        #undef __somfRemoveAll
        #define SOMGD_somfRemoveAll 1
    #else
        #define _somfRemoveAll somf_TPrimitiveLinkedList_somfRemoveAll
    #endif /* _somfRemoveAll */
#endif /* SOMGD_somfRemoveAll */

/*
 * New Method: somfRemoveFirst
 */
typedef somf_MLinkable*   SOMLINK somTP_somf_TPrimitiveLinkedList_somfRemoveFirst(somf_TPrimitiveLinkedList *somSelf, Environment *ev);
#pragma linkage(somTP_somf_TPrimitiveLinkedList_somfRemoveFirst, system)
typedef somTP_somf_TPrimitiveLinkedList_somfRemoveFirst *somTD_somf_TPrimitiveLinkedList_somfRemoveFirst;
/*
 *  Remove the first object in the List.
 */
#define somMD_somf_TPrimitiveLinkedList_somfRemoveFirst "::somf_TPrimitiveLinkedList::somfRemoveFirst"
#define somf_TPrimitiveLinkedList_somfRemoveFirst(somSelf,ev) \
    (SOM_Resolve(somSelf, somf_TPrimitiveLinkedList, somfRemoveFirst) \
	(somSelf,ev))
#ifndef SOMGD_somfRemoveFirst
    #if (defined(_somfRemoveFirst) || defined(__somfRemoveFirst))
        #undef _somfRemoveFirst
        #undef __somfRemoveFirst
        #define SOMGD_somfRemoveFirst 1
    #else
        #define _somfRemoveFirst somf_TPrimitiveLinkedList_somfRemoveFirst
    #endif /* _somfRemoveFirst */
#endif /* SOMGD_somfRemoveFirst */

/*
 * New Method: somfRemoveLast
 */
typedef somf_MLinkable*   SOMLINK somTP_somf_TPrimitiveLinkedList_somfRemoveLast(somf_TPrimitiveLinkedList *somSelf, Environment *ev);
#pragma linkage(somTP_somf_TPrimitiveLinkedList_somfRemoveLast, system)
typedef somTP_somf_TPrimitiveLinkedList_somfRemoveLast *somTD_somf_TPrimitiveLinkedList_somfRemoveLast;
/*
 *  Remove the last object in the List.
 */
#define somMD_somf_TPrimitiveLinkedList_somfRemoveLast "::somf_TPrimitiveLinkedList::somfRemoveLast"
#define somf_TPrimitiveLinkedList_somfRemoveLast(somSelf,ev) \
    (SOM_Resolve(somSelf, somf_TPrimitiveLinkedList, somfRemoveLast) \
	(somSelf,ev))
#ifndef SOMGD_somfRemoveLast
    #if (defined(_somfRemoveLast) || defined(__somfRemoveLast))
        #undef _somfRemoveLast
        #undef __somfRemoveLast
        #define SOMGD_somfRemoveLast 1
    #else
        #define _somfRemoveLast somf_TPrimitiveLinkedList_somfRemoveLast
    #endif /* _somfRemoveLast */
#endif /* SOMGD_somfRemoveLast */

/*
 * New Method: somfAddBefore
 */
typedef void   SOMLINK somTP_somf_TPrimitiveLinkedList_somfAddBefore(somf_TPrimitiveLinkedList *somSelf, Environment *ev, 
		somf_MLinkable* existing, 
		somf_MLinkable* obj);
#pragma linkage(somTP_somf_TPrimitiveLinkedList_somfAddBefore, system)
typedef somTP_somf_TPrimitiveLinkedList_somfAddBefore *somTD_somf_TPrimitiveLinkedList_somfAddBefore;
/*
 *  Add the obj object into the List before the existing object.
 */
#define somMD_somf_TPrimitiveLinkedList_somfAddBefore "::somf_TPrimitiveLinkedList::somfAddBefore"
#define somf_TPrimitiveLinkedList_somfAddBefore(somSelf,ev,existing,obj) \
    (SOM_Resolve(somSelf, somf_TPrimitiveLinkedList, somfAddBefore) \
	(somSelf,ev,existing,obj))
#ifndef SOMGD_somfAddBefore
    #if (defined(_somfAddBefore) || defined(__somfAddBefore))
        #undef _somfAddBefore
        #undef __somfAddBefore
        #define SOMGD_somfAddBefore 1
    #else
        #define _somfAddBefore somf_TPrimitiveLinkedList_somfAddBefore
    #endif /* _somfAddBefore */
#endif /* SOMGD_somfAddBefore */

/*
 * New Method: somfAddAfter
 */
typedef void   SOMLINK somTP_somf_TPrimitiveLinkedList_somfAddAfter(somf_TPrimitiveLinkedList *somSelf, Environment *ev, 
		somf_MLinkable* existing, 
		somf_MLinkable* obj);
#pragma linkage(somTP_somf_TPrimitiveLinkedList_somfAddAfter, system)
typedef somTP_somf_TPrimitiveLinkedList_somfAddAfter *somTD_somf_TPrimitiveLinkedList_somfAddAfter;
/*
 *  Add the obj object into the List after the existing object.
 */
#define somMD_somf_TPrimitiveLinkedList_somfAddAfter "::somf_TPrimitiveLinkedList::somfAddAfter"
#define somf_TPrimitiveLinkedList_somfAddAfter(somSelf,ev,existing,obj) \
    (SOM_Resolve(somSelf, somf_TPrimitiveLinkedList, somfAddAfter) \
	(somSelf,ev,existing,obj))
#ifndef SOMGD_somfAddAfter
    #if (defined(_somfAddAfter) || defined(__somfAddAfter))
        #undef _somfAddAfter
        #undef __somfAddAfter
        #define SOMGD_somfAddAfter 1
    #else
        #define _somfAddAfter somf_TPrimitiveLinkedList_somfAddAfter
    #endif /* _somfAddAfter */
#endif /* SOMGD_somfAddAfter */

/*
 * New Method: somfAddFirst
 */
typedef void   SOMLINK somTP_somf_TPrimitiveLinkedList_somfAddFirst(somf_TPrimitiveLinkedList *somSelf, Environment *ev, 
		somf_MLinkable* obj);
#pragma linkage(somTP_somf_TPrimitiveLinkedList_somfAddFirst, system)
typedef somTP_somf_TPrimitiveLinkedList_somfAddFirst *somTD_somf_TPrimitiveLinkedList_somfAddFirst;
/*
 *  Add the obj object as the first object in the List.
 */
#define somMD_somf_TPrimitiveLinkedList_somfAddFirst "::somf_TPrimitiveLinkedList::somfAddFirst"
#define somf_TPrimitiveLinkedList_somfAddFirst(somSelf,ev,obj) \
    (SOM_Resolve(somSelf, somf_TPrimitiveLinkedList, somfAddFirst) \
	(somSelf,ev,obj))
#ifndef SOMGD_somfAddFirst
    #if (defined(_somfAddFirst) || defined(__somfAddFirst))
        #undef _somfAddFirst
        #undef __somfAddFirst
        #define SOMGD_somfAddFirst 1
    #else
        #define _somfAddFirst somf_TPrimitiveLinkedList_somfAddFirst
    #endif /* _somfAddFirst */
#endif /* SOMGD_somfAddFirst */

/*
 * New Method: somfAddLast
 */
typedef void   SOMLINK somTP_somf_TPrimitiveLinkedList_somfAddLast(somf_TPrimitiveLinkedList *somSelf, Environment *ev, 
		somf_MLinkable* obj);
#pragma linkage(somTP_somf_TPrimitiveLinkedList_somfAddLast, system)
typedef somTP_somf_TPrimitiveLinkedList_somfAddLast *somTD_somf_TPrimitiveLinkedList_somfAddLast;
/*
 *  Add the obj object as the last object in the List.
 */
#define somMD_somf_TPrimitiveLinkedList_somfAddLast "::somf_TPrimitiveLinkedList::somfAddLast"
#define somf_TPrimitiveLinkedList_somfAddLast(somSelf,ev,obj) \
    (SOM_Resolve(somSelf, somf_TPrimitiveLinkedList, somfAddLast) \
	(somSelf,ev,obj))
#ifndef SOMGD_somfAddLast
    #if (defined(_somfAddLast) || defined(__somfAddLast))
        #undef _somfAddLast
        #undef __somfAddLast
        #define SOMGD_somfAddLast 1
    #else
        #define _somfAddLast somf_TPrimitiveLinkedList_somfAddLast
    #endif /* _somfAddLast */
#endif /* SOMGD_somfAddLast */

/*
 * New Method: somfAfter
 */
typedef somf_MLinkable*   SOMLINK somTP_somf_TPrimitiveLinkedList_somfAfter(somf_TPrimitiveLinkedList *somSelf, Environment *ev, 
		somf_MLinkable* existingobj);
#pragma linkage(somTP_somf_TPrimitiveLinkedList_somfAfter, system)
typedef somTP_somf_TPrimitiveLinkedList_somfAfter *somTD_somf_TPrimitiveLinkedList_somfAfter;
/*
 *  Return the object that comes after the existingobj object in the List.
 */
#define somMD_somf_TPrimitiveLinkedList_somfAfter "::somf_TPrimitiveLinkedList::somfAfter"
#define somf_TPrimitiveLinkedList_somfAfter(somSelf,ev,existingobj) \
    (SOM_Resolve(somSelf, somf_TPrimitiveLinkedList, somfAfter) \
	(somSelf,ev,existingobj))
#ifndef SOMGD_somfAfter
    #if (defined(_somfAfter) || defined(__somfAfter))
        #undef _somfAfter
        #undef __somfAfter
        #define SOMGD_somfAfter 1
    #else
        #define _somfAfter somf_TPrimitiveLinkedList_somfAfter
    #endif /* _somfAfter */
#endif /* SOMGD_somfAfter */

/*
 * New Method: somfBefore
 */
typedef somf_MLinkable*   SOMLINK somTP_somf_TPrimitiveLinkedList_somfBefore(somf_TPrimitiveLinkedList *somSelf, Environment *ev, 
		somf_MLinkable* existingobj);
#pragma linkage(somTP_somf_TPrimitiveLinkedList_somfBefore, system)
typedef somTP_somf_TPrimitiveLinkedList_somfBefore *somTD_somf_TPrimitiveLinkedList_somfBefore;
/*
 *  Return the object that comes before the existingobj object in the List.
 */
#define somMD_somf_TPrimitiveLinkedList_somfBefore "::somf_TPrimitiveLinkedList::somfBefore"
#define somf_TPrimitiveLinkedList_somfBefore(somSelf,ev,existingobj) \
    (SOM_Resolve(somSelf, somf_TPrimitiveLinkedList, somfBefore) \
	(somSelf,ev,existingobj))
#ifndef SOMGD_somfBefore
    #if (defined(_somfBefore) || defined(__somfBefore))
        #undef _somfBefore
        #undef __somfBefore
        #define SOMGD_somfBefore 1
    #else
        #define _somfBefore somf_TPrimitiveLinkedList_somfBefore
    #endif /* _somfBefore */
#endif /* SOMGD_somfBefore */

/*
 * New Method: somfFirst
 */
typedef somf_MLinkable*   SOMLINK somTP_somf_TPrimitiveLinkedList_somfFirst(somf_TPrimitiveLinkedList *somSelf, Environment *ev);
#pragma linkage(somTP_somf_TPrimitiveLinkedList_somfFirst, system)
typedef somTP_somf_TPrimitiveLinkedList_somfFirst *somTD_somf_TPrimitiveLinkedList_somfFirst;
/*
 *  Return the first object in the List.
 */
#define somMD_somf_TPrimitiveLinkedList_somfFirst "::somf_TPrimitiveLinkedList::somfFirst"
#define somf_TPrimitiveLinkedList_somfFirst(somSelf,ev) \
    (SOM_Resolve(somSelf, somf_TPrimitiveLinkedList, somfFirst) \
	(somSelf,ev))
#ifndef SOMGD_somfFirst
    #if (defined(_somfFirst) || defined(__somfFirst))
        #undef _somfFirst
        #undef __somfFirst
        #define SOMGD_somfFirst 1
    #else
        #define _somfFirst somf_TPrimitiveLinkedList_somfFirst
    #endif /* _somfFirst */
#endif /* SOMGD_somfFirst */

/*
 * New Method: somfLast
 */
typedef somf_MLinkable*   SOMLINK somTP_somf_TPrimitiveLinkedList_somfLast(somf_TPrimitiveLinkedList *somSelf, Environment *ev);
#pragma linkage(somTP_somf_TPrimitiveLinkedList_somfLast, system)
typedef somTP_somf_TPrimitiveLinkedList_somfLast *somTD_somf_TPrimitiveLinkedList_somfLast;
/*
 *  Return the last object in the List.
 */
#define somMD_somf_TPrimitiveLinkedList_somfLast "::somf_TPrimitiveLinkedList::somfLast"
#define somf_TPrimitiveLinkedList_somfLast(somSelf,ev) \
    (SOM_Resolve(somSelf, somf_TPrimitiveLinkedList, somfLast) \
	(somSelf,ev))
#ifndef SOMGD_somfLast
    #if (defined(_somfLast) || defined(__somfLast))
        #undef _somfLast
        #undef __somfLast
        #define SOMGD_somfLast 1
    #else
        #define _somfLast somf_TPrimitiveLinkedList_somfLast
    #endif /* _somfLast */
#endif /* SOMGD_somfLast */
#ifndef SOM_DONT_USE_INHERITED_MACROS
#define somf_TPrimitiveLinkedList_somDefaultInit SOMObject_somDefaultInit
#define somf_TPrimitiveLinkedList_somDestruct SOMObject_somDestruct
#define somf_TPrimitiveLinkedList_somDefaultCopyInit SOMObject_somDefaultCopyInit
#define somf_TPrimitiveLinkedList_somDefaultAssign SOMObject_somDefaultAssign
#define somf_TPrimitiveLinkedList_somDefaultConstCopyInit SOMObject_somDefaultConstCopyInit
#define somf_TPrimitiveLinkedList_somDefaultVCopyInit SOMObject_somDefaultVCopyInit
#define somf_TPrimitiveLinkedList_somDefaultConstVCopyInit SOMObject_somDefaultConstVCopyInit
#define somf_TPrimitiveLinkedList_somDefaultConstAssign SOMObject_somDefaultConstAssign
#define somf_TPrimitiveLinkedList_somDefaultVAssign SOMObject_somDefaultVAssign
#define somf_TPrimitiveLinkedList_somDefaultConstVAssign SOMObject_somDefaultConstVAssign
#define somf_TPrimitiveLinkedList_somFree SOMObject_somFree
#define somf_TPrimitiveLinkedList_somGetClass SOMObject_somGetClass
#define somf_TPrimitiveLinkedList_somGetClassName SOMObject_somGetClassName
#define somf_TPrimitiveLinkedList_somGetSize SOMObject_somGetSize
#define somf_TPrimitiveLinkedList_somIsA SOMObject_somIsA
#define somf_TPrimitiveLinkedList_somIsInstanceOf SOMObject_somIsInstanceOf
#define somf_TPrimitiveLinkedList_somRespondsTo SOMObject_somRespondsTo
#define somf_TPrimitiveLinkedList_somDispatch SOMObject_somDispatch
#define somf_TPrimitiveLinkedList_somClassDispatch SOMObject_somClassDispatch
#define somf_TPrimitiveLinkedList_somCastObj SOMObject_somCastObj
#define somf_TPrimitiveLinkedList_somResetObj SOMObject_somResetObj
#define somf_TPrimitiveLinkedList_somDispatchV SOMObject_somDispatchV
#define somf_TPrimitiveLinkedList_somDispatchL SOMObject_somDispatchL
#define somf_TPrimitiveLinkedList_somDispatchA SOMObject_somDispatchA
#define somf_TPrimitiveLinkedList_somDispatchD SOMObject_somDispatchD
#define somf_TPrimitiveLinkedList_somPrintSelf SOMObject_somPrintSelf
#define somf_TPrimitiveLinkedList_somDumpSelf SOMObject_somDumpSelf
#define somf_TPrimitiveLinkedList_somDumpSelfInt SOMObject_somDumpSelfInt
#endif /* SOM_DONT_USE_INHERITED_MACROS */

#endif       /* SOM_somf_TPrimitiveLinkedList_h */
