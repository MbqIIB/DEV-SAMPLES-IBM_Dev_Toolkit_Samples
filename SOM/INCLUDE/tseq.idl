//#  @(#) 2.12 src/somuc/tseq.idl, somuc, som2.1 12/26/95 15:40:34 [7/30/96 14:50:09]
//
//   COMPONENT_NAME: somuc
//
//   ORIGINS: 82, 81, 27
//
//
//    25H7912  (C)  COPYRIGHT International Business Machines Corp. 1992,1996,1996  
//   All Rights Reserved
//   Licensed Materials - Property of IBM
//   US Government Users Restricted Rights - Use, duplication or
//   disclosure restricted by GSA ADP Schedule Contract with IBM Corp.
//
//  Copyright © 1988-92 Apple Computer, Inc.  All rights reserved.

/*
 * CLASS_NAME: somf_TSequence
 *
 * DESCRIPTION: TSequence is an abstract superclass for collections whose
 *              elements are ordered.
 *
 */

#ifndef TSeq_idl
#define TSeq_idl

#include <tcollect.idl>

/* interface somf_MCollectible; */

interface somf_TSequence : somf_TCollection
{
  somf_MCollectible somfAfter(in somf_MCollectible obj);
  // Return the object found after obj.
  //# virtual MCollectible* After(const MCollectible& obj) const = 0;


  somf_MCollectible somfBefore(in somf_MCollectible obj);
  // Return the object found before obj.
  //# virtual MCollectible* Before(const MCollectible& obj) const = 0;


  somf_MCollectible somfLast();
  // Determine the last object in this.
  //# virtual MCollectible* Last() const = 0;


  somf_MCollectible somfFirst();
  // Determine the first object in this.
  //# virtual MCollectible* First() const = 0;


  long somfOccurrencesOf(in somf_MCollectible obj);
  // Determine the number of times obj is in this.
  //# virtual long OccurrencesOf(const MCollectible& obj) const;


  //# The following methods are overridden below:
  //# virtual MCollectible* Add(MCollectible* obj) = 0;
  //# virtual MCollectible* Remove(const MCollectible& obj) = 0;
  //# virtual void RemoveAll() = 0;
  //# virtual void DeleteAll() = 0;
  //# virtual long Count() const = 0;
  //# virtual TIterator* CreateIterator() const = 0;

  //# The following operators are not ported until Streaming is ported.
  //# virtual TStream& operator>>=(TStream& towhere) const;
  //# virtual TStream& operator<<=(TStream& towhere);

  somf_TSequence somfTSequenceInit(in somf_MCollectible::somf_MCollectibleCompareFn testfn);
  // This method initializes a new TSequence.
  //# protected:
  //#   TSequence(MCollectibleCompareFn testfn = &MCollectible::IsSame);



#ifdef __SOMIDL__
  implementation {

    releaseorder: somfFirst,somfAfter,somfBefore,somfLast,
		  somfOccurrencesOf,somfTSequenceInit;


    //# Class Modifiers
    majorversion = 2;
    minorversion = 1;
    filestem = tseq;
    dllname = "somuc.dll";

    passthru C_xh =     ""
"#include <mcollect.xh>";

    passthru C_h =      ""
"#include <mcollect.h>";


    //# Method Modifiers
    somfAfter: nomodify;
    somfBefore: nomodify;
    somfLast: nomodify;
    somfFirst: nomodify;
    somfOccurrencesOf: nomodify;
    somfAdd: override;
    somfRemove: override;
    somfRemoveAll: override;
    somfDeleteAll: override;
    somfCount: override;
    somfCreateIterator: override;
    somInit: override;
    somfTSequenceInit: nooverride;

  };
#endif /* __SOMIDL__ */
};

#endif  /* TSeq_idl */
