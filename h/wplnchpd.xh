
/*
 * This file was generated by the SOM Compiler.
 * FileName: G:\cwpsh\rel\os2c\include\base\os2\wplnchpd.xh.
 * Generated using:
 *     SOM Precompiler somipc: 2.29.1.14
 *     SOM Emitter emitxh: 2.43
 */

/*
 *   Module Header
 * 
 *   Module Name: WPLNCHPD
 * 
 *   OS/2 Presentation Manager Workplace class definitions
 * 
 *   Copyright (c) International Business Machines Corporation 1991, 1992, 1994
 * 
 * 
 */


#ifndef SOM_WPLaunchPad_xh
#define SOM_WPLaunchPad_xh

class WPLaunchPad;

#define WPLaunchPad_MajorVersion 1
#define WPLaunchPad_MinorVersion 2

/*
 * Passthru lines: File: "C.h", "before"
 */

        typedef struct tag_Actions {
                PSZ pszTitle;
                ULONG ulMenuId;
                HPOINTER hIcon;
        } ACTIONS, *PACTIONS;

        #define ADD_OBJECT_FIRST ((ULONG)(-1))
        #define ADD_OBJECT_LAST  ((ULONG)(-2))

        #define ACTION_BUTTONS_TEXT   ((ULONG)0)
        #define ACTION_BUTTONS_OFF    ((ULONG)1)
        #define ACTION_BUTTONS_MINI   ((ULONG)2)
        #define ACTION_BUTTONS_NORMAL ((ULONG)3)


/* C++ SOM defs */
#include <somcls.xh>
#include <somcm.xh>

/* C++ parent defs */
#ifndef SOM_WPAbstract_xh
#include <wpabs.xh>
#endif

#ifndef WPLaunchPad_API
#define WPLaunchPad_API
/*
 * -- The Class API
 */

/*
 * Start of bindings for IDL types
 */

class SOMClass;
class SOMObject;
class WPFolder;
class M_WPObject;
class WPObject;
class WPImageFile;
class M_WPAbstract;
class M_WPLaunchPad;

/*
 * End of bindings for IDL types.
 */

/* A procedure to create the WPLaunchPad Class */
class M_WPLaunchPad;
SOMEXTERN M_WPLaunchPad * SOMLINK WPLaunchPadNewClass(
		integer4 majorVersion,
		integer4 minorVersion);

/* The API to the WPLaunchPad class object, and the methods it introduces. */
SOMEXTERN struct WPLaunchPadClassDataStructure {
	M_WPLaunchPad *classObject;
	somMToken wpAddLaunchPadPage1;
	somMToken wpQueryCloseDrawer;
	somMToken wpQueryDisplayVertical;
	somMToken wpQueryDisplayText;
	somMToken wpQueryDisplaySmallIcons;
	somMToken wpQueryHideLaunchPadFrameCtls;
	somMToken wpQueryFloatOnTop;
	somMToken wpSetCloseDrawer;
	somMToken wpSetDisplayVertical;
	somMToken wpSetDisplayText;
	somMToken wpSetDisplaySmallIcons;
	somMToken wpSetHideLaunchPadFrameCtls;
	somMToken wpSetFloatOnTop;
	somMToken wpQueryActionButtons;
	somMToken wpQueryObjectList;
	somMToken wpSetObjectListFromStrings;
	somMToken wpSetObjectListFromObjects;
	somMToken wpSetObjectListFromHObjects;
	somMToken wpSetDrawerHWND;
	somMToken wpQueryDrawerHWND;
	somMToken wpRefreshDrawer;
	somMToken wpSetDisplayTextInDrawers;
	somMToken wpQueryDisplayTextInDrawers;
	somMToken wpQueryActionButtonStyle;
	somMToken wpSetActionButtonStyle;
	somMToken wpAddLaunchPadPage2;
} SOMDLINK WPLaunchPadClassData;
#define _WPLaunchPad WPLaunchPadClassData.classObject

/* The API to parentMtabs for WPLaunchPad, and the instance data it introduces. */
SOMEXTERN struct WPLaunchPadCClassDataStructure {
	somMethodTabs parentMtab;
	somDToken              instanceDataToken;
} SOMDLINK WPLaunchPadCClassData;

/*
 * -- Typedefs for WPLaunchPad Method Procedures
 */
SOMEXTERN {
typedef ULONG   SOMLINK somTP_WPLaunchPad_wpAddLaunchPadPage1(WPLaunchPad *somSelf, 
		HWND hwndNotebook);
typedef somTP_WPLaunchPad_wpAddLaunchPadPage1 *somTD_WPLaunchPad_wpAddLaunchPadPage1;
typedef ULONG   SOMLINK somTP_WPLaunchPad_wpAddLaunchPadPage2(WPLaunchPad *somSelf, 
		HWND hwndNotebook);
typedef somTP_WPLaunchPad_wpAddLaunchPadPage2 *somTD_WPLaunchPad_wpAddLaunchPadPage2;
typedef BOOL   SOMLINK somTP_WPLaunchPad_wpQueryCloseDrawer(WPLaunchPad *somSelf);
typedef somTP_WPLaunchPad_wpQueryCloseDrawer *somTD_WPLaunchPad_wpQueryCloseDrawer;
typedef BOOL   SOMLINK somTP_WPLaunchPad_wpQueryDisplayVertical(WPLaunchPad *somSelf);
typedef somTP_WPLaunchPad_wpQueryDisplayVertical *somTD_WPLaunchPad_wpQueryDisplayVertical;
typedef BOOL   SOMLINK somTP_WPLaunchPad_wpQueryDisplayText(WPLaunchPad *somSelf);
typedef somTP_WPLaunchPad_wpQueryDisplayText *somTD_WPLaunchPad_wpQueryDisplayText;
typedef BOOL   SOMLINK somTP_WPLaunchPad_wpQueryDisplayTextInDrawers(WPLaunchPad *somSelf);
typedef somTP_WPLaunchPad_wpQueryDisplayTextInDrawers *somTD_WPLaunchPad_wpQueryDisplayTextInDrawers;
typedef BOOL   SOMLINK somTP_WPLaunchPad_wpQueryDisplaySmallIcons(WPLaunchPad *somSelf);
typedef somTP_WPLaunchPad_wpQueryDisplaySmallIcons *somTD_WPLaunchPad_wpQueryDisplaySmallIcons;
typedef BOOL   SOMLINK somTP_WPLaunchPad_wpQueryHideLaunchPadFrameCtls(WPLaunchPad *somSelf);
typedef somTP_WPLaunchPad_wpQueryHideLaunchPadFrameCtls *somTD_WPLaunchPad_wpQueryHideLaunchPadFrameCtls;
typedef BOOL   SOMLINK somTP_WPLaunchPad_wpQueryFloatOnTop(WPLaunchPad *somSelf);
typedef somTP_WPLaunchPad_wpQueryFloatOnTop *somTD_WPLaunchPad_wpQueryFloatOnTop;
typedef void   SOMLINK somTP_WPLaunchPad_wpSetCloseDrawer(WPLaunchPad *somSelf, 
		BOOL fState);
typedef somTP_WPLaunchPad_wpSetCloseDrawer *somTD_WPLaunchPad_wpSetCloseDrawer;
typedef void   SOMLINK somTP_WPLaunchPad_wpSetDisplayVertical(WPLaunchPad *somSelf, 
		BOOL fState);
typedef somTP_WPLaunchPad_wpSetDisplayVertical *somTD_WPLaunchPad_wpSetDisplayVertical;
typedef void   SOMLINK somTP_WPLaunchPad_wpSetDisplayText(WPLaunchPad *somSelf, 
		BOOL fState);
typedef somTP_WPLaunchPad_wpSetDisplayText *somTD_WPLaunchPad_wpSetDisplayText;
typedef void   SOMLINK somTP_WPLaunchPad_wpSetDisplayTextInDrawers(WPLaunchPad *somSelf, 
		BOOL fState);
typedef somTP_WPLaunchPad_wpSetDisplayTextInDrawers *somTD_WPLaunchPad_wpSetDisplayTextInDrawers;
typedef void   SOMLINK somTP_WPLaunchPad_wpSetDisplaySmallIcons(WPLaunchPad *somSelf, 
		BOOL fState);
typedef somTP_WPLaunchPad_wpSetDisplaySmallIcons *somTD_WPLaunchPad_wpSetDisplaySmallIcons;
typedef void   SOMLINK somTP_WPLaunchPad_wpSetHideLaunchPadFrameCtls(WPLaunchPad *somSelf, 
		BOOL fState);
typedef somTP_WPLaunchPad_wpSetHideLaunchPadFrameCtls *somTD_WPLaunchPad_wpSetHideLaunchPadFrameCtls;
typedef void   SOMLINK somTP_WPLaunchPad_wpSetFloatOnTop(WPLaunchPad *somSelf, 
		BOOL fState);
typedef somTP_WPLaunchPad_wpSetFloatOnTop *somTD_WPLaunchPad_wpSetFloatOnTop;
typedef PACTIONS   SOMLINK somTP_WPLaunchPad_wpQueryActionButtons(WPLaunchPad *somSelf, 
		PULONG pulNumActions);
typedef somTP_WPLaunchPad_wpQueryActionButtons *somTD_WPLaunchPad_wpQueryActionButtons;
typedef HOBJECT*   SOMLINK somTP_WPLaunchPad_wpQueryObjectList(WPLaunchPad *somSelf, 
		ULONG ulDrawer, 
		PULONG pulNumObjects);
typedef somTP_WPLaunchPad_wpQueryObjectList *somTD_WPLaunchPad_wpQueryObjectList;
typedef BOOL   SOMLINK somTP_WPLaunchPad_wpSetObjectListFromStrings(WPLaunchPad *somSelf, 
		ULONG ulDrawer, 
		PSZ pszSetup, 
		ULONG ulAfter);
typedef somTP_WPLaunchPad_wpSetObjectListFromStrings *somTD_WPLaunchPad_wpSetObjectListFromStrings;
typedef BOOL   SOMLINK somTP_WPLaunchPad_wpSetObjectListFromHObjects(WPLaunchPad *somSelf, 
		ULONG ulDrawer, 
		ULONG ulNumObjects, 
		HOBJECT* phobjects, 
		ULONG ulAfter);
typedef somTP_WPLaunchPad_wpSetObjectListFromHObjects *somTD_WPLaunchPad_wpSetObjectListFromHObjects;
typedef BOOL   SOMLINK somTP_WPLaunchPad_wpSetObjectListFromObjects(WPLaunchPad *somSelf, 
		ULONG ulDrawer, 
		ULONG ulNumObjects, 
		WPObject** objects, 
		ULONG ulAfter);
typedef somTP_WPLaunchPad_wpSetObjectListFromObjects *somTD_WPLaunchPad_wpSetObjectListFromObjects;
typedef void   SOMLINK somTP_WPLaunchPad_wpSetDrawerHWND(WPLaunchPad *somSelf, 
		ULONG ulDrawer, 
		HWND hwnd);
typedef somTP_WPLaunchPad_wpSetDrawerHWND *somTD_WPLaunchPad_wpSetDrawerHWND;
typedef HWND   SOMLINK somTP_WPLaunchPad_wpQueryDrawerHWND(WPLaunchPad *somSelf, 
		ULONG ulDrawer);
typedef somTP_WPLaunchPad_wpQueryDrawerHWND *somTD_WPLaunchPad_wpQueryDrawerHWND;
typedef ULONG   SOMLINK somTP_WPLaunchPad_wpQueryActionButtonStyle(WPLaunchPad *somSelf);
typedef somTP_WPLaunchPad_wpQueryActionButtonStyle *somTD_WPLaunchPad_wpQueryActionButtonStyle;
typedef BOOL   SOMLINK somTP_WPLaunchPad_wpSetActionButtonStyle(WPLaunchPad *somSelf, 
		ULONG ulStyle);
typedef somTP_WPLaunchPad_wpSetActionButtonStyle *somTD_WPLaunchPad_wpSetActionButtonStyle;
typedef void   SOMLINK somTP_WPLaunchPad_wpRefreshDrawer(WPLaunchPad *somSelf, 
		ULONG ulDrawer);
typedef somTP_WPLaunchPad_wpRefreshDrawer *somTD_WPLaunchPad_wpRefreshDrawer;

/*
 * -- Typedefs for Reintroduced Wrapper Methods
 */
typedef M_WPLaunchPad*   SOMLINK somTP_WPLaunchPad_somGetClass(WPLaunchPad *somSelf);
typedef somTP_WPLaunchPad_somGetClass *somTD_WPLaunchPad_somGetClass;
}

#endif /* WPLaunchPad_API */


/*
 * -- This emitter treats Method Tokens as Thunks by default.
 * -- Use the sc modifier "nothunks" to change this default
 */
#undef somresolve_
#define somresolve_(obj,mToken) ((somMethodProc*)((void)obj, mToken))

/*
 * -- The C++ Wrapper Class for WPLaunchPad
 */
class WPLaunchPad : public WPAbstract
{
public:

// WPLaunchPad::new creates the class object if necessary, and then uses somNewNoInit
// to allocate memory and create the object. Initialization is in ctors.
void *operator new(size_t)
{
   if (!_WPLaunchPad) WPLaunchPadNewClass(WPLaunchPad_MajorVersion,WPLaunchPad_MinorVersion);
   return (void*)
      SOM_Resolve(_WPLaunchPad,SOMClass,somNewNoInit)
         ((SOMClass *)((void*)_WPLaunchPad));
}

// WPLaunchPad::delete uses somDestruct.
void operator delete(void * obj)
{
   if (obj && *(void**)obj) {
      SOM_Resolve(obj,SOMObject,somDestruct)
         ((SOMObject*)obj, 1, 0);
   }
}

WPLaunchPad& operator=(WPLaunchPad& fromObj)
{
   this->somDefaultAssign(0,(SOMObject*)((void*)&fromObj));
   return *this;
}

WPLaunchPad()
{
   if (*(void**)this != 
       ((somParentMtabStructPtr)
        (WPLaunchPadCClassData.parentMtab))->mtab)
      return;
   ((SOMObject*)((void*)this))->somDefaultInit(0);
}

WPLaunchPad(WPLaunchPad* fromObj)
{
   if (*(void**)this != 
       ((somParentMtabStructPtr)
        (WPLaunchPadCClassData.parentMtab))->mtab)
      return;
   ((SOMObject*)((void*)this))->somDefaultCopyInit(0,((SOMObject*)((void*)fromObj)));
}

WPLaunchPad(const WPLaunchPad* fromObj)
{
   if (*(void**)this != 
       ((somParentMtabStructPtr)
        (WPLaunchPadCClassData.parentMtab))->mtab)
      return;
   ((SOMObject*)((void*)this))->somDefaultConstCopyInit(0,((SOMObject*)((void*)fromObj)));
}


/* method: wpAddLaunchPadPage1 */
ULONG   wpAddLaunchPadPage1(HWND hwndNotebook)
{
   return SOM_ResolveD(this,WPLaunchPad,WPLaunchPad,wpAddLaunchPadPage1)
	(this,hwndNotebook);
}


/* method: wpAddLaunchPadPage2 */
ULONG   wpAddLaunchPadPage2(HWND hwndNotebook)
{
   return SOM_ResolveD(this,WPLaunchPad,WPLaunchPad,wpAddLaunchPadPage2)
	(this,hwndNotebook);
}


/* method: wpQueryCloseDrawer */
BOOL   wpQueryCloseDrawer()
{
   return SOM_ResolveD(this,WPLaunchPad,WPLaunchPad,wpQueryCloseDrawer)
	(this);
}


/* method: wpQueryDisplayVertical */
BOOL   wpQueryDisplayVertical()
{
   return SOM_ResolveD(this,WPLaunchPad,WPLaunchPad,wpQueryDisplayVertical)
	(this);
}


/* method: wpQueryDisplayText */
BOOL   wpQueryDisplayText()
{
   return SOM_ResolveD(this,WPLaunchPad,WPLaunchPad,wpQueryDisplayText)
	(this);
}


/* method: wpQueryDisplayTextInDrawers */
BOOL   wpQueryDisplayTextInDrawers()
{
   return SOM_ResolveD(this,WPLaunchPad,WPLaunchPad,wpQueryDisplayTextInDrawers)
	(this);
}


/* method: wpQueryDisplaySmallIcons */
BOOL   wpQueryDisplaySmallIcons()
{
   return SOM_ResolveD(this,WPLaunchPad,WPLaunchPad,wpQueryDisplaySmallIcons)
	(this);
}


/* method: wpQueryHideLaunchPadFrameCtls */
BOOL   wpQueryHideLaunchPadFrameCtls()
{
   return SOM_ResolveD(this,WPLaunchPad,WPLaunchPad,wpQueryHideLaunchPadFrameCtls)
	(this);
}


/* method: wpQueryFloatOnTop */
BOOL   wpQueryFloatOnTop()
{
   return SOM_ResolveD(this,WPLaunchPad,WPLaunchPad,wpQueryFloatOnTop)
	(this);
}


/* method: wpSetCloseDrawer */
void   wpSetCloseDrawer(BOOL fState)
{
   SOM_ResolveD(this,WPLaunchPad,WPLaunchPad,wpSetCloseDrawer)
	(this,fState);
}


/* method: wpSetDisplayVertical */
void   wpSetDisplayVertical(BOOL fState)
{
   SOM_ResolveD(this,WPLaunchPad,WPLaunchPad,wpSetDisplayVertical)
	(this,fState);
}


/* method: wpSetDisplayText */
void   wpSetDisplayText(BOOL fState)
{
   SOM_ResolveD(this,WPLaunchPad,WPLaunchPad,wpSetDisplayText)
	(this,fState);
}


/* method: wpSetDisplayTextInDrawers */
void   wpSetDisplayTextInDrawers(BOOL fState)
{
   SOM_ResolveD(this,WPLaunchPad,WPLaunchPad,wpSetDisplayTextInDrawers)
	(this,fState);
}


/* method: wpSetDisplaySmallIcons */
void   wpSetDisplaySmallIcons(BOOL fState)
{
   SOM_ResolveD(this,WPLaunchPad,WPLaunchPad,wpSetDisplaySmallIcons)
	(this,fState);
}


/* method: wpSetHideLaunchPadFrameCtls */
void   wpSetHideLaunchPadFrameCtls(BOOL fState)
{
   SOM_ResolveD(this,WPLaunchPad,WPLaunchPad,wpSetHideLaunchPadFrameCtls)
	(this,fState);
}


/* method: wpSetFloatOnTop */
void   wpSetFloatOnTop(BOOL fState)
{
   SOM_ResolveD(this,WPLaunchPad,WPLaunchPad,wpSetFloatOnTop)
	(this,fState);
}


/* method: wpQueryActionButtons */
PACTIONS   wpQueryActionButtons(PULONG pulNumActions)
{
   return SOM_ResolveD(this,WPLaunchPad,WPLaunchPad,wpQueryActionButtons)
	(this,pulNumActions);
}


/* method: wpQueryObjectList */
HOBJECT*   wpQueryObjectList(ULONG ulDrawer, 
		PULONG pulNumObjects)
{
   return SOM_ResolveD(this,WPLaunchPad,WPLaunchPad,wpQueryObjectList)
	(this,ulDrawer,pulNumObjects);
}


/* method: wpSetObjectListFromStrings */
BOOL   wpSetObjectListFromStrings(ULONG ulDrawer, 
		PSZ pszSetup, 
		ULONG ulAfter)
{
   return SOM_ResolveD(this,WPLaunchPad,WPLaunchPad,wpSetObjectListFromStrings)
	(this,ulDrawer,pszSetup,ulAfter);
}


/* method: wpSetObjectListFromHObjects */
BOOL   wpSetObjectListFromHObjects(ULONG ulDrawer, 
		ULONG ulNumObjects, 
		HOBJECT* phobjects, 
		ULONG ulAfter)
{
   return SOM_ResolveD(this,WPLaunchPad,WPLaunchPad,wpSetObjectListFromHObjects)
	(this,ulDrawer,ulNumObjects,phobjects,ulAfter);
}


/* method: wpSetObjectListFromObjects */
BOOL   wpSetObjectListFromObjects(ULONG ulDrawer, 
		ULONG ulNumObjects, 
		WPObject** objects, 
		ULONG ulAfter)
{
   return SOM_ResolveD(this,WPLaunchPad,WPLaunchPad,wpSetObjectListFromObjects)
	(this,ulDrawer,ulNumObjects,objects,ulAfter);
}


/* method: wpSetDrawerHWND */
void   wpSetDrawerHWND(ULONG ulDrawer, 
		HWND hwnd)
{
   SOM_ResolveD(this,WPLaunchPad,WPLaunchPad,wpSetDrawerHWND)
	(this,ulDrawer,hwnd);
}


/* method: wpQueryDrawerHWND */
HWND   wpQueryDrawerHWND(ULONG ulDrawer)
{
   return SOM_ResolveD(this,WPLaunchPad,WPLaunchPad,wpQueryDrawerHWND)
	(this,ulDrawer);
}


/* method: wpQueryActionButtonStyle */
ULONG   wpQueryActionButtonStyle()
{
   return SOM_ResolveD(this,WPLaunchPad,WPLaunchPad,wpQueryActionButtonStyle)
	(this);
}


/* method: wpSetActionButtonStyle */
BOOL   wpSetActionButtonStyle(ULONG ulStyle)
{
   return SOM_ResolveD(this,WPLaunchPad,WPLaunchPad,wpSetActionButtonStyle)
	(this,ulStyle);
}


/* method: wpRefreshDrawer */
void   wpRefreshDrawer(ULONG ulDrawer)
{
   SOM_ResolveD(this,WPLaunchPad,WPLaunchPad,wpRefreshDrawer)
	(this,ulDrawer);
}


/*
 * Reintroduce inherited methods
 */

/* method: somGetClass */
M_WPLaunchPad*  somGetClass()
{
/*
 *  Return the receiver's class.
 */
   return SOM_ResolveD(this,WPLaunchPad,SOMObject,somGetClass)
	(this);
}



};   /* WPLaunchPad */



#endif       /* SOM_WPLaunchPad_xh */

#ifndef SOM_M_WPLaunchPad_xh
#define SOM_M_WPLaunchPad_xh

class M_WPLaunchPad;

#define M_WPLaunchPad_MajorVersion 1
#define M_WPLaunchPad_MinorVersion 2

/* C++ SOM defs */
#include <somcls.xh>
#include <somcm.xh>

/* C++ parent defs */
#ifndef SOM_M_WPAbstract_xh
#include <wpabs.xh>
#endif

#ifndef M_WPLaunchPad_API
#define M_WPLaunchPad_API
/*
 * -- The Class API
 */

/*
 * Start of bindings for IDL types
 */


/*
 * End of bindings for IDL types.
 */

/*
 * -- M_WPLaunchPad is a metaclass for WPLaunchPad. Make sure WPLaunchPad is known.
 */
class WPLaunchPad;


/* A procedure to create the M_WPLaunchPad Class */
SOMEXTERN SOMClass * SOMLINK M_WPLaunchPadNewClass(
		integer4 majorVersion,
		integer4 minorVersion);

/* The API to the M_WPLaunchPad class object, and the methods it introduces. */
SOMEXTERN struct M_WPLaunchPadClassDataStructure {
	SOMClass *classObject;
} SOMDLINK M_WPLaunchPadClassData;
#define _M_WPLaunchPad M_WPLaunchPadClassData.classObject

/* The API to parentMtabs for M_WPLaunchPad, and the instance data it introduces. */
SOMEXTERN struct M_WPLaunchPadCClassDataStructure {
	somMethodTabs parentMtab;
	somDToken              instanceDataToken;
} SOMDLINK M_WPLaunchPadCClassData;

/*
 * -- Typedefs for M_WPLaunchPad Method Procedures
 */
SOMEXTERN {

/*
 * -- Typedefs for Reintroduced Wrapper Methods
 */
typedef WPLaunchPad*   SOMLINK somTP_M_WPLaunchPad_somNew(M_WPLaunchPad *somSelf);
typedef somTP_M_WPLaunchPad_somNew *somTD_M_WPLaunchPad_somNew;
}

#endif /* M_WPLaunchPad_API */


/*
 * -- This emitter treats Method Tokens as Thunks by default.
 * -- Use the sc modifier "nothunks" to change this default
 */
#undef somresolve_
#define somresolve_(obj,mToken) ((somMethodProc*)((void)obj, mToken))

/*
 * -- The C++ Wrapper Class for M_WPLaunchPad
 */
class M_WPLaunchPad : public M_WPAbstract
{
public:

// M_WPLaunchPad::new creates the class object if necessary, and then uses somNewNoInit
// to allocate memory and create the object. Initialization is in ctors.
void *operator new(size_t)
{
   if (!_M_WPLaunchPad) M_WPLaunchPadNewClass(M_WPLaunchPad_MajorVersion,M_WPLaunchPad_MinorVersion);
   return (void*)
      SOM_Resolve(_M_WPLaunchPad,SOMClass,somNewNoInit)
         ((SOMClass *)((void*)_M_WPLaunchPad));
}

// M_WPLaunchPad::delete uses somDestruct.
void operator delete(void * obj)
{
   if (obj && *(void**)obj) {
      SOM_Resolve(obj,SOMObject,somDestruct)
         ((SOMObject*)obj, 1, 0);
   }
}

M_WPLaunchPad& operator=(M_WPLaunchPad& fromObj)
{
   this->somDefaultAssign(0,(SOMObject*)((void*)&fromObj));
   return *this;
}

M_WPLaunchPad()
{
   if (*(void**)this != 
       ((somParentMtabStructPtr)
        (M_WPLaunchPadCClassData.parentMtab))->mtab)
      return;
   ((SOMObject*)((void*)this))->somDefaultInit(0);
}

M_WPLaunchPad(M_WPLaunchPad* fromObj)
{
   if (*(void**)this != 
       ((somParentMtabStructPtr)
        (M_WPLaunchPadCClassData.parentMtab))->mtab)
      return;
   ((SOMObject*)((void*)this))->somDefaultCopyInit(0,((SOMObject*)((void*)fromObj)));
}

M_WPLaunchPad(const M_WPLaunchPad* fromObj)
{
   if (*(void**)this != 
       ((somParentMtabStructPtr)
        (M_WPLaunchPadCClassData.parentMtab))->mtab)
      return;
   ((SOMObject*)((void*)this))->somDefaultConstCopyInit(0,((SOMObject*)((void*)fromObj)));
}


/*
 * Reintroduce inherited methods
 */

/* method: somNew */
WPLaunchPad*  somNew()
{
   return SOM_ResolveD(this,M_WPLaunchPad,SOMClass,somNew)
	(this);
}



};   /* M_WPLaunchPad */



#endif       /* SOM_M_WPLaunchPad_xh */
