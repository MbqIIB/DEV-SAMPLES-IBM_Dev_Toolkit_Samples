
/*
 * This file was generated by the SOM Compiler.
 * FileName: G:\cwpsh\rel\os2c\include\base\os2\wpperiph.xh.
 * Generated using:
 *     SOM Precompiler somipc: 2.29.1.14
 *     SOM Emitter emitxh: 2.43
 */

/*
 *   Module Header
 * 
 *   Module Name: WPPERIPH
 * 
 *   OS/2 Presentation Manager Workplace class definitions
 * 
 *   Copyright (c) International Business Machines Corporation 1991, 1992
 * 
 */


#ifndef SOM_WPDevPeriph_xh
#define SOM_WPDevPeriph_xh

class WPDevPeriph;

#define WPDevPeriph_MajorVersion 1
#define WPDevPeriph_MinorVersion 2

/*
 * Passthru lines: File: "C.h", "before"
 */



/* C++ SOM defs */
#include <somcls.xh>
#include <somcm.xh>

/* C++ parent defs */
#ifndef SOM_WPDevice_xh
#include <wpdevice.xh>
#endif

#ifndef WPDevPeriph_API
#define WPDevPeriph_API
/*
 * -- The Class API
 */

/*
 * Start of bindings for IDL types
 */

class SOMClass;
class SOMObject;
class WPFolder;
class M_WPObject;
class WPObject;
class WPImageFile;
class M_WPTransient;
class M_WPDevice;
class M_WPDevPeriph;

/*
 * End of bindings for IDL types.
 */

/* A procedure to create the WPDevPeriph Class */
class M_WPDevPeriph;
SOMEXTERN M_WPDevPeriph * SOMLINK WPDevPeriphNewClass(
		integer4 majorVersion,
		integer4 minorVersion);

/* The API to the WPDevPeriph class object, and the methods it introduces. */
SOMEXTERN struct WPDevPeriphClassDataStructure {
	M_WPDevPeriph *classObject;
} SOMDLINK WPDevPeriphClassData;
#define _WPDevPeriph WPDevPeriphClassData.classObject

/* The API to parentMtabs for WPDevPeriph, and the instance data it introduces. */
SOMEXTERN struct WPDevPeriphCClassDataStructure {
	somMethodTabs parentMtab;
	somDToken              instanceDataToken;
} SOMDLINK WPDevPeriphCClassData;

/*
 * -- Typedefs for WPDevPeriph Method Procedures
 */
SOMEXTERN {

/*
 * -- Typedefs for Reintroduced Wrapper Methods
 */
typedef M_WPDevPeriph*   SOMLINK somTP_WPDevPeriph_somGetClass(WPDevPeriph *somSelf);
typedef somTP_WPDevPeriph_somGetClass *somTD_WPDevPeriph_somGetClass;
}

#endif /* WPDevPeriph_API */


/*
 * -- This emitter treats Method Tokens as Thunks by default.
 * -- Use the sc modifier "nothunks" to change this default
 */
#undef somresolve_
#define somresolve_(obj,mToken) ((somMethodProc*)((void)obj, mToken))

/*
 * -- The C++ Wrapper Class for WPDevPeriph
 */
class WPDevPeriph : public WPDevice
{
public:

// WPDevPeriph::new creates the class object if necessary, and then uses somNewNoInit
// to allocate memory and create the object. Initialization is in ctors.
void *operator new(size_t)
{
   if (!_WPDevPeriph) WPDevPeriphNewClass(WPDevPeriph_MajorVersion,WPDevPeriph_MinorVersion);
   return (void*)
      SOM_Resolve(_WPDevPeriph,SOMClass,somNewNoInit)
         ((SOMClass *)((void*)_WPDevPeriph));
}

// WPDevPeriph::delete uses somDestruct.
void operator delete(void * obj)
{
   if (obj && *(void**)obj) {
      SOM_Resolve(obj,SOMObject,somDestruct)
         ((SOMObject*)obj, 1, 0);
   }
}

WPDevPeriph& operator=(WPDevPeriph& fromObj)
{
   this->somDefaultAssign(0,(SOMObject*)((void*)&fromObj));
   return *this;
}

WPDevPeriph()
{
   if (*(void**)this != 
       ((somParentMtabStructPtr)
        (WPDevPeriphCClassData.parentMtab))->mtab)
      return;
   ((SOMObject*)((void*)this))->somDefaultInit(0);
}

WPDevPeriph(WPDevPeriph* fromObj)
{
   if (*(void**)this != 
       ((somParentMtabStructPtr)
        (WPDevPeriphCClassData.parentMtab))->mtab)
      return;
   ((SOMObject*)((void*)this))->somDefaultCopyInit(0,((SOMObject*)((void*)fromObj)));
}

WPDevPeriph(const WPDevPeriph* fromObj)
{
   if (*(void**)this != 
       ((somParentMtabStructPtr)
        (WPDevPeriphCClassData.parentMtab))->mtab)
      return;
   ((SOMObject*)((void*)this))->somDefaultConstCopyInit(0,((SOMObject*)((void*)fromObj)));
}


/*
 * Reintroduce inherited methods
 */

/* method: somGetClass */
M_WPDevPeriph*  somGetClass()
{
/*
 *  Return the receiver's class.
 */
   return SOM_ResolveD(this,WPDevPeriph,SOMObject,somGetClass)
	(this);
}



};   /* WPDevPeriph */



#endif       /* SOM_WPDevPeriph_xh */

#ifndef SOM_M_WPDevPeriph_xh
#define SOM_M_WPDevPeriph_xh

class M_WPDevPeriph;

/*
 *  New class methods section
 */

#define M_WPDevPeriph_MajorVersion 1
#define M_WPDevPeriph_MinorVersion 2

/* C++ SOM defs */
#include <somcls.xh>
#include <somcm.xh>

/* C++ parent defs */
#ifndef SOM_M_WPDevice_xh
#include <wpdevice.xh>
#endif

#ifndef M_WPDevPeriph_API
#define M_WPDevPeriph_API
/*
 * -- The Class API
 */

/*
 * Start of bindings for IDL types
 */


/*
 * End of bindings for IDL types.
 */

/*
 * -- M_WPDevPeriph is a metaclass for WPDevPeriph. Make sure WPDevPeriph is known.
 */
class WPDevPeriph;


/* A procedure to create the M_WPDevPeriph Class */
SOMEXTERN SOMClass * SOMLINK M_WPDevPeriphNewClass(
		integer4 majorVersion,
		integer4 minorVersion);

/* The API to the M_WPDevPeriph class object, and the methods it introduces. */
SOMEXTERN struct M_WPDevPeriphClassDataStructure {
	SOMClass *classObject;
} SOMDLINK M_WPDevPeriphClassData;
#define _M_WPDevPeriph M_WPDevPeriphClassData.classObject

/* The API to parentMtabs for M_WPDevPeriph, and the instance data it introduces. */
SOMEXTERN struct M_WPDevPeriphCClassDataStructure {
	somMethodTabs parentMtab;
	somDToken              instanceDataToken;
} SOMDLINK M_WPDevPeriphCClassData;

/*
 * -- Typedefs for M_WPDevPeriph Method Procedures
 */
SOMEXTERN {

/*
 * -- Typedefs for Reintroduced Wrapper Methods
 */
typedef WPDevPeriph*   SOMLINK somTP_M_WPDevPeriph_somNew(M_WPDevPeriph *somSelf);
typedef somTP_M_WPDevPeriph_somNew *somTD_M_WPDevPeriph_somNew;
}

#endif /* M_WPDevPeriph_API */


/*
 * -- This emitter treats Method Tokens as Thunks by default.
 * -- Use the sc modifier "nothunks" to change this default
 */
#undef somresolve_
#define somresolve_(obj,mToken) ((somMethodProc*)((void)obj, mToken))

/*
 * -- The C++ Wrapper Class for M_WPDevPeriph
 */
class M_WPDevPeriph : public M_WPDevice
{
/*
 *  New class methods section
 */
public:

// M_WPDevPeriph::new creates the class object if necessary, and then uses somNewNoInit
// to allocate memory and create the object. Initialization is in ctors.
void *operator new(size_t)
{
   if (!_M_WPDevPeriph) M_WPDevPeriphNewClass(M_WPDevPeriph_MajorVersion,M_WPDevPeriph_MinorVersion);
   return (void*)
      SOM_Resolve(_M_WPDevPeriph,SOMClass,somNewNoInit)
         ((SOMClass *)((void*)_M_WPDevPeriph));
}

// M_WPDevPeriph::delete uses somDestruct.
void operator delete(void * obj)
{
   if (obj && *(void**)obj) {
      SOM_Resolve(obj,SOMObject,somDestruct)
         ((SOMObject*)obj, 1, 0);
   }
}

M_WPDevPeriph& operator=(M_WPDevPeriph& fromObj)
{
   this->somDefaultAssign(0,(SOMObject*)((void*)&fromObj));
   return *this;
}

M_WPDevPeriph()
{
   if (*(void**)this != 
       ((somParentMtabStructPtr)
        (M_WPDevPeriphCClassData.parentMtab))->mtab)
      return;
   ((SOMObject*)((void*)this))->somDefaultInit(0);
}

M_WPDevPeriph(M_WPDevPeriph* fromObj)
{
   if (*(void**)this != 
       ((somParentMtabStructPtr)
        (M_WPDevPeriphCClassData.parentMtab))->mtab)
      return;
   ((SOMObject*)((void*)this))->somDefaultCopyInit(0,((SOMObject*)((void*)fromObj)));
}

M_WPDevPeriph(const M_WPDevPeriph* fromObj)
{
   if (*(void**)this != 
       ((somParentMtabStructPtr)
        (M_WPDevPeriphCClassData.parentMtab))->mtab)
      return;
   ((SOMObject*)((void*)this))->somDefaultConstCopyInit(0,((SOMObject*)((void*)fromObj)));
}


/*
 * Reintroduce inherited methods
 */

/* method: somNew */
WPDevPeriph*  somNew()
{
   return SOM_ResolveD(this,M_WPDevPeriph,SOMClass,somNew)
	(this);
}



};   /* M_WPDevPeriph */



#endif       /* SOM_M_WPDevPeriph_xh */
