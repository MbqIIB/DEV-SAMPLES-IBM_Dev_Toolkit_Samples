
/*
 * This file was generated by the SOM Compiler.
 * FileName: G:\cwpsh\rel\os2c\include\base\os2\wpdesk.xh.
 * Generated using:
 *     SOM Precompiler somipc: 2.29.1.14
 *     SOM Emitter emitxh: 2.43
 */

/*
 *   Module Header
 * 
 *   Module Name: WPDESK
 * 
 *   OS/2 Presentation Manager Workplace class definitions
 * 
 *   Copyright (c) International Business Machines Corporation 1991, 1992
 * 
 */


#ifndef SOM_WPDesktop_xh
#define SOM_WPDesktop_xh

class WPDesktop;

#define WPDesktop_MajorVersion 1
#define WPDesktop_MinorVersion 2

/* C++ SOM defs */
#include <somcls.xh>
#include <somcm.xh>

/* C++ parent defs */
#ifndef SOM_WPFolder_xh
#include <wpfolder.xh>
#endif

#ifndef WPDesktop_API
#define WPDesktop_API
/*
 * -- The Class API
 */

/*
 * Start of bindings for IDL types
 */

class SOMClass;
class SOMObject;
class WPFolder;
class M_WPObject;
class WPObject;
class WPImageFile;
class M_WPFileSystem;
class M_WPFolder;
class M_WPDesktop;

/*
 * End of bindings for IDL types.
 */

/* A procedure to create the WPDesktop Class */
class M_WPDesktop;
SOMEXTERN M_WPDesktop * SOMLINK WPDesktopNewClass(
		integer4 majorVersion,
		integer4 minorVersion);

/* The API to the WPDesktop class object, and the methods it introduces. */
SOMEXTERN struct WPDesktopClassDataStructure {
	M_WPDesktop *classObject;
	somMToken wpIsCurrentDesktop;
	somMToken wpAddDesktopLockup1Page;
	somMToken wpAddDesktopLockup2Page;
	somMToken wpAddDesktopLockup3Page;
	somMToken wpAddDesktopArcRest1Page;
	somMToken wpAddDesktopDefDT1Page;
	somMToken wpQueryDefaultDropOp;
	somMToken wpSetDefaultDropOp;
	somMToken wpQueryAutoLockup;
	somMToken wpSetAutoLockup;
	somMToken wpQueryLockupTimeout;
	somMToken wpSetLockupTimeout;
	somMToken wpQueryLockupOnStartup;
	somMToken wpSetLockupOnStartup;
	somMToken wpQueryLockupFullScreen;
	somMToken wpSetLockupFullScreen;
	somMToken wpQueryLockupAutoDim;
	somMToken wpSetLockupAutoDim;
	somMToken wpQueryLockupBackground;
	somMToken wpSetLockupBackground;
} SOMDLINK WPDesktopClassData;
#define _WPDesktop WPDesktopClassData.classObject

/* The API to parentMtabs for WPDesktop, and the instance data it introduces. */
SOMEXTERN struct WPDesktopCClassDataStructure {
	somMethodTabs parentMtab;
	somDToken              instanceDataToken;
} SOMDLINK WPDesktopCClassData;

/*
 * -- Typedefs for WPDesktop Method Procedures
 */
SOMEXTERN {
typedef BOOL   SOMLINK somTP_WPDesktop_wpIsCurrentDesktop(WPDesktop *somSelf);
typedef somTP_WPDesktop_wpIsCurrentDesktop *somTD_WPDesktop_wpIsCurrentDesktop;
typedef ULONG   SOMLINK somTP_WPDesktop_wpAddDesktopLockup1Page(WPDesktop *somSelf, 
		HWND hwndNotebook);
typedef somTP_WPDesktop_wpAddDesktopLockup1Page *somTD_WPDesktop_wpAddDesktopLockup1Page;
typedef ULONG   SOMLINK somTP_WPDesktop_wpAddDesktopLockup2Page(WPDesktop *somSelf, 
		HWND hwndNotebook);
typedef somTP_WPDesktop_wpAddDesktopLockup2Page *somTD_WPDesktop_wpAddDesktopLockup2Page;
typedef ULONG   SOMLINK somTP_WPDesktop_wpAddDesktopLockup3Page(WPDesktop *somSelf, 
		HWND hwndNotebook);
typedef somTP_WPDesktop_wpAddDesktopLockup3Page *somTD_WPDesktop_wpAddDesktopLockup3Page;
typedef ULONG   SOMLINK somTP_WPDesktop_wpAddDesktopArcRest1Page(WPDesktop *somSelf, 
		HWND hwndNotebook);
typedef somTP_WPDesktop_wpAddDesktopArcRest1Page *somTD_WPDesktop_wpAddDesktopArcRest1Page;
typedef ULONG   SOMLINK somTP_WPDesktop_wpAddDesktopDefDT1Page(WPDesktop *somSelf, 
		HWND hwndNotebook);
typedef somTP_WPDesktop_wpAddDesktopDefDT1Page *somTD_WPDesktop_wpAddDesktopDefDT1Page;
typedef ULONG   SOMLINK somTP_WPDesktop_wpQueryDefaultDropOp(WPDesktop *somSelf);
typedef somTP_WPDesktop_wpQueryDefaultDropOp *somTD_WPDesktop_wpQueryDefaultDropOp;
typedef BOOL   SOMLINK somTP_WPDesktop_wpSetDefaultDropOp(WPDesktop *somSelf, 
		ULONG ulDefaultDropOp);
typedef somTP_WPDesktop_wpSetDefaultDropOp *somTD_WPDesktop_wpSetDefaultDropOp;
typedef BOOL   SOMLINK somTP_WPDesktop_wpQueryAutoLockup(WPDesktop *somSelf);
typedef somTP_WPDesktop_wpQueryAutoLockup *somTD_WPDesktop_wpQueryAutoLockup;
typedef void   SOMLINK somTP_WPDesktop_wpSetAutoLockup(WPDesktop *somSelf, 
		BOOL bAutoLockup);
typedef somTP_WPDesktop_wpSetAutoLockup *somTD_WPDesktop_wpSetAutoLockup;
typedef ULONG   SOMLINK somTP_WPDesktop_wpQueryLockupTimeout(WPDesktop *somSelf);
typedef somTP_WPDesktop_wpQueryLockupTimeout *somTD_WPDesktop_wpQueryLockupTimeout;
typedef void   SOMLINK somTP_WPDesktop_wpSetLockupTimeout(WPDesktop *somSelf, 
		ULONG ulLockupTimeout);
typedef somTP_WPDesktop_wpSetLockupTimeout *somTD_WPDesktop_wpSetLockupTimeout;
typedef BOOL   SOMLINK somTP_WPDesktop_wpQueryLockupOnStartup(WPDesktop *somSelf);
typedef somTP_WPDesktop_wpQueryLockupOnStartup *somTD_WPDesktop_wpQueryLockupOnStartup;
typedef void   SOMLINK somTP_WPDesktop_wpSetLockupOnStartup(WPDesktop *somSelf, 
		BOOL bLockupOnStartup);
typedef somTP_WPDesktop_wpSetLockupOnStartup *somTD_WPDesktop_wpSetLockupOnStartup;
typedef BOOL   SOMLINK somTP_WPDesktop_wpQueryLockupFullScreen(WPDesktop *somSelf);
typedef somTP_WPDesktop_wpQueryLockupFullScreen *somTD_WPDesktop_wpQueryLockupFullScreen;
typedef void   SOMLINK somTP_WPDesktop_wpSetLockupFullScreen(WPDesktop *somSelf, 
		BOOL bLockupFullScreen);
typedef somTP_WPDesktop_wpSetLockupFullScreen *somTD_WPDesktop_wpSetLockupFullScreen;
typedef BOOL   SOMLINK somTP_WPDesktop_wpQueryLockupAutoDim(WPDesktop *somSelf);
typedef somTP_WPDesktop_wpQueryLockupAutoDim *somTD_WPDesktop_wpQueryLockupAutoDim;
typedef void   SOMLINK somTP_WPDesktop_wpSetLockupAutoDim(WPDesktop *somSelf, 
		BOOL bLockupAutoDim);
typedef somTP_WPDesktop_wpSetLockupAutoDim *somTD_WPDesktop_wpSetLockupAutoDim;
typedef void   SOMLINK somTP_WPDesktop_wpQueryLockupBackground(WPDesktop *somSelf, 
		PSZ* ppszImageFileName, 
		ULONG* pulImageMode, 
		ULONG* pulScaleFactor, 
		ULONG* pulBackgroundType, 
		long* plBackgroundColor);
typedef somTP_WPDesktop_wpQueryLockupBackground *somTD_WPDesktop_wpQueryLockupBackground;
typedef void   SOMLINK somTP_WPDesktop_wpSetLockupBackground(WPDesktop *somSelf, 
		PSZ pszImageFileName, 
		ULONG ulImageMode, 
		ULONG ulScaleFactor, 
		ULONG ulBackgroundType, 
		long lBackgroundColor);
typedef somTP_WPDesktop_wpSetLockupBackground *somTD_WPDesktop_wpSetLockupBackground;

/*
 * -- Typedefs for Reintroduced Wrapper Methods
 */
typedef M_WPDesktop*   SOMLINK somTP_WPDesktop_somGetClass(WPDesktop *somSelf);
typedef somTP_WPDesktop_somGetClass *somTD_WPDesktop_somGetClass;
}

#endif /* WPDesktop_API */


/*
 * -- This emitter treats Method Tokens as Thunks by default.
 * -- Use the sc modifier "nothunks" to change this default
 */
#undef somresolve_
#define somresolve_(obj,mToken) ((somMethodProc*)((void)obj, mToken))

/*
 * -- The C++ Wrapper Class for WPDesktop
 */
class WPDesktop : public WPFolder
{
public:

// WPDesktop::new creates the class object if necessary, and then uses somNewNoInit
// to allocate memory and create the object. Initialization is in ctors.
void *operator new(size_t)
{
   if (!_WPDesktop) WPDesktopNewClass(WPDesktop_MajorVersion,WPDesktop_MinorVersion);
   return (void*)
      SOM_Resolve(_WPDesktop,SOMClass,somNewNoInit)
         ((SOMClass *)((void*)_WPDesktop));
}

// WPDesktop::delete uses somDestruct.
void operator delete(void * obj)
{
   if (obj && *(void**)obj) {
      SOM_Resolve(obj,SOMObject,somDestruct)
         ((SOMObject*)obj, 1, 0);
   }
}

WPDesktop& operator=(WPDesktop& fromObj)
{
   this->somDefaultAssign(0,(SOMObject*)((void*)&fromObj));
   return *this;
}

WPDesktop()
{
   if (*(void**)this != 
       ((somParentMtabStructPtr)
        (WPDesktopCClassData.parentMtab))->mtab)
      return;
   ((SOMObject*)((void*)this))->somDefaultInit(0);
}

WPDesktop(WPDesktop* fromObj)
{
   if (*(void**)this != 
       ((somParentMtabStructPtr)
        (WPDesktopCClassData.parentMtab))->mtab)
      return;
   ((SOMObject*)((void*)this))->somDefaultCopyInit(0,((SOMObject*)((void*)fromObj)));
}

WPDesktop(const WPDesktop* fromObj)
{
   if (*(void**)this != 
       ((somParentMtabStructPtr)
        (WPDesktopCClassData.parentMtab))->mtab)
      return;
   ((SOMObject*)((void*)this))->somDefaultConstCopyInit(0,((SOMObject*)((void*)fromObj)));
}


/* method: wpIsCurrentDesktop */
BOOL   wpIsCurrentDesktop()
{
   return SOM_ResolveD(this,WPDesktop,WPDesktop,wpIsCurrentDesktop)
	(this);
}


/* method: wpAddDesktopLockup1Page */
ULONG   wpAddDesktopLockup1Page(HWND hwndNotebook)
{
   return SOM_ResolveD(this,WPDesktop,WPDesktop,wpAddDesktopLockup1Page)
	(this,hwndNotebook);
}


/* method: wpAddDesktopLockup2Page */
ULONG   wpAddDesktopLockup2Page(HWND hwndNotebook)
{
   return SOM_ResolveD(this,WPDesktop,WPDesktop,wpAddDesktopLockup2Page)
	(this,hwndNotebook);
}


/* method: wpAddDesktopLockup3Page */
ULONG   wpAddDesktopLockup3Page(HWND hwndNotebook)
{
   return SOM_ResolveD(this,WPDesktop,WPDesktop,wpAddDesktopLockup3Page)
	(this,hwndNotebook);
}


/* method: wpAddDesktopArcRest1Page */
ULONG   wpAddDesktopArcRest1Page(HWND hwndNotebook)
{
   return SOM_ResolveD(this,WPDesktop,WPDesktop,wpAddDesktopArcRest1Page)
	(this,hwndNotebook);
}


/* method: wpAddDesktopDefDT1Page */
ULONG   wpAddDesktopDefDT1Page(HWND hwndNotebook)
{
   return SOM_ResolveD(this,WPDesktop,WPDesktop,wpAddDesktopDefDT1Page)
	(this,hwndNotebook);
}


/* method: wpQueryDefaultDropOp */
ULONG   wpQueryDefaultDropOp()
{
   return SOM_ResolveD(this,WPDesktop,WPDesktop,wpQueryDefaultDropOp)
	(this);
}


/* method: wpSetDefaultDropOp */
BOOL   wpSetDefaultDropOp(ULONG ulDefaultDropOp)
{
   return SOM_ResolveD(this,WPDesktop,WPDesktop,wpSetDefaultDropOp)
	(this,ulDefaultDropOp);
}


/* method: wpQueryAutoLockup */
BOOL   wpQueryAutoLockup()
{
   return SOM_ResolveD(this,WPDesktop,WPDesktop,wpQueryAutoLockup)
	(this);
}


/* method: wpSetAutoLockup */
void   wpSetAutoLockup(BOOL bAutoLockup)
{
   SOM_ResolveD(this,WPDesktop,WPDesktop,wpSetAutoLockup)
	(this,bAutoLockup);
}


/* method: wpQueryLockupTimeout */
ULONG   wpQueryLockupTimeout()
{
   return SOM_ResolveD(this,WPDesktop,WPDesktop,wpQueryLockupTimeout)
	(this);
}


/* method: wpSetLockupTimeout */
void   wpSetLockupTimeout(ULONG ulLockupTimeout)
{
   SOM_ResolveD(this,WPDesktop,WPDesktop,wpSetLockupTimeout)
	(this,ulLockupTimeout);
}


/* method: wpQueryLockupOnStartup */
BOOL   wpQueryLockupOnStartup()
{
   return SOM_ResolveD(this,WPDesktop,WPDesktop,wpQueryLockupOnStartup)
	(this);
}


/* method: wpSetLockupOnStartup */
void   wpSetLockupOnStartup(BOOL bLockupOnStartup)
{
   SOM_ResolveD(this,WPDesktop,WPDesktop,wpSetLockupOnStartup)
	(this,bLockupOnStartup);
}


/* method: wpQueryLockupFullScreen */
BOOL   wpQueryLockupFullScreen()
{
   return SOM_ResolveD(this,WPDesktop,WPDesktop,wpQueryLockupFullScreen)
	(this);
}


/* method: wpSetLockupFullScreen */
void   wpSetLockupFullScreen(BOOL bLockupFullScreen)
{
   SOM_ResolveD(this,WPDesktop,WPDesktop,wpSetLockupFullScreen)
	(this,bLockupFullScreen);
}


/* method: wpQueryLockupAutoDim */
BOOL   wpQueryLockupAutoDim()
{
   return SOM_ResolveD(this,WPDesktop,WPDesktop,wpQueryLockupAutoDim)
	(this);
}


/* method: wpSetLockupAutoDim */
void   wpSetLockupAutoDim(BOOL bLockupAutoDim)
{
   SOM_ResolveD(this,WPDesktop,WPDesktop,wpSetLockupAutoDim)
	(this,bLockupAutoDim);
}


/* method: wpQueryLockupBackground */
void   wpQueryLockupBackground(PSZ* ppszImageFileName, 
		ULONG* pulImageMode, 
		ULONG* pulScaleFactor, 
		ULONG* pulBackgroundType, 
		long* plBackgroundColor)
{
   SOM_ResolveD(this,WPDesktop,WPDesktop,wpQueryLockupBackground)
	(this,ppszImageFileName,pulImageMode,pulScaleFactor,pulBackgroundType,plBackgroundColor);
}


/* method: wpSetLockupBackground */
void   wpSetLockupBackground(PSZ pszImageFileName, 
		ULONG ulImageMode, 
		ULONG ulScaleFactor, 
		ULONG ulBackgroundType, 
		long lBackgroundColor)
{
   SOM_ResolveD(this,WPDesktop,WPDesktop,wpSetLockupBackground)
	(this,pszImageFileName,ulImageMode,ulScaleFactor,ulBackgroundType,lBackgroundColor);
}


/*
 * Reintroduce inherited methods
 */

/* method: somGetClass */
M_WPDesktop*  somGetClass()
{
/*
 *  Return the receiver's class.
 */
   return SOM_ResolveD(this,WPDesktop,SOMObject,somGetClass)
	(this);
}



};   /* WPDesktop */



#endif       /* SOM_WPDesktop_xh */

#ifndef SOM_M_WPDesktop_xh
#define SOM_M_WPDesktop_xh

class M_WPDesktop;

#define M_WPDesktop_MajorVersion 1
#define M_WPDesktop_MinorVersion 2

/* C++ SOM defs */
#include <somcls.xh>
#include <somcm.xh>

/* C++ parent defs */
#ifndef SOM_M_WPFolder_xh
#include <wpfolder.xh>
#endif

#ifndef M_WPDesktop_API
#define M_WPDesktop_API
/*
 * -- The Class API
 */

/*
 * Start of bindings for IDL types
 */


/*
 * End of bindings for IDL types.
 */

/*
 * -- M_WPDesktop is a metaclass for WPDesktop. Make sure WPDesktop is known.
 */
class WPDesktop;


/* A procedure to create the M_WPDesktop Class */
SOMEXTERN SOMClass * SOMLINK M_WPDesktopNewClass(
		integer4 majorVersion,
		integer4 minorVersion);

/* The API to the M_WPDesktop class object, and the methods it introduces. */
SOMEXTERN struct M_WPDesktopClassDataStructure {
	SOMClass *classObject;
	somMToken wpclsQueryObjectFromFrame;
	somMToken wpclsQueryActiveDesktop;
	somMToken wpclsQueryActiveDesktopHWND;
} SOMDLINK M_WPDesktopClassData;
#define _M_WPDesktop M_WPDesktopClassData.classObject

/* The API to parentMtabs for M_WPDesktop, and the instance data it introduces. */
SOMEXTERN struct M_WPDesktopCClassDataStructure {
	somMethodTabs parentMtab;
	somDToken              instanceDataToken;
} SOMDLINK M_WPDesktopCClassData;

/*
 * -- Typedefs for M_WPDesktop Method Procedures
 */
SOMEXTERN {
typedef WPObject*   SOMLINK somTP_M_WPDesktop_wpclsQueryObjectFromFrame(M_WPDesktop *somSelf, 
		HWND hwndFrame);
typedef somTP_M_WPDesktop_wpclsQueryObjectFromFrame *somTD_M_WPDesktop_wpclsQueryObjectFromFrame;
typedef HWND   SOMLINK somTP_M_WPDesktop_wpclsQueryActiveDesktopHWND(M_WPDesktop *somSelf);
typedef somTP_M_WPDesktop_wpclsQueryActiveDesktopHWND *somTD_M_WPDesktop_wpclsQueryActiveDesktopHWND;
typedef WPObject*   SOMLINK somTP_M_WPDesktop_wpclsQueryActiveDesktop(M_WPDesktop *somSelf);
typedef somTP_M_WPDesktop_wpclsQueryActiveDesktop *somTD_M_WPDesktop_wpclsQueryActiveDesktop;

/*
 * -- Typedefs for Reintroduced Wrapper Methods
 */
typedef WPDesktop*   SOMLINK somTP_M_WPDesktop_somNew(M_WPDesktop *somSelf);
typedef somTP_M_WPDesktop_somNew *somTD_M_WPDesktop_somNew;
}

#endif /* M_WPDesktop_API */


/*
 * -- This emitter treats Method Tokens as Thunks by default.
 * -- Use the sc modifier "nothunks" to change this default
 */
#undef somresolve_
#define somresolve_(obj,mToken) ((somMethodProc*)((void)obj, mToken))

/*
 * -- The C++ Wrapper Class for M_WPDesktop
 */
class M_WPDesktop : public M_WPFolder
{
public:

// M_WPDesktop::new creates the class object if necessary, and then uses somNewNoInit
// to allocate memory and create the object. Initialization is in ctors.
void *operator new(size_t)
{
   if (!_M_WPDesktop) M_WPDesktopNewClass(M_WPDesktop_MajorVersion,M_WPDesktop_MinorVersion);
   return (void*)
      SOM_Resolve(_M_WPDesktop,SOMClass,somNewNoInit)
         ((SOMClass *)((void*)_M_WPDesktop));
}

// M_WPDesktop::delete uses somDestruct.
void operator delete(void * obj)
{
   if (obj && *(void**)obj) {
      SOM_Resolve(obj,SOMObject,somDestruct)
         ((SOMObject*)obj, 1, 0);
   }
}

M_WPDesktop& operator=(M_WPDesktop& fromObj)
{
   this->somDefaultAssign(0,(SOMObject*)((void*)&fromObj));
   return *this;
}

M_WPDesktop()
{
   if (*(void**)this != 
       ((somParentMtabStructPtr)
        (M_WPDesktopCClassData.parentMtab))->mtab)
      return;
   ((SOMObject*)((void*)this))->somDefaultInit(0);
}

M_WPDesktop(M_WPDesktop* fromObj)
{
   if (*(void**)this != 
       ((somParentMtabStructPtr)
        (M_WPDesktopCClassData.parentMtab))->mtab)
      return;
   ((SOMObject*)((void*)this))->somDefaultCopyInit(0,((SOMObject*)((void*)fromObj)));
}

M_WPDesktop(const M_WPDesktop* fromObj)
{
   if (*(void**)this != 
       ((somParentMtabStructPtr)
        (M_WPDesktopCClassData.parentMtab))->mtab)
      return;
   ((SOMObject*)((void*)this))->somDefaultConstCopyInit(0,((SOMObject*)((void*)fromObj)));
}


/* method: wpclsQueryObjectFromFrame */
WPObject*   wpclsQueryObjectFromFrame(HWND hwndFrame)
{
   return SOM_ResolveD(this,M_WPDesktop,M_WPDesktop,wpclsQueryObjectFromFrame)
	(this,hwndFrame);
}


/* method: wpclsQueryActiveDesktopHWND */
HWND   wpclsQueryActiveDesktopHWND()
{
   return SOM_ResolveD(this,M_WPDesktop,M_WPDesktop,wpclsQueryActiveDesktopHWND)
	(this);
}


/* method: wpclsQueryActiveDesktop */
WPObject*   wpclsQueryActiveDesktop()
{
   return SOM_ResolveD(this,M_WPDesktop,M_WPDesktop,wpclsQueryActiveDesktop)
	(this);
}


/*
 * Reintroduce inherited methods
 */

/* method: somNew */
WPDesktop*  somNew()
{
   return SOM_ResolveD(this,M_WPDesktop,SOMClass,somNew)
	(this);
}



};   /* M_WPDesktop */



#endif       /* SOM_M_WPDesktop_xh */
