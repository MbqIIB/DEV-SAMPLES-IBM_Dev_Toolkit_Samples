
/*
 * This file was generated by the SOM Compiler.
 * FileName: G:\cwpsh\rel\os2c\include\base\os2\wpfolder.xh.
 * Generated using:
 *     SOM Precompiler somipc: 2.29.1.14
 *     SOM Emitter emitxh: 2.43
 */

/*
 *   Module Header
 * 
 *   Module Name: WPOBJECT
 * 
 *   OS/2 Presentation Manager Workplace class definitions
 * 
 *   Copyright (c) International Business Machines Corporation 1991, 1992
 * 
 */


#ifndef SOM_WPFolder_xh
#define SOM_WPFolder_xh

class WPFolder;

#define WPFolder_MajorVersion 1
#define WPFolder_MinorVersion 2

/* C++ SOM defs */
#include <somcls.xh>
#include <somcm.xh>

/* C++ parent defs */
#ifndef SOM_WPFileSystem_xh
#include <wpfsys.xh>
#endif

#ifndef WPFolder_API
#define WPFolder_API
/*
 * -- The Class API
 */

/*
 * Start of bindings for IDL types
 */

class SOMClass;
class SOMObject;
class WPFolder;
class M_WPObject;
class WPObject;
class WPImageFile;
class M_WPFileSystem;
class M_WPFolder;

/*
 * End of bindings for IDL types.
 */

/*
 * Passthru lines: File: "C.h", "after"
 */

      /* Folder flags */

      #define FOI_POPULATEDWITHALL      0x0001
      #define FOI_POPULATEDWITHFOLDERS  0x0002
      #define FOI_WORKAREA              0x0004
      #define FOI_CHANGEFONT            0x0008
      #define FOI_WAMINIMIZED           0x0020
      #define FOI_WASTARTONRESTORE      0x0040
      #define FOI_NOREFRESHVIEWS        0x0080
      #define FOI_ASYNCREFRESHONOPEN    0x0100
      #define FOI_TREEPOPULATED         0x0200
      #define FOI_POPULATEINPROGRESS    0x0400
      #define FOI_REFRESHINPROGRESS     0x0800
      #define FOI_FIRSTPOPULATE         0x1000
      #define FOI_WAMCRINPROGRESS       0x2000
      #define FOI_CNRBKGNDOLDFORMAT     0x4000
      #define FOI_CHANGEICONBGNDCOLOR   0x8000
      #define FOI_CHANGEICONTEXTCOLOR   0x00010000
      #define FOI_DELETEINPROGRESS      0x00020000
      #define FOI_CHANGESHADOWTEXTCOLOR 0x00040000

      /* Open views for the wpOpen() method */

      #define OPEN_TREE          101
      #define OPEN_DETAILS       102

      /* State constants for OpenDoc attributes */

      #define MENUBAR_ON         1
      #define MENUBAR_OFF        0
      #define MENUBAR_DEFAULT    2

      #define TITLEBARICONS_ON   1
      #define TITLEBARICONS_OFF  0
      #define TITLEBARICONS_DEFAULT 2

      /* Folder save-restore keys */

      #define IDKEY_FDRCONTENTATTR     2900
      #define IDKEY_FDRTREEATTR        2901
      #define IDKEY_FDRCVLFONT         2902
      #define IDKEY_FDRCVNFONT         2903
      #define IDKEY_FDRCVIFONT         2904
      #define IDKEY_FDRTVLFONT         2905
      #define IDKEY_FDRTVNFONT         2906
      #define IDKEY_FDRDETAILSATTR     2907
      #define IDKEY_FDRDVFONT          2908
      #define IDKEY_FDRDETAILSCLASS    2909
      #define IDKEY_FDRICONPOS         2910
      #define IDKEY_FDRINVISCOLUMNS    2914
      #define IDKEY_FDRINCCLASS        2920
      #define IDKEY_FDRINCNAME         2921
      #define IDKEY_FDRFSYSSEARCHINFO  2922
      #define IDKEY_FILTERCONTENT      2923
      #define IDKEY_CNRBACKGROUND      2924
      #define IDKEY_FDRINCCRITERIA     2925
      #define IDKEY_FDRICONVIEWPOS     2926
      #define IDKEY_FDRSORTCLASS       2927
      #define IDKEY_FDRSORTATTRIBS     2928
      #define IDKEY_FDRSORTINFO        2929
      #define IDKEY_FDRSNEAKYCOUNT     2930
      #define IDKEY_FDRLONGARRAY       2931
      #define IDKEY_FDRSTRARRAY        2932
      #define IDKEY_FDRCNRBACKGROUND   2933
      #define IDKEY_FDRBKGNDIMAGEFILE  2934
      #define IDKEY_FDRBACKGROUND      2935
      #define IDKEY_FDRSELFCLOSE       2936

      #define IDKEY_FDRODMENUBARON     2937
      #define IDKEY_FDRGRIDINFO        2938
      #define IDKEY_FDRTREEVIEWCONTENTS 2939

      /* Constant for wpSetIconTextBackgroundColor */

      #define USE_GLOBAL_COLOR         0x40000000

      /* Constants for wpSetIconTextVisibility and wpQueryIconTextVisibility */

      #define ICON_TEXT_VISIBLE        0x00000001
      #define USE_GLOBAL_VISIBILITY    0x40000000

      /* Constants for wpSet/QueryBackground and wpSet/QueryLockupBackground */

      #define BACKGROUND_NORMAL_IMAGE 0
      #define BACKGROUND_TILED_IMAGE  1
      #define BACKGROUND_SCALED_IMAGE 2
      #define BACKGROUND_COLOR_ONLY   0
      #define BACKGROUND_IMAGE        1

      /* Miscellaneous */

      #define PPFONTSTRSIZE 20

      #define ICONPOSSIZE(pI) ( sizeof(ICONPOS) + strlen(pI->szIdentity) )
      #define PARTIAL_FILLFOLDER_SEM_TIMEOUT 5

      #define GETATTR(View) (View == OPEN_CONTENTS ? _ContentAttr : \
                             (View == OPEN_TREE ? _TreeAttr : _DetailsAttr))
      #define FOLDER_DEFATTRS (CV_ICON | CA_OWNERPAINTBACKGROUND     | \
                               CA_MIXEDTARGETEMPH | CA_OWNERDRAW)
      #define FOLDER_DEFTREEATTRS (CV_ICON | CA_OWNERPAINTBACKGROUND | \
                                   CV_TREE | CA_TREELINE | CA_OWNERDRAW)
      #define FOLDER_DEFDETAILS (CV_DETAIL | CA_OWNERPAINTBACKGROUND | \
                       CV_MINI | CA_DETAILSVIEWTITLES | CA_MIXEDTARGETEMPH)
      #define FOLDER_DEFSORT NULL

      /* wpSearchFolder structures */
       typedef struct _SEARCH_INFO {
          M_WPObject *ClassToBeFound;
          BOOL   fSkipExtendedSearchCriteria;
          PVOID  pvoidExtendedCriteria;
       } SEARCH_INFO;
       typedef SEARCH_INFO *PSEARCH_INFO;



/* A procedure to create the WPFolder Class */
class M_WPFolder;
SOMEXTERN M_WPFolder * SOMLINK WPFolderNewClass(
		integer4 majorVersion,
		integer4 minorVersion);

/* The API to the WPFolder class object, and the methods it introduces. */
SOMEXTERN struct WPFolderClassDataStructure {
	M_WPFolder *classObject;
	somMToken wpSetFldrFlags;
	somMToken wpQueryFldrFlags;
	somMToken wpSetFldrFont;
	somMToken wpQueryFldrFont;
	somMToken wpSetNextIconPos;
	somMToken wpQueryNextIconPos;
	somMToken wpPopulate;
	somMToken wpAddToContent;
	somMToken wpQueryContent;
	somMToken wpAddFolderView1Page;
	somMToken wpAddFolderView2Page;
	somMToken wpAddFolderView3Page;
	somMToken wpAddFolderIncludePage;
	somMToken wpAddFolderSortPage;
	somMToken wpAddFolderBackgroundPage;
	somMToken wpInitIconPosData;
	somMToken wpFreeIconPosData;
	somMToken wpQueryIconPosition;
	somMToken wpStoreIconPosData;
	somMToken wpDeleteFromContent;
	somMToken wpSetFldrAttr;
	somMToken wpQueryFldrAttr;
	somMToken wpSetFldrSort;
	somMToken wpQueryFldrSort;
	somMToken wpRestoreFldrRunObjs;
	somMToken wpStoreFldrRunObjs;
	somMToken withdrawn30;
	somMToken withdrawn31;
	somMToken wpDeleteContents;
	somMToken wpQueryOpenFolders;
	somMToken wpFolderPrivate1;
	somMToken wpSearchFolder;
	somMToken wpSetFldrDetailsClass;
	somMToken wpQueryFldrDetailsClass;
	somMToken wpRefresh;
	somMToken wpSetDetailsColumnVisibility;
	somMToken wpIsDetailsColumnVisible;
	somMToken wpFolderPrivate2;
	somMToken wpFolderPrivate3;
	somMToken wpFolderPrivate4;
	somMToken wpFolderPrivate5;
	somMToken wpSetFldrSortClass;
	somMToken wpQueryFldrSortClass;
	somMToken wpSetSortAttribAvailable;
	somMToken wpIsSortAttribAvailable;
	somMToken wpFolderPrivate6;
	somMToken wpContainsFolders;
	somMToken wpFolderPrivate7;
	somMToken wpQueryIconViewPos;
	somMToken wpQueryDefaultView;
	somMToken wpAddFirstChild;
	somMToken wpFolderPrivate8;
	somMToken wpHideFldrRunObjs;
	somMToken wpFolderPrivate9;
	somMToken wpFolderPrivate10;
	somMToken wpFolderPrivate11;
	somMToken wpFolderPrivate12;
	somMToken wpFolderPrivate13;
	somMToken wpFolderPrivate14;
	somMToken wpFolderPrivate15;
	somMToken wpFolderPrivate16;
	somMToken wpFolderPrivate17;
	somMToken wpFolderPrivate18;
	somMToken wpFolderPrivate19;
	somMToken wpFolderPrivate20;
	somMToken wpFolderPrivate21;
	somMToken wpFolderPrivate22;
	somMToken wpFolderPrivate23;
	somMToken wpModifyFldrFlags;
	somMToken wpFolderPrivate24;
	somMToken wpFolderPrivate25;
	somMToken wpFolderPrivate26;
	somMToken wpFolderPrivate27;
	somMToken wpFolderPrivate28;
	somMToken wpQueryIconTextBackgroundColor;
	somMToken wpSetIconTextBackgroundColor;
	somMToken wpFolderPrivate29;
	somMToken wpFolderPrivate30;
	somMToken wpFolderPrivate31;
	somMToken wpQueryIconTextColor;
	somMToken wpSetIconTextColor;
	somMToken wpQueryIconTextVisibility;
	somMToken wpSetIconTextVisibility;
	somMToken wpAddFolderSelfClosePage;
	somMToken wpFolderPrivate32;
	somMToken wpFolderPrivate33;
	somMToken wpFolderPrivate34;
	somMToken wpFolderPrivate35;
	somMToken wpFolderPrivate36;
	somMToken wpFolderPrivate37;
	somMToken wpFolderPrivate38;
	somMToken wpFolderPrivate39;
	somMToken wpFolderPrivate40;
	somMToken wpFolderPrivate41;
	somMToken wpFolderPrivate42;
	somMToken wpAddFolderMenu2Page;
	somMToken wpSetMenuBarVisibility;
	somMToken wpQueryMenuBarVisibility;
	somMToken wpFolderPrivate43;
	somMToken wpFolderPrivate44;
	somMToken wpFolderPrivate45;
	somMToken wpFlushNotifications;
	somMToken wpSetShadowTextColor;
	somMToken wpQueryShadowTextColor;
	somMToken wpSetFldrBackground;
	somMToken wpQueryFldrBackground;
	somMToken wpSetFldrGrid;
	somMToken wpQueryFldrGrid;
} SOMDLINK WPFolderClassData;
#define _WPFolder WPFolderClassData.classObject

/* The API to parentMtabs for WPFolder, and the instance data it introduces. */
SOMEXTERN struct WPFolderCClassDataStructure {
	somMethodTabs parentMtab;
	somDToken              instanceDataToken;
} SOMDLINK WPFolderCClassData;

/*
 * -- Typedefs for WPFolder Method Procedures
 */
SOMEXTERN {
typedef BOOL   SOMLINK somTP_WPFolder_wpSetFldrFlags(WPFolder *somSelf, 
		ULONG ulFlags);
typedef somTP_WPFolder_wpSetFldrFlags *somTD_WPFolder_wpSetFldrFlags;
typedef ULONG   SOMLINK somTP_WPFolder_wpQueryFldrFlags(WPFolder *somSelf);
typedef somTP_WPFolder_wpQueryFldrFlags *somTD_WPFolder_wpQueryFldrFlags;
typedef BOOL   SOMLINK somTP_WPFolder_wpSetFldrFont(WPFolder *somSelf, 
		PSZ pszFont, 
		ULONG ulView);
typedef somTP_WPFolder_wpSetFldrFont *somTD_WPFolder_wpSetFldrFont;
typedef PSZ   SOMLINK somTP_WPFolder_wpQueryFldrFont(WPFolder *somSelf, 
		ULONG ulView);
typedef somTP_WPFolder_wpQueryFldrFont *somTD_WPFolder_wpQueryFldrFont;
typedef BOOL   SOMLINK somTP_WPFolder_wpSetFldrAttr(WPFolder *somSelf, 
		ULONG Attr, 
		ULONG ulView);
typedef somTP_WPFolder_wpSetFldrAttr *somTD_WPFolder_wpSetFldrAttr;
typedef ULONG   SOMLINK somTP_WPFolder_wpQueryFldrAttr(WPFolder *somSelf, 
		ULONG ulView);
typedef somTP_WPFolder_wpQueryFldrAttr *somTD_WPFolder_wpQueryFldrAttr;
typedef BOOL   SOMLINK somTP_WPFolder_wpSetNextIconPos(WPFolder *somSelf, 
		PPOINTL pptl);
typedef somTP_WPFolder_wpSetNextIconPos *somTD_WPFolder_wpSetNextIconPos;
typedef PPOINTL   SOMLINK somTP_WPFolder_wpQueryNextIconPos(WPFolder *somSelf);
typedef somTP_WPFolder_wpQueryNextIconPos *somTD_WPFolder_wpQueryNextIconPos;
typedef BOOL   SOMLINK somTP_WPFolder_wpPopulate(WPFolder *somSelf, 
		ULONG ulReserved, 
		PSZ pszPath, 
		BOOL fFoldersOnly);
typedef somTP_WPFolder_wpPopulate *somTD_WPFolder_wpPopulate;
typedef WPObject*   SOMLINK somTP_WPFolder_wpQueryContent(WPFolder *somSelf, 
		WPObject* Object, 
		ULONG ulOption);
typedef somTP_WPFolder_wpQueryContent *somTD_WPFolder_wpQueryContent;
typedef ULONG   SOMLINK somTP_WPFolder_wpAddFolderView1Page(WPFolder *somSelf, 
		HWND hwndNotebook);
typedef somTP_WPFolder_wpAddFolderView1Page *somTD_WPFolder_wpAddFolderView1Page;
typedef ULONG   SOMLINK somTP_WPFolder_wpAddFolderView2Page(WPFolder *somSelf, 
		HWND hwndNotebook);
typedef somTP_WPFolder_wpAddFolderView2Page *somTD_WPFolder_wpAddFolderView2Page;
typedef ULONG   SOMLINK somTP_WPFolder_wpAddFolderView3Page(WPFolder *somSelf, 
		HWND hwndNotebook);
typedef somTP_WPFolder_wpAddFolderView3Page *somTD_WPFolder_wpAddFolderView3Page;
typedef ULONG   SOMLINK somTP_WPFolder_wpAddFolderIncludePage(WPFolder *somSelf, 
		HWND hwndNotebook);
typedef somTP_WPFolder_wpAddFolderIncludePage *somTD_WPFolder_wpAddFolderIncludePage;
typedef ULONG   SOMLINK somTP_WPFolder_wpAddFolderSortPage(WPFolder *somSelf, 
		HWND hwndNotebook);
typedef somTP_WPFolder_wpAddFolderSortPage *somTD_WPFolder_wpAddFolderSortPage;
typedef ULONG   SOMLINK somTP_WPFolder_wpAddFolderBackgroundPage(WPFolder *somSelf, 
		HWND hwndNotebook);
typedef somTP_WPFolder_wpAddFolderBackgroundPage *somTD_WPFolder_wpAddFolderBackgroundPage;
typedef ULONG   SOMLINK somTP_WPFolder_wpAddFolderMenu2Page(WPFolder *somSelf, 
		HWND hwndNotebook);
typedef somTP_WPFolder_wpAddFolderMenu2Page *somTD_WPFolder_wpAddFolderMenu2Page;
typedef ULONG   SOMLINK somTP_WPFolder_wpAddFolderSelfClosePage(WPFolder *somSelf, 
		HWND hwndNotebook);
typedef somTP_WPFolder_wpAddFolderSelfClosePage *somTD_WPFolder_wpAddFolderSelfClosePage;
typedef BOOL   SOMLINK somTP_WPFolder_wpInitIconPosData(WPFolder *somSelf);
typedef somTP_WPFolder_wpInitIconPosData *somTD_WPFolder_wpInitIconPosData;
typedef void   SOMLINK somTP_WPFolder_wpFreeIconPosData(WPFolder *somSelf);
typedef somTP_WPFolder_wpFreeIconPosData *somTD_WPFolder_wpFreeIconPosData;
typedef BOOL   SOMLINK somTP_WPFolder_wpStoreIconPosData(WPFolder *somSelf, 
		PICONPOS pIconPos, 
		ULONG cbSize);
typedef somTP_WPFolder_wpStoreIconPosData *somTD_WPFolder_wpStoreIconPosData;
typedef BOOL   SOMLINK somTP_WPFolder_wpQueryIconPosition(WPFolder *somSelf, 
		PSZ pszIdentity, 
		PPOINTL pptl, 
		PULONG pIndex);
typedef somTP_WPFolder_wpQueryIconPosition *somTD_WPFolder_wpQueryIconPosition;
typedef BOOL   SOMLINK somTP_WPFolder_wpSetFldrSort(WPFolder *somSelf, 
		PVOID pSortRecord, 
		ULONG ulView, 
		ULONG ulType);
typedef somTP_WPFolder_wpSetFldrSort *somTD_WPFolder_wpSetFldrSort;
typedef PVOID   SOMLINK somTP_WPFolder_wpQueryFldrSort(WPFolder *somSelf, 
		ULONG ulView, 
		ULONG ulType);
typedef somTP_WPFolder_wpQueryFldrSort *somTD_WPFolder_wpQueryFldrSort;
typedef BOOL   SOMLINK somTP_WPFolder_wpRestoreFldrRunObjs(WPFolder *somSelf);
typedef somTP_WPFolder_wpRestoreFldrRunObjs *somTD_WPFolder_wpRestoreFldrRunObjs;
typedef BOOL   SOMLINK somTP_WPFolder_wpStoreFldrRunObjs(WPFolder *somSelf, 
		ULONG ulType);
typedef somTP_WPFolder_wpStoreFldrRunObjs *somTD_WPFolder_wpStoreFldrRunObjs;
typedef BOOL   SOMLINK somTP_WPFolder_wpHideFldrRunObjs(WPFolder *somSelf, 
		BOOL fHide);
typedef somTP_WPFolder_wpHideFldrRunObjs *somTD_WPFolder_wpHideFldrRunObjs;
typedef ULONG   SOMLINK somTP_WPFolder_wpDeleteContents(WPFolder *somSelf, 
		ULONG fConfirmations);
typedef somTP_WPFolder_wpDeleteContents *somTD_WPFolder_wpDeleteContents;
typedef BOOL   SOMLINK somTP_WPFolder_wpSetFldrDetailsClass(WPFolder *somSelf, 
		M_WPObject* Class);
typedef somTP_WPFolder_wpSetFldrDetailsClass *somTD_WPFolder_wpSetFldrDetailsClass;
typedef M_WPObject*   SOMLINK somTP_WPFolder_wpQueryFldrDetailsClass(WPFolder *somSelf);
typedef somTP_WPFolder_wpQueryFldrDetailsClass *somTD_WPFolder_wpQueryFldrDetailsClass;
typedef BOOL   SOMLINK somTP_WPFolder_wpSearchFolder(WPFolder *somSelf, 
		PSZ pszName, 
		ULONG ulSearchType, 
		ULONG ulLen, 
		PSEARCH_INFO pInfo, 
		WPFolder* ResultFolder);
typedef somTP_WPFolder_wpSearchFolder *somTD_WPFolder_wpSearchFolder;
typedef BOOL   SOMLINK somTP_WPFolder_wpContainsFolders(WPFolder *somSelf, 
		BOOL* pfSubFolders);
typedef somTP_WPFolder_wpContainsFolders *somTD_WPFolder_wpContainsFolders;
typedef WPObject*   SOMLINK somTP_WPFolder_wpQueryOpenFolders(WPFolder *somSelf, 
		ULONG ulOption);
typedef somTP_WPFolder_wpQueryOpenFolders *somTD_WPFolder_wpQueryOpenFolders;
typedef BOOL   SOMLINK somTP_WPFolder_wpModifyFldrFlags(WPFolder *somSelf, 
		ULONG ulFlags, 
		ULONG ulFlagMask);
typedef somTP_WPFolder_wpModifyFldrFlags *somTD_WPFolder_wpModifyFldrFlags;
typedef BOOL   SOMLINK somTP_WPFolder_wpAddToContent(WPFolder *somSelf, 
		WPObject* Object);
typedef somTP_WPFolder_wpAddToContent *somTD_WPFolder_wpAddToContent;
typedef BOOL   SOMLINK somTP_WPFolder_wpDeleteFromContent(WPFolder *somSelf, 
		WPObject* Object);
typedef somTP_WPFolder_wpDeleteFromContent *somTD_WPFolder_wpDeleteFromContent;
typedef BOOL   SOMLINK somTP_WPFolder_wpSetDetailsColumnVisibility(WPFolder *somSelf, 
		ULONG index, 
		BOOL Visible);
typedef somTP_WPFolder_wpSetDetailsColumnVisibility *somTD_WPFolder_wpSetDetailsColumnVisibility;
typedef BOOL   SOMLINK somTP_WPFolder_wpIsDetailsColumnVisible(WPFolder *somSelf, 
		ULONG index);
typedef somTP_WPFolder_wpIsDetailsColumnVisible *somTD_WPFolder_wpIsDetailsColumnVisible;
typedef BOOL   SOMLINK somTP_WPFolder_wpSetFldrSortClass(WPFolder *somSelf, 
		M_WPObject* Class);
typedef somTP_WPFolder_wpSetFldrSortClass *somTD_WPFolder_wpSetFldrSortClass;
typedef M_WPObject*   SOMLINK somTP_WPFolder_wpQueryFldrSortClass(WPFolder *somSelf);
typedef somTP_WPFolder_wpQueryFldrSortClass *somTD_WPFolder_wpQueryFldrSortClass;
typedef BOOL   SOMLINK somTP_WPFolder_wpSetSortAttribAvailable(WPFolder *somSelf, 
		ULONG index, 
		BOOL Available);
typedef somTP_WPFolder_wpSetSortAttribAvailable *somTD_WPFolder_wpSetSortAttribAvailable;
typedef BOOL   SOMLINK somTP_WPFolder_wpIsSortAttribAvailable(WPFolder *somSelf, 
		ULONG index);
typedef somTP_WPFolder_wpIsSortAttribAvailable *somTD_WPFolder_wpIsSortAttribAvailable;
typedef char*   SOMLINK somTP_WPFolder_wpQueryIconViewPos(WPFolder *somSelf);
typedef somTP_WPFolder_wpQueryIconViewPos *somTD_WPFolder_wpQueryIconViewPos;
typedef WPObject*   SOMLINK somTP_WPFolder_wpAddFirstChild(WPFolder *somSelf);
typedef somTP_WPFolder_wpAddFirstChild *somTD_WPFolder_wpAddFirstChild;
typedef BOOL   SOMLINK somTP_WPFolder_wpFlushNotifications(WPFolder *somSelf);
typedef somTP_WPFolder_wpFlushNotifications *somTD_WPFolder_wpFlushNotifications;
typedef BOOL   SOMLINK somTP_WPFolder_wpSetMenuBarVisibility(WPFolder *somSelf, 
		ULONG ulVisibility);
typedef somTP_WPFolder_wpSetMenuBarVisibility *somTD_WPFolder_wpSetMenuBarVisibility;
typedef ULONG   SOMLINK somTP_WPFolder_wpQueryMenuBarVisibility(WPFolder *somSelf);
typedef somTP_WPFolder_wpQueryMenuBarVisibility *somTD_WPFolder_wpQueryMenuBarVisibility;
typedef ULONG   SOMLINK somTP_WPFolder_wpQueryIconTextBackgroundColor(WPFolder *somSelf);
typedef somTP_WPFolder_wpQueryIconTextBackgroundColor *somTD_WPFolder_wpQueryIconTextBackgroundColor;
typedef void   SOMLINK somTP_WPFolder_wpSetIconTextBackgroundColor(WPFolder *somSelf, 
		ULONG ulColor, 
		BOOL fRefreshViews);
typedef somTP_WPFolder_wpSetIconTextBackgroundColor *somTD_WPFolder_wpSetIconTextBackgroundColor;
typedef ULONG   SOMLINK somTP_WPFolder_wpQueryIconTextColor(WPFolder *somSelf, 
		ULONG ulView);
typedef somTP_WPFolder_wpQueryIconTextColor *somTD_WPFolder_wpQueryIconTextColor;
typedef void   SOMLINK somTP_WPFolder_wpSetIconTextColor(WPFolder *somSelf, 
		ULONG ulColor, 
		ULONG ulView, 
		BOOL fRefreshViews);
typedef somTP_WPFolder_wpSetIconTextColor *somTD_WPFolder_wpSetIconTextColor;
typedef ULONG   SOMLINK somTP_WPFolder_wpQueryShadowTextColor(WPFolder *somSelf, 
		ULONG ulView);
typedef somTP_WPFolder_wpQueryShadowTextColor *somTD_WPFolder_wpQueryShadowTextColor;
typedef void   SOMLINK somTP_WPFolder_wpSetShadowTextColor(WPFolder *somSelf, 
		ULONG ulColor, 
		ULONG ulView, 
		BOOL fRefreshViews);
typedef somTP_WPFolder_wpSetShadowTextColor *somTD_WPFolder_wpSetShadowTextColor;
typedef ULONG   SOMLINK somTP_WPFolder_wpQueryIconTextVisibility(WPFolder *somSelf, 
		ULONG ulView);
typedef somTP_WPFolder_wpQueryIconTextVisibility *somTD_WPFolder_wpQueryIconTextVisibility;
typedef void   SOMLINK somTP_WPFolder_wpSetIconTextVisibility(WPFolder *somSelf, 
		ULONG ulOption, 
		ULONG ulView, 
		BOOL fRefreshViews);
typedef somTP_WPFolder_wpSetIconTextVisibility *somTD_WPFolder_wpSetIconTextVisibility;
typedef void   SOMLINK somTP_WPFolder_wpQueryFldrBackground(WPFolder *somSelf, 
		PSZ* ppszImageFileName, 
		ULONG* pulImageMode, 
		ULONG* pulScaleFactor, 
		ULONG* pulBackgroundType, 
		long* plBackgroundColor);
typedef somTP_WPFolder_wpQueryFldrBackground *somTD_WPFolder_wpQueryFldrBackground;
typedef void   SOMLINK somTP_WPFolder_wpSetFldrBackground(WPFolder *somSelf, 
		PSZ pszImageFileName, 
		ULONG ulImageMode, 
		ULONG ulScaleFactor, 
		ULONG ulBackgroundType, 
		long lBackgroundColor);
typedef somTP_WPFolder_wpSetFldrBackground *somTD_WPFolder_wpSetFldrBackground;

/*
 * -- Typedefs for Reintroduced Wrapper Methods
 */
typedef M_WPFolder*   SOMLINK somTP_WPFolder_somGetClass(WPFolder *somSelf);
typedef somTP_WPFolder_somGetClass *somTD_WPFolder_somGetClass;
}

#endif /* WPFolder_API */


/*
 * -- This emitter treats Method Tokens as Thunks by default.
 * -- Use the sc modifier "nothunks" to change this default
 */
#undef somresolve_
#define somresolve_(obj,mToken) ((somMethodProc*)((void)obj, mToken))

/*
 * -- The C++ Wrapper Class for WPFolder
 */
class WPFolder : public WPFileSystem
{
public:

// WPFolder::new creates the class object if necessary, and then uses somNewNoInit
// to allocate memory and create the object. Initialization is in ctors.
void *operator new(size_t)
{
   if (!_WPFolder) WPFolderNewClass(WPFolder_MajorVersion,WPFolder_MinorVersion);
   return (void*)
      SOM_Resolve(_WPFolder,SOMClass,somNewNoInit)
         ((SOMClass *)((void*)_WPFolder));
}

// WPFolder::delete uses somDestruct.
void operator delete(void * obj)
{
   if (obj && *(void**)obj) {
      SOM_Resolve(obj,SOMObject,somDestruct)
         ((SOMObject*)obj, 1, 0);
   }
}

WPFolder& operator=(WPFolder& fromObj)
{
   this->somDefaultAssign(0,(SOMObject*)((void*)&fromObj));
   return *this;
}

WPFolder()
{
   if (*(void**)this != 
       ((somParentMtabStructPtr)
        (WPFolderCClassData.parentMtab))->mtab)
      return;
   ((SOMObject*)((void*)this))->somDefaultInit(0);
}

WPFolder(WPFolder* fromObj)
{
   if (*(void**)this != 
       ((somParentMtabStructPtr)
        (WPFolderCClassData.parentMtab))->mtab)
      return;
   ((SOMObject*)((void*)this))->somDefaultCopyInit(0,((SOMObject*)((void*)fromObj)));
}

WPFolder(const WPFolder* fromObj)
{
   if (*(void**)this != 
       ((somParentMtabStructPtr)
        (WPFolderCClassData.parentMtab))->mtab)
      return;
   ((SOMObject*)((void*)this))->somDefaultConstCopyInit(0,((SOMObject*)((void*)fromObj)));
}


/* method: wpSetFldrFlags */
BOOL   wpSetFldrFlags(ULONG ulFlags)
{
   return SOM_ResolveD(this,WPFolder,WPFolder,wpSetFldrFlags)
	(this,ulFlags);
}


/* method: wpQueryFldrFlags */
ULONG   wpQueryFldrFlags()
{
   return SOM_ResolveD(this,WPFolder,WPFolder,wpQueryFldrFlags)
	(this);
}


/* method: wpSetFldrFont */
BOOL   wpSetFldrFont(PSZ pszFont, 
		ULONG ulView)
{
   return SOM_ResolveD(this,WPFolder,WPFolder,wpSetFldrFont)
	(this,pszFont,ulView);
}


/* method: wpQueryFldrFont */
PSZ   wpQueryFldrFont(ULONG ulView)
{
   return SOM_ResolveD(this,WPFolder,WPFolder,wpQueryFldrFont)
	(this,ulView);
}


/* method: wpSetFldrAttr */
BOOL   wpSetFldrAttr(ULONG Attr, 
		ULONG ulView)
{
   return SOM_ResolveD(this,WPFolder,WPFolder,wpSetFldrAttr)
	(this,Attr,ulView);
}


/* method: wpQueryFldrAttr */
ULONG   wpQueryFldrAttr(ULONG ulView)
{
   return SOM_ResolveD(this,WPFolder,WPFolder,wpQueryFldrAttr)
	(this,ulView);
}


/* method: wpSetNextIconPos */
BOOL   wpSetNextIconPos(PPOINTL pptl)
{
   return SOM_ResolveD(this,WPFolder,WPFolder,wpSetNextIconPos)
	(this,pptl);
}


/* method: wpQueryNextIconPos */
PPOINTL   wpQueryNextIconPos()
{
   return SOM_ResolveD(this,WPFolder,WPFolder,wpQueryNextIconPos)
	(this);
}


/* method: wpPopulate */
BOOL   wpPopulate(ULONG ulReserved, 
		PSZ pszPath, 
		BOOL fFoldersOnly)
{
   return SOM_ResolveD(this,WPFolder,WPFolder,wpPopulate)
	(this,ulReserved,pszPath,fFoldersOnly);
}


/* method: wpQueryContent */
WPObject*   wpQueryContent(WPObject* Object, 
		ULONG ulOption)
{
   return SOM_ResolveD(this,WPFolder,WPFolder,wpQueryContent)
	(this,Object,ulOption);
}


/* method: wpAddFolderView1Page */
ULONG   wpAddFolderView1Page(HWND hwndNotebook)
{
   return SOM_ResolveD(this,WPFolder,WPFolder,wpAddFolderView1Page)
	(this,hwndNotebook);
}


/* method: wpAddFolderView2Page */
ULONG   wpAddFolderView2Page(HWND hwndNotebook)
{
   return SOM_ResolveD(this,WPFolder,WPFolder,wpAddFolderView2Page)
	(this,hwndNotebook);
}


/* method: wpAddFolderView3Page */
ULONG   wpAddFolderView3Page(HWND hwndNotebook)
{
   return SOM_ResolveD(this,WPFolder,WPFolder,wpAddFolderView3Page)
	(this,hwndNotebook);
}


/* method: wpAddFolderIncludePage */
ULONG   wpAddFolderIncludePage(HWND hwndNotebook)
{
   return SOM_ResolveD(this,WPFolder,WPFolder,wpAddFolderIncludePage)
	(this,hwndNotebook);
}


/* method: wpAddFolderSortPage */
ULONG   wpAddFolderSortPage(HWND hwndNotebook)
{
   return SOM_ResolveD(this,WPFolder,WPFolder,wpAddFolderSortPage)
	(this,hwndNotebook);
}


/* method: wpAddFolderBackgroundPage */
ULONG   wpAddFolderBackgroundPage(HWND hwndNotebook)
{
   return SOM_ResolveD(this,WPFolder,WPFolder,wpAddFolderBackgroundPage)
	(this,hwndNotebook);
}


/* method: wpAddFolderMenu2Page */
ULONG   wpAddFolderMenu2Page(HWND hwndNotebook)
{
   return SOM_ResolveD(this,WPFolder,WPFolder,wpAddFolderMenu2Page)
	(this,hwndNotebook);
}


/* method: wpAddFolderSelfClosePage */
ULONG   wpAddFolderSelfClosePage(HWND hwndNotebook)
{
   return SOM_ResolveD(this,WPFolder,WPFolder,wpAddFolderSelfClosePage)
	(this,hwndNotebook);
}


/* method: wpInitIconPosData */
BOOL   wpInitIconPosData()
{
   return SOM_ResolveD(this,WPFolder,WPFolder,wpInitIconPosData)
	(this);
}


/* method: wpFreeIconPosData */
void   wpFreeIconPosData()
{
   SOM_ResolveD(this,WPFolder,WPFolder,wpFreeIconPosData)
	(this);
}


/* method: wpStoreIconPosData */
BOOL   wpStoreIconPosData(PICONPOS pIconPos, 
		ULONG cbSize)
{
   return SOM_ResolveD(this,WPFolder,WPFolder,wpStoreIconPosData)
	(this,pIconPos,cbSize);
}


/* method: wpQueryIconPosition */
BOOL   wpQueryIconPosition(PSZ pszIdentity, 
		PPOINTL pptl, 
		PULONG pIndex)
{
   return SOM_ResolveD(this,WPFolder,WPFolder,wpQueryIconPosition)
	(this,pszIdentity,pptl,pIndex);
}


/* method: wpSetFldrSort */
BOOL   wpSetFldrSort(PVOID pSortRecord, 
		ULONG ulView, 
		ULONG ulType)
{
   return SOM_ResolveD(this,WPFolder,WPFolder,wpSetFldrSort)
	(this,pSortRecord,ulView,ulType);
}


/* method: wpQueryFldrSort */
PVOID   wpQueryFldrSort(ULONG ulView, 
		ULONG ulType)
{
   return SOM_ResolveD(this,WPFolder,WPFolder,wpQueryFldrSort)
	(this,ulView,ulType);
}


/* method: wpRestoreFldrRunObjs */
BOOL   wpRestoreFldrRunObjs()
{
   return SOM_ResolveD(this,WPFolder,WPFolder,wpRestoreFldrRunObjs)
	(this);
}


/* method: wpStoreFldrRunObjs */
BOOL   wpStoreFldrRunObjs(ULONG ulType)
{
   return SOM_ResolveD(this,WPFolder,WPFolder,wpStoreFldrRunObjs)
	(this,ulType);
}


/* method: wpHideFldrRunObjs */
BOOL   wpHideFldrRunObjs(BOOL fHide)
{
   return SOM_ResolveD(this,WPFolder,WPFolder,wpHideFldrRunObjs)
	(this,fHide);
}


/* method: wpDeleteContents */
ULONG   wpDeleteContents(ULONG fConfirmations)
{
   return SOM_ResolveD(this,WPFolder,WPFolder,wpDeleteContents)
	(this,fConfirmations);
}


/* method: wpSetFldrDetailsClass */
BOOL   wpSetFldrDetailsClass(M_WPObject* Class)
{
   return SOM_ResolveD(this,WPFolder,WPFolder,wpSetFldrDetailsClass)
	(this,Class);
}


/* method: wpQueryFldrDetailsClass */
M_WPObject*   wpQueryFldrDetailsClass()
{
   return SOM_ResolveD(this,WPFolder,WPFolder,wpQueryFldrDetailsClass)
	(this);
}


/* method: wpSearchFolder */
BOOL   wpSearchFolder(PSZ pszName, 
		ULONG ulSearchType, 
		ULONG ulLen, 
		PSEARCH_INFO pInfo, 
		WPFolder* ResultFolder)
{
   return SOM_ResolveD(this,WPFolder,WPFolder,wpSearchFolder)
	(this,pszName,ulSearchType,ulLen,pInfo,ResultFolder);
}


/* method: wpContainsFolders */
BOOL   wpContainsFolders(BOOL* pfSubFolders)
{
   return SOM_ResolveD(this,WPFolder,WPFolder,wpContainsFolders)
	(this,pfSubFolders);
}


/* method: wpQueryOpenFolders */
WPObject*   wpQueryOpenFolders(ULONG ulOption)
{
   return SOM_ResolveD(this,WPFolder,WPFolder,wpQueryOpenFolders)
	(this,ulOption);
}


/* method: wpModifyFldrFlags */
BOOL   wpModifyFldrFlags(ULONG ulFlags, 
		ULONG ulFlagMask)
{
   return SOM_ResolveD(this,WPFolder,WPFolder,wpModifyFldrFlags)
	(this,ulFlags,ulFlagMask);
}


/* method: wpAddToContent */
BOOL   wpAddToContent(WPObject* Object)
{
   return SOM_ResolveD(this,WPFolder,WPFolder,wpAddToContent)
	(this,Object);
}


/* method: wpDeleteFromContent */
BOOL   wpDeleteFromContent(WPObject* Object)
{
   return SOM_ResolveD(this,WPFolder,WPFolder,wpDeleteFromContent)
	(this,Object);
}


/* method: wpSetDetailsColumnVisibility */
BOOL   wpSetDetailsColumnVisibility(ULONG index, 
		BOOL Visible)
{
   return SOM_ResolveD(this,WPFolder,WPFolder,wpSetDetailsColumnVisibility)
	(this,index,Visible);
}


/* method: wpIsDetailsColumnVisible */
BOOL   wpIsDetailsColumnVisible(ULONG index)
{
   return SOM_ResolveD(this,WPFolder,WPFolder,wpIsDetailsColumnVisible)
	(this,index);
}


/* method: wpSetFldrSortClass */
BOOL   wpSetFldrSortClass(M_WPObject* Class)
{
   return SOM_ResolveD(this,WPFolder,WPFolder,wpSetFldrSortClass)
	(this,Class);
}


/* method: wpQueryFldrSortClass */
M_WPObject*   wpQueryFldrSortClass()
{
   return SOM_ResolveD(this,WPFolder,WPFolder,wpQueryFldrSortClass)
	(this);
}


/* method: wpSetSortAttribAvailable */
BOOL   wpSetSortAttribAvailable(ULONG index, 
		BOOL Available)
{
   return SOM_ResolveD(this,WPFolder,WPFolder,wpSetSortAttribAvailable)
	(this,index,Available);
}


/* method: wpIsSortAttribAvailable */
BOOL   wpIsSortAttribAvailable(ULONG index)
{
   return SOM_ResolveD(this,WPFolder,WPFolder,wpIsSortAttribAvailable)
	(this,index);
}


/* method: wpQueryIconViewPos */
char*   wpQueryIconViewPos()
{
   return SOM_ResolveD(this,WPFolder,WPFolder,wpQueryIconViewPos)
	(this);
}


/* method: wpAddFirstChild */
WPObject*   wpAddFirstChild()
{
   return SOM_ResolveD(this,WPFolder,WPFolder,wpAddFirstChild)
	(this);
}


/* method: wpFlushNotifications */
BOOL   wpFlushNotifications()
{
   return SOM_ResolveD(this,WPFolder,WPFolder,wpFlushNotifications)
	(this);
}


/* method: wpSetMenuBarVisibility */
BOOL   wpSetMenuBarVisibility(ULONG ulVisibility)
{
   return SOM_ResolveD(this,WPFolder,WPFolder,wpSetMenuBarVisibility)
	(this,ulVisibility);
}


/* method: wpQueryMenuBarVisibility */
ULONG   wpQueryMenuBarVisibility()
{
   return SOM_ResolveD(this,WPFolder,WPFolder,wpQueryMenuBarVisibility)
	(this);
}


/* method: wpQueryIconTextBackgroundColor */
ULONG   wpQueryIconTextBackgroundColor()
{
   return SOM_ResolveD(this,WPFolder,WPFolder,wpQueryIconTextBackgroundColor)
	(this);
}


/* method: wpSetIconTextBackgroundColor */
void   wpSetIconTextBackgroundColor(ULONG ulColor, 
		BOOL fRefreshViews)
{
   SOM_ResolveD(this,WPFolder,WPFolder,wpSetIconTextBackgroundColor)
	(this,ulColor,fRefreshViews);
}


/* method: wpQueryIconTextColor */
ULONG   wpQueryIconTextColor(ULONG ulView)
{
   return SOM_ResolveD(this,WPFolder,WPFolder,wpQueryIconTextColor)
	(this,ulView);
}


/* method: wpSetIconTextColor */
void   wpSetIconTextColor(ULONG ulColor, 
		ULONG ulView, 
		BOOL fRefreshViews)
{
   SOM_ResolveD(this,WPFolder,WPFolder,wpSetIconTextColor)
	(this,ulColor,ulView,fRefreshViews);
}


/* method: wpQueryShadowTextColor */
ULONG   wpQueryShadowTextColor(ULONG ulView)
{
   return SOM_ResolveD(this,WPFolder,WPFolder,wpQueryShadowTextColor)
	(this,ulView);
}


/* method: wpSetShadowTextColor */
void   wpSetShadowTextColor(ULONG ulColor, 
		ULONG ulView, 
		BOOL fRefreshViews)
{
   SOM_ResolveD(this,WPFolder,WPFolder,wpSetShadowTextColor)
	(this,ulColor,ulView,fRefreshViews);
}


/* method: wpQueryIconTextVisibility */
ULONG   wpQueryIconTextVisibility(ULONG ulView)
{
   return SOM_ResolveD(this,WPFolder,WPFolder,wpQueryIconTextVisibility)
	(this,ulView);
}


/* method: wpSetIconTextVisibility */
void   wpSetIconTextVisibility(ULONG ulOption, 
		ULONG ulView, 
		BOOL fRefreshViews)
{
   SOM_ResolveD(this,WPFolder,WPFolder,wpSetIconTextVisibility)
	(this,ulOption,ulView,fRefreshViews);
}


/* method: wpQueryFldrBackground */
void   wpQueryFldrBackground(PSZ* ppszImageFileName, 
		ULONG* pulImageMode, 
		ULONG* pulScaleFactor, 
		ULONG* pulBackgroundType, 
		long* plBackgroundColor)
{
   SOM_ResolveD(this,WPFolder,WPFolder,wpQueryFldrBackground)
	(this,ppszImageFileName,pulImageMode,pulScaleFactor,pulBackgroundType,plBackgroundColor);
}


/* method: wpSetFldrBackground */
void   wpSetFldrBackground(PSZ pszImageFileName, 
		ULONG ulImageMode, 
		ULONG ulScaleFactor, 
		ULONG ulBackgroundType, 
		long lBackgroundColor)
{
   SOM_ResolveD(this,WPFolder,WPFolder,wpSetFldrBackground)
	(this,pszImageFileName,ulImageMode,ulScaleFactor,ulBackgroundType,lBackgroundColor);
}


/*
 * Reintroduce inherited methods
 */

/* method: somGetClass */
M_WPFolder*  somGetClass()
{
/*
 *  Return the receiver's class.
 */
   return SOM_ResolveD(this,WPFolder,SOMObject,somGetClass)
	(this);
}



};   /* WPFolder */



#endif       /* SOM_WPFolder_xh */

#ifndef SOM_M_WPFolder_xh
#define SOM_M_WPFolder_xh

class M_WPFolder;

#define M_WPFolder_MajorVersion 1
#define M_WPFolder_MinorVersion 2

/* C++ SOM defs */
#include <somcls.xh>
#include <somcm.xh>

/* C++ parent defs */
#ifndef SOM_M_WPFileSystem_xh
#include <wpfsys.xh>
#endif

#ifndef M_WPFolder_API
#define M_WPFolder_API
/*
 * -- The Class API
 */

/*
 * Start of bindings for IDL types
 */


/*
 * End of bindings for IDL types.
 */

/*
 * -- M_WPFolder is a metaclass for WPFolder. Make sure WPFolder is known.
 */
class WPFolder;


/* A procedure to create the M_WPFolder Class */
SOMEXTERN SOMClass * SOMLINK M_WPFolderNewClass(
		integer4 majorVersion,
		integer4 minorVersion);

/* The API to the M_WPFolder class object, and the methods it introduces. */
SOMEXTERN struct M_WPFolderClassDataStructure {
	SOMClass *classObject;
	somMToken wpclsFolderPrivate1;
	somMToken wpclsFolderPrivate2;
	somMToken wpclsQueryOpenFolders;
	somMToken wpclsFolderPrivate3;
	somMToken wpclsQueryIconDataN;
	somMToken wpclsQueryIconN;
} SOMDLINK M_WPFolderClassData;
#define _M_WPFolder M_WPFolderClassData.classObject

/* The API to parentMtabs for M_WPFolder, and the instance data it introduces. */
SOMEXTERN struct M_WPFolderCClassDataStructure {
	somMethodTabs parentMtab;
	somDToken              instanceDataToken;
} SOMDLINK M_WPFolderCClassData;

/*
 * -- Typedefs for M_WPFolder Method Procedures
 */
SOMEXTERN {
typedef ULONG   SOMLINK somTP_M_WPFolder_wpclsQueryIconDataN(M_WPFolder *somSelf, 
		ICONINFO* pIconInfo, 
		ULONG ulIconIndex);
typedef somTP_M_WPFolder_wpclsQueryIconDataN *somTD_M_WPFolder_wpclsQueryIconDataN;
typedef HPOINTER   SOMLINK somTP_M_WPFolder_wpclsQueryIconN(M_WPFolder *somSelf, 
		ULONG ulIconIndex);
typedef somTP_M_WPFolder_wpclsQueryIconN *somTD_M_WPFolder_wpclsQueryIconN;
typedef WPFolder*   SOMLINK somTP_M_WPFolder_wpclsQueryOpenFolders(M_WPFolder *somSelf, 
		WPFolder* Folder, 
		ULONG ulOption, 
		BOOL fLock);
typedef somTP_M_WPFolder_wpclsQueryOpenFolders *somTD_M_WPFolder_wpclsQueryOpenFolders;

/*
 * -- Typedefs for Reintroduced Wrapper Methods
 */
typedef WPFolder*   SOMLINK somTP_M_WPFolder_somNew(M_WPFolder *somSelf);
typedef somTP_M_WPFolder_somNew *somTD_M_WPFolder_somNew;
}

#endif /* M_WPFolder_API */


/*
 * -- This emitter treats Method Tokens as Thunks by default.
 * -- Use the sc modifier "nothunks" to change this default
 */
#undef somresolve_
#define somresolve_(obj,mToken) ((somMethodProc*)((void)obj, mToken))

/*
 * -- The C++ Wrapper Class for M_WPFolder
 */
class M_WPFolder : public M_WPFileSystem
{
public:

// M_WPFolder::new creates the class object if necessary, and then uses somNewNoInit
// to allocate memory and create the object. Initialization is in ctors.
void *operator new(size_t)
{
   if (!_M_WPFolder) M_WPFolderNewClass(M_WPFolder_MajorVersion,M_WPFolder_MinorVersion);
   return (void*)
      SOM_Resolve(_M_WPFolder,SOMClass,somNewNoInit)
         ((SOMClass *)((void*)_M_WPFolder));
}

// M_WPFolder::delete uses somDestruct.
void operator delete(void * obj)
{
   if (obj && *(void**)obj) {
      SOM_Resolve(obj,SOMObject,somDestruct)
         ((SOMObject*)obj, 1, 0);
   }
}

M_WPFolder& operator=(M_WPFolder& fromObj)
{
   this->somDefaultAssign(0,(SOMObject*)((void*)&fromObj));
   return *this;
}

M_WPFolder()
{
   if (*(void**)this != 
       ((somParentMtabStructPtr)
        (M_WPFolderCClassData.parentMtab))->mtab)
      return;
   ((SOMObject*)((void*)this))->somDefaultInit(0);
}

M_WPFolder(M_WPFolder* fromObj)
{
   if (*(void**)this != 
       ((somParentMtabStructPtr)
        (M_WPFolderCClassData.parentMtab))->mtab)
      return;
   ((SOMObject*)((void*)this))->somDefaultCopyInit(0,((SOMObject*)((void*)fromObj)));
}

M_WPFolder(const M_WPFolder* fromObj)
{
   if (*(void**)this != 
       ((somParentMtabStructPtr)
        (M_WPFolderCClassData.parentMtab))->mtab)
      return;
   ((SOMObject*)((void*)this))->somDefaultConstCopyInit(0,((SOMObject*)((void*)fromObj)));
}


/* method: wpclsQueryIconDataN */
ULONG   wpclsQueryIconDataN(ICONINFO* pIconInfo, 
		ULONG ulIconIndex)
{
   return SOM_ResolveD(this,M_WPFolder,M_WPFolder,wpclsQueryIconDataN)
	(this,pIconInfo,ulIconIndex);
}


/* method: wpclsQueryIconN */
HPOINTER   wpclsQueryIconN(ULONG ulIconIndex)
{
   return SOM_ResolveD(this,M_WPFolder,M_WPFolder,wpclsQueryIconN)
	(this,ulIconIndex);
}


/* method: wpclsQueryOpenFolders */
WPFolder*   wpclsQueryOpenFolders(WPFolder* Folder, 
		ULONG ulOption, 
		BOOL fLock)
{
   return SOM_ResolveD(this,M_WPFolder,M_WPFolder,wpclsQueryOpenFolders)
	(this,Folder,ulOption,fLock);
}


/*
 * Reintroduce inherited methods
 */

/* method: somNew */
WPFolder*  somNew()
{
   return SOM_ResolveD(this,M_WPFolder,SOMClass,somNew)
	(this);
}



};   /* M_WPFolder */



#endif       /* SOM_M_WPFolder_xh */
