
/*
 * This file was generated by the SOM Compiler.
 * FileName: G:\cwpsh\rel\os2c\include\base\os2\wpnetgrp.xh.
 * Generated using:
 *     SOM Precompiler somipc: 2.29.1.14
 *     SOM Emitter emitxh: 2.43
 */

/*
 *   Module Header
 * 
 *   Module Name: WPNETGRP
 * 
 *   OS/2 Presentation Manager Workplace class definitions
 * 
 *   Copyright (c) International Business Machines Corporation 1991, 1992
 * 
 */


#ifndef SOM_WPNetgrp_xh
#define SOM_WPNetgrp_xh

class WPNetgrp;

#define WPNetgrp_MajorVersion 1
#define WPNetgrp_MinorVersion 2

/* C++ SOM defs */
#include <somcls.xh>
#include <somcm.xh>

/* C++ parent defs */
#ifndef SOM_WPFolder_xh
#include <wpfolder.xh>
#endif

#ifndef WPNetgrp_API
#define WPNetgrp_API
/*
 * -- The Class API
 */

/*
 * Start of bindings for IDL types
 */

class SOMClass;
class SOMObject;
class WPFolder;
class M_WPObject;
class WPObject;
class WPImageFile;
class M_WPFileSystem;
class M_WPFolder;
class M_WPNetgrp;

/*
 * End of bindings for IDL types.
 */

/* A procedure to create the WPNetgrp Class */
class M_WPNetgrp;
SOMEXTERN M_WPNetgrp * SOMLINK WPNetgrpNewClass(
		integer4 majorVersion,
		integer4 minorVersion);

/* The API to the WPNetgrp class object, and the methods it introduces. */
SOMEXTERN struct WPNetgrpClassDataStructure {
	M_WPNetgrp *classObject;
	somMToken wpAddNetworkPage;
	somMToken wpQueryNetIdentity;
	somMToken wpSetNetIdentity;
} SOMDLINK WPNetgrpClassData;
#define _WPNetgrp WPNetgrpClassData.classObject

/* The API to parentMtabs for WPNetgrp, and the instance data it introduces. */
SOMEXTERN struct WPNetgrpCClassDataStructure {
	somMethodTabs parentMtab;
	somDToken              instanceDataToken;
} SOMDLINK WPNetgrpCClassData;

/*
 * -- Typedefs for WPNetgrp Method Procedures
 */
SOMEXTERN {
typedef ULONG   SOMLINK somTP_WPNetgrp_wpAddNetworkPage(WPNetgrp *somSelf, 
		HWND hwndNotebook);
typedef somTP_WPNetgrp_wpAddNetworkPage *somTD_WPNetgrp_wpAddNetworkPage;
typedef PSZ   SOMLINK somTP_WPNetgrp_wpQueryNetIdentity(WPNetgrp *somSelf);
typedef somTP_WPNetgrp_wpQueryNetIdentity *somTD_WPNetgrp_wpQueryNetIdentity;
typedef BOOL   SOMLINK somTP_WPNetgrp_wpSetNetIdentity(WPNetgrp *somSelf, 
		PSZ pszNetIdentity);
typedef somTP_WPNetgrp_wpSetNetIdentity *somTD_WPNetgrp_wpSetNetIdentity;

/*
 * -- Typedefs for Reintroduced Wrapper Methods
 */
typedef M_WPNetgrp*   SOMLINK somTP_WPNetgrp_somGetClass(WPNetgrp *somSelf);
typedef somTP_WPNetgrp_somGetClass *somTD_WPNetgrp_somGetClass;
}

#endif /* WPNetgrp_API */


/*
 * -- This emitter treats Method Tokens as Thunks by default.
 * -- Use the sc modifier "nothunks" to change this default
 */
#undef somresolve_
#define somresolve_(obj,mToken) ((somMethodProc*)((void)obj, mToken))

/*
 * -- The C++ Wrapper Class for WPNetgrp
 */
class WPNetgrp : public WPFolder
{
public:

// WPNetgrp::new creates the class object if necessary, and then uses somNewNoInit
// to allocate memory and create the object. Initialization is in ctors.
void *operator new(size_t)
{
   if (!_WPNetgrp) WPNetgrpNewClass(WPNetgrp_MajorVersion,WPNetgrp_MinorVersion);
   return (void*)
      SOM_Resolve(_WPNetgrp,SOMClass,somNewNoInit)
         ((SOMClass *)((void*)_WPNetgrp));
}

// WPNetgrp::delete uses somDestruct.
void operator delete(void * obj)
{
   if (obj && *(void**)obj) {
      SOM_Resolve(obj,SOMObject,somDestruct)
         ((SOMObject*)obj, 1, 0);
   }
}

WPNetgrp& operator=(WPNetgrp& fromObj)
{
   this->somDefaultAssign(0,(SOMObject*)((void*)&fromObj));
   return *this;
}

WPNetgrp()
{
   if (*(void**)this != 
       ((somParentMtabStructPtr)
        (WPNetgrpCClassData.parentMtab))->mtab)
      return;
   ((SOMObject*)((void*)this))->somDefaultInit(0);
}

WPNetgrp(WPNetgrp* fromObj)
{
   if (*(void**)this != 
       ((somParentMtabStructPtr)
        (WPNetgrpCClassData.parentMtab))->mtab)
      return;
   ((SOMObject*)((void*)this))->somDefaultCopyInit(0,((SOMObject*)((void*)fromObj)));
}

WPNetgrp(const WPNetgrp* fromObj)
{
   if (*(void**)this != 
       ((somParentMtabStructPtr)
        (WPNetgrpCClassData.parentMtab))->mtab)
      return;
   ((SOMObject*)((void*)this))->somDefaultConstCopyInit(0,((SOMObject*)((void*)fromObj)));
}


/* method: wpAddNetworkPage */
ULONG   wpAddNetworkPage(HWND hwndNotebook)
{
   return SOM_ResolveD(this,WPNetgrp,WPNetgrp,wpAddNetworkPage)
	(this,hwndNotebook);
}


/* method: wpQueryNetIdentity */
PSZ   wpQueryNetIdentity()
{
   return SOM_ResolveD(this,WPNetgrp,WPNetgrp,wpQueryNetIdentity)
	(this);
}


/* method: wpSetNetIdentity */
BOOL   wpSetNetIdentity(PSZ pszNetIdentity)
{
   return SOM_ResolveD(this,WPNetgrp,WPNetgrp,wpSetNetIdentity)
	(this,pszNetIdentity);
}


/*
 * Reintroduce inherited methods
 */

/* method: somGetClass */
M_WPNetgrp*  somGetClass()
{
/*
 *  Return the receiver's class.
 */
   return SOM_ResolveD(this,WPNetgrp,SOMObject,somGetClass)
	(this);
}



};   /* WPNetgrp */



#endif       /* SOM_WPNetgrp_xh */

#ifndef SOM_M_WPNetgrp_xh
#define SOM_M_WPNetgrp_xh

class M_WPNetgrp;

#define M_WPNetgrp_MajorVersion 1
#define M_WPNetgrp_MinorVersion 2

/* C++ SOM defs */
#include <somcls.xh>
#include <somcm.xh>

/* C++ parent defs */
#ifndef SOM_M_WPFolder_xh
#include <wpfolder.xh>
#endif

#ifndef M_WPNetgrp_API
#define M_WPNetgrp_API
/*
 * -- The Class API
 */

/*
 * Start of bindings for IDL types
 */


/*
 * End of bindings for IDL types.
 */

/*
 * -- M_WPNetgrp is a metaclass for WPNetgrp. Make sure WPNetgrp is known.
 */
class WPNetgrp;


/* A procedure to create the M_WPNetgrp Class */
SOMEXTERN SOMClass * SOMLINK M_WPNetgrpNewClass(
		integer4 majorVersion,
		integer4 minorVersion);

/* The API to the M_WPNetgrp class object, and the methods it introduces. */
SOMEXTERN struct M_WPNetgrpClassDataStructure {
	SOMClass *classObject;
} SOMDLINK M_WPNetgrpClassData;
#define _M_WPNetgrp M_WPNetgrpClassData.classObject

/* The API to parentMtabs for M_WPNetgrp, and the instance data it introduces. */
SOMEXTERN struct M_WPNetgrpCClassDataStructure {
	somMethodTabs parentMtab;
	somDToken              instanceDataToken;
} SOMDLINK M_WPNetgrpCClassData;

/*
 * -- Typedefs for M_WPNetgrp Method Procedures
 */
SOMEXTERN {

/*
 * -- Typedefs for Reintroduced Wrapper Methods
 */
typedef WPNetgrp*   SOMLINK somTP_M_WPNetgrp_somNew(M_WPNetgrp *somSelf);
typedef somTP_M_WPNetgrp_somNew *somTD_M_WPNetgrp_somNew;
}

#endif /* M_WPNetgrp_API */


/*
 * -- This emitter treats Method Tokens as Thunks by default.
 * -- Use the sc modifier "nothunks" to change this default
 */
#undef somresolve_
#define somresolve_(obj,mToken) ((somMethodProc*)((void)obj, mToken))

/*
 * -- The C++ Wrapper Class for M_WPNetgrp
 */
class M_WPNetgrp : public M_WPFolder
{
public:

// M_WPNetgrp::new creates the class object if necessary, and then uses somNewNoInit
// to allocate memory and create the object. Initialization is in ctors.
void *operator new(size_t)
{
   if (!_M_WPNetgrp) M_WPNetgrpNewClass(M_WPNetgrp_MajorVersion,M_WPNetgrp_MinorVersion);
   return (void*)
      SOM_Resolve(_M_WPNetgrp,SOMClass,somNewNoInit)
         ((SOMClass *)((void*)_M_WPNetgrp));
}

// M_WPNetgrp::delete uses somDestruct.
void operator delete(void * obj)
{
   if (obj && *(void**)obj) {
      SOM_Resolve(obj,SOMObject,somDestruct)
         ((SOMObject*)obj, 1, 0);
   }
}

M_WPNetgrp& operator=(M_WPNetgrp& fromObj)
{
   this->somDefaultAssign(0,(SOMObject*)((void*)&fromObj));
   return *this;
}

M_WPNetgrp()
{
   if (*(void**)this != 
       ((somParentMtabStructPtr)
        (M_WPNetgrpCClassData.parentMtab))->mtab)
      return;
   ((SOMObject*)((void*)this))->somDefaultInit(0);
}

M_WPNetgrp(M_WPNetgrp* fromObj)
{
   if (*(void**)this != 
       ((somParentMtabStructPtr)
        (M_WPNetgrpCClassData.parentMtab))->mtab)
      return;
   ((SOMObject*)((void*)this))->somDefaultCopyInit(0,((SOMObject*)((void*)fromObj)));
}

M_WPNetgrp(const M_WPNetgrp* fromObj)
{
   if (*(void**)this != 
       ((somParentMtabStructPtr)
        (M_WPNetgrpCClassData.parentMtab))->mtab)
      return;
   ((SOMObject*)((void*)this))->somDefaultConstCopyInit(0,((SOMObject*)((void*)fromObj)));
}


/*
 * Reintroduce inherited methods
 */

/* method: somNew */
WPNetgrp*  somNew()
{
   return SOM_ResolveD(this,M_WPNetgrp,SOMClass,somNew)
	(this);
}



};   /* M_WPNetgrp */



#endif       /* SOM_M_WPNetgrp_xh */
